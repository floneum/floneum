name: windows

on:
  push:
    branches:
      - main
    paths:
      - interfaces/*/src/**
      - interfaces/*/examples/**
      - interfaces/*/Cargo.toml
      - models/*/src/**
      - models/*/examples/**
      - models/*/Cargo.toml
      - floneum/*/src/**
      - floneum/*/examples/**
      - floneum/*/Cargo.toml
      - fusor-ml/*/src/**
      - fusor-ml/*/examples/**
      - fusor-ml/*/Cargo.toml
      - src/**
      - .github/**
      - Cargo.toml

  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
    paths:
      - interfaces/*/src/**
      - interfaces/*/examples/**
      - interfaces/*/Cargo.toml
      - models/*/src/**
      - models/*/examples/**
      - models/*/Cargo.toml
      - floneum/*/src/**
      - floneum/*/examples/**
      - floneum/*/Cargo.toml
      - fusor-ml/*/src/**
      - fusor-ml/*/examples/**
      - fusor-ml/*/Cargo.toml
      - src/**
      - .github/**
      - Cargo.toml

# workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: github.event.pull_request.draft == false
    runs-on: windows-latest
    name: (${{ matrix.target }}, ${{ matrix.cfg_release_channel }})
    env:
      CFG_RELEASE_CHANNEL: ${{ matrix.cfg_release_channel }}
    environment: 
      name: OPENAI_API_KEY
    strategy:
      # https://help.github.com/en/actions/getting-started-with-github-actions/about-github-actions#usage-limits
      # There's a limit of 60 concurrent jobs across all repos in the rust-lang organization.
      # In order to prevent overusing too much of that 60 limit, we throttle the
      # number of rustfmt jobs that will run concurrently.
      # max-parallel:
      # fail-fast: false
      matrix:
        target: [x86_64-pc-windows-msvc]
        cfg_release_channel: [stable]

    steps:
      # The Windows runners have autocrlf enabled by default
      # which causes failures for some of rustfmt's line-ending sensitive tests
      - name: disable git eol translation
        run: git config --global core.autocrlf false

        # Run build
      - name: Install Rustup using win.rustup.rs
        run: |
          # Disable the download progress bar which can cause perf issues
          $ProgressPreference = "SilentlyContinue"
          Invoke-WebRequest https://win.rustup.rs/ -OutFile rustup-init.exe
          .\rustup-init.exe -y --default-host=x86_64-pc-windows-msvc --default-toolchain=none
          del rustup-init.exe
          rustup target add ${{ matrix.target }}
        shell: powershell

      - name: checkout
        uses: actions/checkout@v4

      - name: test
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: |
          rustc -Vv
          cargo -V
          set RUST_BACKTRACE=1
          cargo test --all --tests --features kalosm/language,kalosm/sound,kalosm/vision,kalosm/remote,kalosm/scrape --exclude kalosm-parse-macro  --exclude fusor-ml-core
        shell: cmd
