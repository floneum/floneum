warning: missing documentation for a struct
   --> models/kalosm-llama/src/lib.rs:293:1
    |
293 | pub struct InferenceSettings {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
note: the lint level is defined here
   --> models/kalosm-llama/src/lib.rs:27:9
    |
27  | #![warn(missing_docs)]
    |         ^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> models/kalosm-llama/src/lib.rs:313:5
    |
313 | /     pub fn new(
314 | |         prompt: impl Into<String>,
315 | |         session: LlamaSession,
316 | |         sampler: std::sync::Arc<std::sync::Mutex<dyn llm_samplers::prelude::Sampler>>,
...   |
319 | |         seed: Option<u64>,
320 | |     ) -> Self {
    | |_____________^

warning: missing documentation for a method
   --> models/kalosm-llama/src/language_model.rs:115:5
    |
115 |     pub fn new_session(&self) -> LlamaSession {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> models/kalosm-llama/src/language_model.rs:120:5
    |
120 | /     pub fn generate_structured_with_trie<'a, S, Constraints>(
121 | |         &'a mut self,
122 | |         session: &'a mut LlamaSession,
123 | |         text: &str,
...   |
131 | |         Constraints: CreateParserState + Send + 'static,
132 | |         S: Sampler + 'static,
    | |_____________________________^

warning: missing documentation for a struct field
  --> models/kalosm-llama/src/model.rs:69:5
   |
69 |     pub tokenizer: Arc<Tokenizer>,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> models/kalosm-llama/src/model.rs:356:5
    |
356 | /     pub fn _infer(
357 | |         &mut self,
358 | |         settings: InferenceSettings,
359 | |         mut on_token: Box<dyn FnMut(String) -> Result<(), LlamaModelError> + Send + Sync>,
360 | |         finished: &tokio::sync::oneshot::Sender<Result<(), LlamaModelError>>,
361 | |     ) -> Result<(), LlamaModelError> {
    | |____________________________________^

warning: missing documentation for a method
  --> models/kalosm-llama/src/session.rs:85:5
   |
85 |     pub fn deep_clone(&self) -> Self {
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a struct
   --> models/kalosm-llama/src/structured.rs:442:1
    |
442 | pub struct EvaluationTrie {
    | ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for an associated function
   --> models/kalosm-llama/src/structured.rs:454:5
    |
454 |     pub fn new() -> Self {
    |     ^^^^^^^^^^^^^^^^^^^^

warning: missing documentation for a method
   --> models/kalosm-llama/src/structured.rs:554:5
    |
554 |     pub fn graphvis(&self, tokenizer: &Tokenizer) -> String {
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: `kalosm-llama` (lib) generated 10 warnings
    Finished `release` profile [optimized] target(s) in 0.43s
warning: the following packages contain code that will be rejected by a future version of Rust: xml5ever v0.16.2
note: to see what the problems were, use the option `--future-incompat-report`, or run `cargo report future-incompatibilities --id 2`
     Running `/Users/evanalmloff/Desktop/Github/floneum/target/release/sygus --model qwen1.5b --grammar ./src/firstname.sl --task ./src/prompt --iterations 200`
parsed: [
    SetLogic(
        "SLIA",
    ),
    SynthFun(
        SynthFun {
            name: "f",
            args: [
                (
                    "name",
                    "String",
                ),
            ],
            ret_ty: "String",
            non_terminals: [],
            grammar: [
                (
                    "Start",
                    "String",
                    [
                        Atom(
                            Ident(
                                "ntString",
                            ),
                        ),
                    ],
                ),
                (
                    "ntString",
                    "String",
                    [
                        Atom(
                            Ident(
                                "name",
                            ),
                        ),
                        Atom(
                            String(
                                " ",
                            ),
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.++",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.replace",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.at",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "int.to.str",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.substr",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                            ],
                        ),
                    ],
                ),
                (
                    "ntInt",
                    "Int",
                    [
                        Atom(
                            Int(
                                0,
                            ),
                        ),
                        Atom(
                            Int(
                                1,
                            ),
                        ),
                        Atom(
                            Int(
                                2,
                            ),
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "+",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "-",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.len",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.to.int",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.indexof",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntInt",
                                    ),
                                ),
                            ],
                        ),
                    ],
                ),
                (
                    "ntBool",
                    "Bool",
                    [
                        Atom(
                            Bool(
                                true,
                            ),
                        ),
                        Atom(
                            Bool(
                                false,
                            ),
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.prefixof",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.suffixof",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                            ],
                        ),
                        List(
                            [
                                Atom(
                                    Ident(
                                        "str.contains",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                                Atom(
                                    Ident(
                                        "ntString",
                                    ),
                                ),
                            ],
                        ),
                    ],
                ),
            ],
        },
    ),
    DeclareVar(
        "name",
        "String",
    ),
    Constraint(
        List(
            [
                Atom(
                    Ident(
                        "=",
                    ),
                ),
                List(
                    [
                        Atom(
                            Ident(
                                "f",
                            ),
                        ),
                        Atom(
                            String(
                                "Nancy FreeHafer",
                            ),
                        ),
                    ],
                ),
                Atom(
                    String(
                        "Nancy",
                    ),
                ),
            ],
        ),
    ),
    Constraint(
        List(
            [
                Atom(
                    Ident(
                        "=",
                    ),
                ),
                List(
                    [
                        Atom(
                            Ident(
                                "f",
                            ),
                        ),
                        Atom(
                            String(
                                "Andrew Cencici",
                            ),
                        ),
                    ],
                ),
                Atom(
                    String(
                        "Andrew",
                    ),
                ),
            ],
        ),
    ),
    Constraint(
        List(
            [
                Atom(
                    Ident(
                        "=",
                    ),
                ),
                List(
                    [
                        Atom(
                            Ident(
                                "f",
                            ),
                        ),
                        Atom(
                            String(
                                "Jan Kotas",
                            ),
                        ),
                    ],
                ),
                Atom(
                    String(
                        "Jan",
                    ),
                ),
            ],
        ),
    ),
    Constraint(
        List(
            [
                Atom(
                    Ident(
                        "=",
                    ),
                ),
                List(
                    [
                        Atom(
                            Ident(
                                "f",
                            ),
                        ),
                        Atom(
                            String(
                                "Mariya Sergienko",
                            ),
                        ),
                    ],
                ),
                Atom(
                    String(
                        "Mariya",
                    ),
                ),
            ],
        ),
    ),
    CheckSynth,
]
Iteration 0
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 1
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 2
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 3
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 4
(define-fun f ((name String)) String (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 5
(define-fun f ((name String)) String (str.++ (str.at name 0) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 6
(define-fun f ((name String)) String (str.++ " " (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 7
(define-fun f ((name String)) String (str.substr name 0 
Skipping sampled token... Token Some("1") is invalid
probability: 1

Skipping sampled token... Token Some("2") is invalid
probability: 1

Skipping sampled token... Token Some("0") is invalid
probability: 1
(- 1 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 8
(define-fun f ((name String)) String (str.replace name name
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 9
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 10
(define-fun f ((name String)) String (str.++ (str.replace name name name) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 11
(define-fun f ((name String)) String (str.++ (str.substr name 1 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 12
(define-fun f ((name String)) String (str.++ (str.replace name name " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 13
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 14
(define-fun f ((name String)) String (str.++ (str.replace name " " " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 15
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 16
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 17
(define-fun f ((name String)) String (str.++ (str.replace " " " " name) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 18
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 19
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 0 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 20
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.replace name " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 21
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.replace name name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 22
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.++ " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 23
(define-fun f ((name String)) String (str.++ (str.++ " " name) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 24
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 25
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) " " "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 26
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 27
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr " " 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 28
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 29
(define-fun f ((name String)) String (str.++ (str.at name 1) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 30
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.replace " " name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 31
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.at name 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 32
(define-fun f ((name String)) String (str.++ (str.++ name " ") "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 33
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 34
(define-fun f ((name String)) String (str.replace name " " "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 35
(define-fun f ((name String)) String (str.++ (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1
 ") (str.replace " " " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 36
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 37
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 38
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.++ " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 39
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 40
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 41
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 42
(define-fun f ((name String)) String (str.++ (str.substr name 0 1)
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.at name 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 43
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 44
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.++ " " "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 45
(define-fun f ((name String)) String (str.++ (str.at name 0) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 46
(define-fun f ((name String)) String (str.++ (str.replace name name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1
 ") "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 47
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 48
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 49
(define-fun f ((name String)) String (str.++ (str.++ " " " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 50
(define-fun f ((name String)) String (str.++ (str.at name 0) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 51
(define-fun f ((name String)) String (str.++ (str.substr name 2 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 52
(define-fun f ((name String)) String (str.++ (str.++ "
Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
 " name) (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 53
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 54
(define-fun f ((name String)) String (str.++ (str.at name 0) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 55
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 56
(define-fun f ((name String)) String (str.++ (str.at name 2) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 57
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 58
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 59
(define-fun f ((name String)) String (str.++ (str.replace " " name " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 60
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 61
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.at name 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 62
(define-fun f ((name String)) String (str.++ (str.++ name " ") (int.to.str 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 63
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.replace name name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 64
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 65
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 0 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 66
(define-fun f ((name String)) String (str.++ (str.sub
Skipping sampled token... Token Some("st") is invalid
probability: 1
str name 0 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 67
(define-fun f ((name String)) String (str.replace (str.++ name " ") name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 68
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.++ " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 69
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.replace " " " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 70
(define-fun f ((name String)) String (str.++ (str.at name 1) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 71
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.at name 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 72
(define-fun f ((name String)) String (str.++ (str.substr name 1 2) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 73
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.at name 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 74
(define-fun f ((name String)) String (str.++ (str.at name 0) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 75
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 76
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 77
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.at " " 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 78
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.substr name 0 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 79
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 80
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.++ " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 81
(define-fun f ((name String)) String (str.++ (str.at name 1) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 82
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 83
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 84
(define-fun f ((name String)) String (str.++ " " (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 85
(define-fun f ((name String)) String (str.++ (str.replace name name name) (int.to.str 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 86
(define-fun f ((name String)) String (str.++ (str.at name 0) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 87
(define-fun f ((name String)) String (str.++ (str.substr " " 0 1) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 88
(define-fun f ((name String)) String (str.++ name (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 89
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) name
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 90
(define-fun f ((name String)) String (str.substr name 1 (str.len name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 91
(define-fun f ((name String)) String (str.++ " " (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 92
(define-fun f ((name String)) String (str.replace (str.at name 0) name
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 93
(define-fun f ((name String)) String (str.++ (str.replace name name " ") (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 94
(define-fun f ((name String)) String (str.++ (str.at " " 0) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 95
(define-fun f ((name String)) String (str.++ (str.replace name name name)
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.sub
Skipping sampled token... Token Some("st") is invalid
probability: 1
str name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 96
(define-fun f ((name String)) String (str.++ (str.replace name name " ") (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 97
(define-fun f ((name String)) String (str.++ (str.replace name name " ") "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 98
(define-fun f ((name String)) String (str.++ (str.replace " " name name) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 99
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 100
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.replace " " name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 101
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.substr name 0 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 102
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.replace " " name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 103
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.sub
Skipping sampled token... Token Some("st") is invalid
probability: 1
str name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 104
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.replace name " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 105
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.substr " " 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 106
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 107
(define-fun f ((name String)) String (str.replace (str.replace name name name) name
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 108
(define-fun f ((name String)) String (str.++ " " (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 109
(define-fun f ((name String)) String (str.at name 
Skipping sampled token... Token Some("0") is invalid
probability: 1

Skipping sampled token... Token Some("1") is invalid
probability: 1

Skipping sampled token... Token Some("2") is invalid
probability: 1
(- 1 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 110
(define-fun f ((name String)) String (str.substr name 0 (str.len name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 111
(define-fun f ((name String)) String (str.++ (str.replace name " " name) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 112
(define-fun f ((name String)) String (str.++ (str.replace name name name) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 113
(define-fun f ((name String)) String (str.++ (str.replace " " name " ") "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 114
(define-fun f ((name String)) String (str.++ (str.at name 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 115
(define-fun f ((name String)) String (str.++ (str.replace name "
Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
 " " ") "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 116
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.replace name name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 117
(define-fun f ((name String)) String (str.++ (str.substr name 0 2)
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 118
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 2 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 119
(define-fun f ((name String)) String (str.++ (str.replace " " name " ") (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 120
(define-fun f ((name String)) String (str.replace name (str.substr name 0 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 121
(define-fun f ((name String)) String (str.++ (str.replace " " name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1
 ")
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.replace " " name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 122
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 123
(define-fun f ((name String)) String (str.++ (str.++ name name) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 124
(define-fun f ((name String)) String (str.++ " " (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 125
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 1) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 126
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 1) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 127
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 1 1) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 128
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 1) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 129
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 1)
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 130
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 2) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 131
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.++ name " ") (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 132
(define-fun f ((name String)) String (str.++ (str.at name 0)
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 133
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) name (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 134
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) " "
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 135
(define-fun f ((name String)) String (str.++ name (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 136
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) name (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 137
(define-fun f ((name String)) String (str.replace name name (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 138
(define-fun f ((name String)) String (str.++ (str.substr name 0 0) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 139
(define-fun f ((name String)) String (str.++ (str.replace name name " ") (str.replace name name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 140
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.at name 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 141
(define-fun f ((name String)) String (str.++ (str.replace " " "
Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
 " " ") (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 142
(define-fun f ((name String)) String (str.++ (str.substr name 1 0) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 143
(define-fun f ((name String)) String (str.++ (str.replace name name name) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 144
(define-fun f ((name String)) String (str.substr name 1 
Skipping sampled token... Token Some("1") is invalid
probability: 1

Skipping sampled token... Token Some("2") is invalid
probability: 1

Skipping sampled token... Token Some("0") is invalid
probability: 1
(- 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 145
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.replace " " " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 146
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.replace name name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 147
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.at name 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 148
(define-fun f ((name String)) String (str.++ (str.at name 1) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 149
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 150
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 151
(define-fun f ((name String)) String (str.++ (str.++ " " name) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 152
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.at name 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 153
(define-fun f ((name String)) String (str.++ (str.at name 2) (str.substr name 0 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 154
(define-fun f ((name String)) String (str.replace (str.++ " " name) " "
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 155
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.replace name " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 156
(define-fun f ((name String)) String (str.++ (str.++ " " name)
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.replace " " name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 157
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.++ name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 158
(define-fun f ((name String)) String (str.++ (str.at name 1) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 159
(define-fun f ((name String)) String (str.++ (str.replace "
Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
 " name " ") (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 160
(define-fun f ((name String)) String (str.++ " " (str.replace name " " "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 161
(define-fun f ((name String)) String (str.++ name (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 162
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 1) (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 163
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) (str.substr name 0 2) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 164
(define-fun f ((name String)) String (str.replace (str.substr name 0 1) name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 165
(define-fun f ((name String)) String (str.replace (str.substr name 0 2) " " "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 166
(define-fun f ((name String)) String (str.replace name "
Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
 "
Skipping sampled token... Token Some("Ġname") is invalid
probability: 1
 (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 167
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.replace " " " " name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 168
(define-fun f ((name String)) String (str.++ (str.at name 0) (str.at name 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 169
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.sub
Skipping sampled token... Token Some("st") is invalid
probability: 1
str name 1 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 170
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.substr name 2 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 171
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.substr name 1 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 172
(define-fun f ((name String)) String (str.++ (str.at name 1) (str.at name 0
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 173
(define-fun f ((name String)) String (str.++ (str.substr name 1 1) (str.++ name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 174
(define-fun f ((name String)) String (str.++ (str.at name 2) (str.replace name name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 175
(define-fun f ((name String)) String (str.++ (str.at name 1) (str.substr name 0 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 176
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.replace " " name "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ\")") is invalid
probability: 1
 
Skipping sampled token... Token Some("\")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 177
(define-fun f ((name String)) String (str.++ (str.++ name " ") (str.substr name 1 2
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 178
(define-fun f ((name String)) String (str.++ (str.substr name 0 1) (str.replace " " name name
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 179
(define-fun f ((name String)) String (str.++ (str.substr name 0 2) (str.substr name 1 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 180
(define-fun f ((name String)) String (str.++ (str.at name 2) "
Skipping sampled token... Token Some("Ġ\"") is invalid
probability: 1

Skipping sampled token... Token Some("Ġ") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 181
(define-fun f ((name String)) String (str.++ (int.to.str 0) (str.substr name 0 1
Skipping sampled token... Token Some(")") is invalid
probability: 1
Error: Sampler error: Sampler returned None
Iteration 182
(define-fun f ((name String)) String (str.substr name 0 (str.indexof name " " 0)))



generation 182:
List([Atom(Ident("str.substr")), Atom(Ident("name")), Atom(Int(0)), List([Atom(Ident("str.indexof")), Atom(Ident("name")), Atom(String(" ")), Atom(Int(0))])])
Checking constraints for expression: List([Atom(Ident("str.substr")), Atom(Ident("name")), Atom(Int(0)), List([Atom(Ident("str.indexof")), Atom(Ident("name")), Atom(String(" ")), Atom(Int(0))])])
  List([Atom(Ident("=")), List([Atom(Ident("f")), Atom(String("Nancy FreeHafer"))]), Atom(String("Nancy"))]) => true
  List([Atom(Ident("=")), List([Atom(Ident("f")), Atom(String("Andrew Cencici"))]), Atom(String("Andrew"))]) => true
  List([Atom(Ident("=")), List([Atom(Ident("f")), Atom(String("Jan Kotas"))]), Atom(String("Jan"))]) => true
  List([Atom(Ident("=")), List([Atom(Ident("f")), Atom(String("Mariya Sergienko"))]), Atom(String("Mariya"))]) => true
Valid solution found!
