[2m2025-09-10T02:01:46.253899Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T02:01:46.253951Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T02:01:47.025886Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T02:01:47.025925Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T02:01:47.290465Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T02:01:47.290626Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
{"generation":0,"metadata":{"sampler_time":{"secs":0,"nanos":100375},"constraint_time":{"secs":0,"nanos":420749},"parser_time":{"secs":0,"nanos":540631},"transformer_time":{"secs":0,"nanos":381347205},"trie_time":{"secs":0,"nanos":41256},"total_time":{"secs":0,"nanos":488332000}},"pass":false,"entropy":0.0,"entropy_diff":1000.0,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":1,"metadata":{"sampler_time":{"secs":0,"nanos":33919},"constraint_time":{"secs":0,"nanos":115001},"parser_time":{"secs":0,"nanos":178461},"transformer_time":{"secs":0,"nanos":155771083},"trie_time":{"secs":0,"nanos":44466},"total_time":{"secs":0,"nanos":199888334}},"pass":false,"entropy":2.311643947152036,"entropy_diff":-2.311643947152036,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \"New York\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,476,5529,2863,1715]}
{"generation":2,"metadata":{"sampler_time":{"secs":0,"nanos":27500},"constraint_time":{"secs":0,"nanos":112124},"parser_time":{"secs":0,"nanos":186705},"transformer_time":{"secs":0,"nanos":179692457},"trie_time":{"secs":0,"nanos":43326},"total_time":{"secs":0,"nanos":230910959}},"pass":false,"entropy":2.8921010895908883,"entropy_diff":-0.5804571424388523,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 1) \"New York\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,5529,2863,1715]}
{"generation":3,"metadata":{"sampler_time":{"secs":0,"nanos":15086},"constraint_time":{"secs":0,"nanos":40000},"parser_time":{"secs":0,"nanos":100957},"transformer_time":{"secs":0,"nanos":92564998},"trie_time":{"secs":0,"nanos":32918},"total_time":{"secs":0,"nanos":123297417}},"pass":false,"entropy":3.10418406081398,"entropy_diff":-0.21208297122309183,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ col1 col2)","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,664,33,664,34,25]}
{"generation":4,"metadata":{"sampler_time":{"secs":0,"nanos":65295},"constraint_time":{"secs":0,"nanos":177581},"parser_time":{"secs":0,"nanos":337297},"transformer_time":{"secs":0,"nanos":296992167},"trie_time":{"secs":0,"nanos":70542},"total_time":{"secs":0,"nanos":382935959}},"pass":false,"entropy":4.124377306301972,"entropy_diff":-1.020193245487992,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col2 \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,34,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":5,"metadata":{"sampler_time":{"secs":0,"nanos":39500},"constraint_time":{"secs":0,"nanos":350667},"parser_time":{"secs":0,"nanos":286911},"transformer_time":{"secs":0,"nanos":238991375},"trie_time":{"secs":0,"nanos":73504},"total_time":{"secs":0,"nanos":305218625}},"pass":false,"entropy":4.327587287890828,"entropy_diff":-0.20320998158885573,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 1 1) \"New York\") \"New York\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,5529,2863,1715,476,5529,2863,1715]}
{"generation":6,"metadata":{"sampler_time":{"secs":0,"nanos":66419},"constraint_time":{"secs":0,"nanos":356876},"parser_time":{"secs":0,"nanos":380539},"transformer_time":{"secs":0,"nanos":297550792},"trie_time":{"secs":0,"nanos":71925},"total_time":{"secs":0,"nanos":389551125}},"pass":false,"entropy":4.260721719596046,"entropy_diff":0.06686556829478185,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col2 0 1) \" \") (str.replace col2 col2 \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,34,476,5529,2863,11121]}
{"generation":7,"metadata":{"sampler_time":{"secs":0,"nanos":35421},"constraint_time":{"secs":0,"nanos":103169},"parser_time":{"secs":0,"nanos":252002},"transformer_time":{"secs":0,"nanos":223231500},"trie_time":{"secs":0,"nanos":70000},"total_time":{"secs":0,"nanos":292690792}},"pass":false,"entropy":4.206440469806603,"entropy_diff":0.05428124978944293,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,34,1292]}
{"generation":8,"metadata":{"sampler_time":{"secs":0,"nanos":135250},"constraint_time":{"secs":0,"nanos":8682499},"parser_time":{"secs":0,"nanos":988423},"transformer_time":{"secs":0,"nanos":706877917},"trie_time":{"secs":0,"nanos":100003},"total_time":{"secs":0,"nanos":915365083}},"pass":false,"entropy":4.517592101000075,"entropy_diff":-0.31115163119347145,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr (str.substr col1 (str.indexof col1 \"New York\" 1) 1) 1 1) \"New York\") (str.++ (str.substr (str.substr col2 (str.indexof col2 \"New York\" 1) 1) 1 1) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,25,216,33,25,216,33,216,33,25,476,5529,2863,1715,365,1321,30,11444,365,1321,30,4103,1321,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,5529,2863,18,216,33,25,216,33,25,216,33,216,33,25,476,5529,2863,11121]}
{"generation":9,"metadata":{"sampler_time":{"secs":0,"nanos":45128},"constraint_time":{"secs":0,"nanos":134123},"parser_time":{"secs":0,"nanos":320456},"transformer_time":{"secs":0,"nanos":306075294},"trie_time":{"secs":0,"nanos":99412},"total_time":{"secs":0,"nanos":397451333}},"pass":false,"entropy":4.618954310410436,"entropy_diff":-0.101362209410361,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":10,"metadata":{"sampler_time":{"secs":0,"nanos":100458},"constraint_time":{"secs":0,"nanos":1680999},"parser_time":{"secs":0,"nanos":608672},"transformer_time":{"secs":0,"nanos":464906165},"trie_time":{"secs":0,"nanos":137536},"total_time":{"secs":0,"nanos":603304250}},"pass":false,"entropy":4.6123281278902315,"entropy_diff":0.0066261825202040825,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col1 \" \" 1) 1) \"New York\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,5529,2863,1715,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":11,"metadata":{"sampler_time":{"secs":0,"nanos":43004},"constraint_time":{"secs":0,"nanos":84665},"parser_time":{"secs":0,"nanos":267753},"transformer_time":{"secs":0,"nanos":222668039},"trie_time":{"secs":0,"nanos":87919},"total_time":{"secs":0,"nanos":295421542}},"pass":false,"entropy":4.6039231097605295,"entropy_diff":0.008405018129701958,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,34,1292]}
{"generation":12,"metadata":{"sampler_time":{"secs":0,"nanos":25086},"constraint_time":{"secs":0,"nanos":105875},"parser_time":{"secs":0,"nanos":231373},"transformer_time":{"secs":0,"nanos":223627872},"trie_time":{"secs":0,"nanos":100169},"total_time":{"secs":0,"nanos":294474416}},"pass":false,"entropy":4.585485739458416,"entropy_diff":0.018437370302113898,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,33,1292]}
{"generation":13,"metadata":{"sampler_time":{"secs":0,"nanos":60747},"constraint_time":{"secs":0,"nanos":463203},"parser_time":{"secs":0,"nanos":401954},"transformer_time":{"secs":0,"nanos":331735876},"trie_time":{"secs":0,"nanos":129208},"total_time":{"secs":0,"nanos":426684500}},"pass":false,"entropy":4.554191572354645,"entropy_diff":0.031294167103770754,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr \"New York\" 0 1) \"USA\") (str.substr \"New York\" 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,476,5529,2863,18,216,32,216,33,25,476,24842,1715,365,1321,30,4103,1321,476,5529,2863,18,216,33,216,33,1292]}
{"generation":14,"metadata":{"sampler_time":{"secs":0,"nanos":8622},"constraint_time":{"secs":0,"nanos":106333},"parser_time":{"secs":0,"nanos":161163},"transformer_time":{"secs":0,"nanos":155937292},"trie_time":{"secs":0,"nanos":95795},"total_time":{"secs":0,"nanos":203062500}},"pass":false,"entropy":4.511194795965734,"entropy_diff":0.04299677638891097,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col2 col1) \"New York\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,34,664,33,25,476,5529,2863,1715]}
{"generation":15,"metadata":{"sampler_time":{"secs":0,"nanos":73160},"constraint_time":{"secs":0,"nanos":329249},"parser_time":{"secs":0,"nanos":431376},"transformer_time":{"secs":0,"nanos":380162670},"trie_time":{"secs":0,"nanos":148582},"total_time":{"secs":0,"nanos":491855959}},"pass":false,"entropy":4.486015116881779,"entropy_diff":0.02517967908395491,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":16,"metadata":{"sampler_time":{"secs":0,"nanos":32332},"constraint_time":{"secs":0,"nanos":268171},"parser_time":{"secs":0,"nanos":300999},"transformer_time":{"secs":0,"nanos":214713208},"trie_time":{"secs":0,"nanos":164503},"total_time":{"secs":0,"nanos":279507041}},"pass":false,"entropy":4.470276501818289,"entropy_diff":0.015738615063489725,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.at col1 0) \"New York\") \"USA\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,261,664,33,216,32,25,476,5529,2863,1715,476,24842,1715]}
{"generation":17,"metadata":{"sampler_time":{"secs":0,"nanos":36420},"constraint_time":{"secs":0,"nanos":92957},"parser_time":{"secs":0,"nanos":298082},"transformer_time":{"secs":0,"nanos":223755206},"trie_time":{"secs":0,"nanos":124202},"total_time":{"secs":0,"nanos":294096459}},"pass":false,"entropy":4.446130816091351,"entropy_diff":0.024145685726938204,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,476,5529,2863,11121]}
{"generation":18,"metadata":{"sampler_time":{"secs":0,"nanos":20582},"constraint_time":{"secs":0,"nanos":331297},"parser_time":{"secs":0,"nanos":252207},"transformer_time":{"secs":0,"nanos":230248623},"trie_time":{"secs":0,"nanos":170668},"total_time":{"secs":0,"nanos":296411000}},"pass":false,"entropy":4.417661924236106,"entropy_diff":0.028468891855244927,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") \"New York\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,476,5529,2863,1715]}
{"generation":19,"metadata":{"sampler_time":{"secs":0,"nanos":37586},"constraint_time":{"secs":0,"nanos":301503},"parser_time":{"secs":0,"nanos":318965},"transformer_time":{"secs":0,"nanos":239115124},"trie_time":{"secs":0,"nanos":163538},"total_time":{"secs":0,"nanos":308650250}},"pass":false,"entropy":4.410772527035806,"entropy_diff":0.006889397200300351,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 2 1) \"New York\") \"New York\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,5529,2863,1715,476,5529,2863,1715]}
{"generation":20,"metadata":{"sampler_time":{"secs":0,"nanos":16330},"constraint_time":{"secs":0,"nanos":94960},"parser_time":{"secs":0,"nanos":228704},"transformer_time":{"secs":0,"nanos":223613209},"trie_time":{"secs":0,"nanos":162881},"total_time":{"secs":0,"nanos":292797792}},"pass":false,"entropy":4.388667384940681,"entropy_diff":0.02210514209512482,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,33,1292]}
{"generation":21,"metadata":{"sampler_time":{"secs":0,"nanos":45251},"constraint_time":{"secs":0,"nanos":166041},"parser_time":{"secs":0,"nanos":383459},"transformer_time":{"secs":0,"nanos":307880918},"trie_time":{"secs":0,"nanos":167619},"total_time":{"secs":0,"nanos":400668708}},"pass":false,"entropy":4.372680491041213,"entropy_diff":0.015986893899468058,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.substr col1 0 1) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,5529,2863,11121]}
{"generation":22,"metadata":{"sampler_time":{"secs":0,"nanos":42871},"constraint_time":{"secs":0,"nanos":399541},"parser_time":{"secs":0,"nanos":302874},"transformer_time":{"secs":0,"nanos":307105666},"trie_time":{"secs":0,"nanos":197959},"total_time":{"secs":0,"nanos":396091125}},"pass":false,"entropy":4.358939250018012,"entropy_diff":0.013741241023200956,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,33,216,34,1292]}
{"generation":23,"metadata":{"sampler_time":{"secs":0,"nanos":62416},"constraint_time":{"secs":0,"nanos":344666},"parser_time":{"secs":0,"nanos":315132},"transformer_time":{"secs":0,"nanos":307970709},"trie_time":{"secs":0,"nanos":208956},"total_time":{"secs":0,"nanos":399250958}},"pass":false,"entropy":4.358058334011799,"entropy_diff":0.0008809160062126509,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,34,1292]}
{"generation":24,"metadata":{"sampler_time":{"secs":0,"nanos":27161},"constraint_time":{"secs":0,"nanos":367498},"parser_time":{"secs":0,"nanos":415128},"transformer_time":{"secs":0,"nanos":299774875},"trie_time":{"secs":0,"nanos":209996},"total_time":{"secs":0,"nanos":390407208}},"pass":false,"entropy":4.357062595514882,"entropy_diff":0.0009957384969174754,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,476,5529,2863,11121]}
{"generation":25,"metadata":{"sampler_time":{"secs":0,"nanos":65998},"constraint_time":{"secs":0,"nanos":340790},"parser_time":{"secs":0,"nanos":317795},"transformer_time":{"secs":0,"nanos":308123168},"trie_time":{"secs":0,"nanos":211456},"total_time":{"secs":0,"nanos":398170041}},"pass":false,"entropy":4.356207929830011,"entropy_diff":0.0008546656848711365,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,32,216,33,1292]}
{"generation":26,"metadata":{"sampler_time":{"secs":0,"nanos":52466},"constraint_time":{"secs":0,"nanos":363042},"parser_time":{"secs":0,"nanos":290879},"transformer_time":{"secs":0,"nanos":307726584},"trie_time":{"secs":0,"nanos":206585},"total_time":{"secs":0,"nanos":401757709}},"pass":false,"entropy":4.355549839010402,"entropy_diff":0.0006580908196083257,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,216,33,1292]}
{"generation":27,"metadata":{"sampler_time":{"secs":0,"nanos":64041},"constraint_time":{"secs":0,"nanos":413290},"parser_time":{"secs":0,"nanos":431037},"transformer_time":{"secs":0,"nanos":383175998},"trie_time":{"secs":0,"nanos":229961},"total_time":{"secs":0,"nanos":499830584}},"pass":false,"entropy":4.355288349988464,"entropy_diff":0.0002614890219385657,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":28,"metadata":{"sampler_time":{"secs":0,"nanos":78747},"constraint_time":{"secs":0,"nanos":409002},"parser_time":{"secs":0,"nanos":433917},"transformer_time":{"secs":0,"nanos":383231998},"trie_time":{"secs":0,"nanos":230905},"total_time":{"secs":0,"nanos":497172541}},"pass":false,"entropy":4.355149631233569,"entropy_diff":0.0001387187548944624,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,1292]}
{"generation":29,"metadata":{"sampler_time":{"secs":0,"nanos":63456},"constraint_time":{"secs":0,"nanos":345126},"parser_time":{"secs":0,"nanos":316045},"transformer_time":{"secs":0,"nanos":299605625},"trie_time":{"secs":0,"nanos":235166},"total_time":{"secs":0,"nanos":393503416}},"pass":false,"entropy":4.3551013201136755,"entropy_diff":0.00004831111989389569,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,664,34,1292]}
{"generation":30,"metadata":{"sampler_time":{"secs":0,"nanos":60124},"constraint_time":{"secs":0,"nanos":329751},"parser_time":{"secs":0,"nanos":425079},"transformer_time":{"secs":0,"nanos":383466333},"trie_time":{"secs":0,"nanos":254998},"total_time":{"secs":0,"nanos":496922708}},"pass":false,"entropy":4.355018477133374,"entropy_diff":0.00008284298030147852,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,1292]}
{"generation":31,"metadata":{"sampler_time":{"secs":0,"nanos":60333},"constraint_time":{"secs":0,"nanos":377132},"parser_time":{"secs":0,"nanos":475791},"transformer_time":{"secs":0,"nanos":382850589},"trie_time":{"secs":0,"nanos":256749},"total_time":{"secs":0,"nanos":497535333}},"pass":false,"entropy":4.354895092648762,"entropy_diff":0.00012338448461157725,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 1 1) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,5529,2863,11121]}
{"generation":32,"metadata":{"sampler_time":{"secs":0,"nanos":63744},"constraint_time":{"secs":0,"nanos":505700},"parser_time":{"secs":0,"nanos":566083},"transformer_time":{"secs":0,"nanos":450392706},"trie_time":{"secs":0,"nanos":269499},"total_time":{"secs":0,"nanos":584503875}},"pass":false,"entropy":4.354819079302259,"entropy_diff":0.00007601334650342295,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 \" \" \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,476,476,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":33,"metadata":{"sampler_time":{"secs":0,"nanos":42162},"constraint_time":{"secs":0,"nanos":338457},"parser_time":{"secs":0,"nanos":299539},"transformer_time":{"secs":0,"nanos":291159124},"trie_time":{"secs":0,"nanos":253087},"total_time":{"secs":0,"nanos":382118375}},"pass":false,"entropy":4.354790102928524,"entropy_diff":0.000028976373735112304,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,42934,1292]}
{"generation":34,"metadata":{"sampler_time":{"secs":0,"nanos":36954},"constraint_time":{"secs":0,"nanos":396914},"parser_time":{"secs":0,"nanos":318619},"transformer_time":{"secs":0,"nanos":308122962},"trie_time":{"secs":0,"nanos":266410},"total_time":{"secs":0,"nanos":405638625}},"pass":false,"entropy":4.354756472210525,"entropy_diff":0.00003363071799888928,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,34,216,33,1292]}
{"generation":35,"metadata":{"sampler_time":{"secs":0,"nanos":84787},"constraint_time":{"secs":0,"nanos":568582},"parser_time":{"secs":0,"nanos":571586},"transformer_time":{"secs":0,"nanos":452632796},"trie_time":{"secs":0,"nanos":288848},"total_time":{"secs":0,"nanos":596511541}},"pass":false,"entropy":4.354728130531395,"entropy_diff":0.00002834167912979524,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":36,"metadata":{"sampler_time":{"secs":0,"nanos":31543},"constraint_time":{"secs":0,"nanos":280123},"parser_time":{"secs":0,"nanos":383163},"transformer_time":{"secs":0,"nanos":299447957},"trie_time":{"secs":0,"nanos":252081},"total_time":{"secs":0,"nanos":398994333}},"pass":false,"entropy":4.3547169372807275,"entropy_diff":0.000011193250667673738,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,664,34,1292]}
{"generation":37,"metadata":{"sampler_time":{"secs":0,"nanos":74498},"constraint_time":{"secs":0,"nanos":353751},"parser_time":{"secs":0,"nanos":336247},"transformer_time":{"secs":0,"nanos":308140378},"trie_time":{"secs":0,"nanos":274080},"total_time":{"secs":0,"nanos":406863917}},"pass":false,"entropy":4.354697242782987,"entropy_diff":0.000019694497740196937,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,33,1292]}
{"generation":38,"metadata":{"sampler_time":{"secs":0,"nanos":38041},"constraint_time":{"secs":0,"nanos":351958},"parser_time":{"secs":0,"nanos":361752},"transformer_time":{"secs":0,"nanos":290456963},"trie_time":{"secs":0,"nanos":267579},"total_time":{"secs":0,"nanos":387803167}},"pass":false,"entropy":4.354679661063808,"entropy_diff":0.000017581719179204924,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 \" \" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,476,476,42934,1292]}
{"generation":39,"metadata":{"sampler_time":{"secs":0,"nanos":49544},"constraint_time":{"secs":0,"nanos":304752},"parser_time":{"secs":0,"nanos":398039},"transformer_time":{"secs":0,"nanos":374310165},"trie_time":{"secs":0,"nanos":300081},"total_time":{"secs":0,"nanos":493217666}},"pass":false,"entropy":4.354640811479365,"entropy_diff":0.00003884958444277942,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,1292]}
{"generation":40,"metadata":{"sampler_time":{"secs":0,"nanos":74998},"constraint_time":{"secs":0,"nanos":506085},"parser_time":{"secs":0,"nanos":511206},"transformer_time":{"secs":0,"nanos":416878290},"trie_time":{"secs":0,"nanos":302465},"total_time":{"secs":0,"nanos":550500791}},"pass":false,"entropy":4.354631488987897,"entropy_diff":9.32249146856634e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (+ (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,1292]}
{"generation":41,"metadata":{"sampler_time":{"secs":0,"nanos":58711},"constraint_time":{"secs":0,"nanos":349834},"parser_time":{"secs":0,"nanos":497627},"transformer_time":{"secs":0,"nanos":374951459},"trie_time":{"secs":0,"nanos":286500},"total_time":{"secs":0,"nanos":497236625}},"pass":false,"entropy":4.354611937632212,"entropy_diff":0.000019551355684654936,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":42,"metadata":{"sampler_time":{"secs":0,"nanos":48583},"constraint_time":{"secs":0,"nanos":283747},"parser_time":{"secs":0,"nanos":338748},"transformer_time":{"secs":0,"nanos":307409793},"trie_time":{"secs":0,"nanos":287549},"total_time":{"secs":0,"nanos":407055208}},"pass":false,"entropy":4.354605946972847,"entropy_diff":5.990659365018303e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,34,216,33,1292]}
{"generation":43,"metadata":{"sampler_time":{"secs":0,"nanos":41754},"constraint_time":{"secs":0,"nanos":346877},"parser_time":{"secs":0,"nanos":351999},"transformer_time":{"secs":0,"nanos":299787165},"trie_time":{"secs":0,"nanos":280046},"total_time":{"secs":0,"nanos":401030167}},"pass":false,"entropy":4.354580298063583,"entropy_diff":0.000025648909264042175,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col2 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,33,664,34,1292]}
{"generation":44,"metadata":{"sampler_time":{"secs":0,"nanos":55369},"constraint_time":{"secs":0,"nanos":404130},"parser_time":{"secs":0,"nanos":433783},"transformer_time":{"secs":0,"nanos":383609792},"trie_time":{"secs":0,"nanos":334089},"total_time":{"secs":0,"nanos":505007625}},"pass":false,"entropy":4.354558003286214,"entropy_diff":0.00002229477736914731,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292]}
{"generation":45,"metadata":{"sampler_time":{"secs":0,"nanos":51295},"constraint_time":{"secs":0,"nanos":624208},"parser_time":{"secs":0,"nanos":536451},"transformer_time":{"secs":0,"nanos":415725211},"trie_time":{"secs":0,"nanos":347043},"total_time":{"secs":0,"nanos":548125875}},"pass":false,"entropy":4.354552770281847,"entropy_diff":5.233004366722582e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (- (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,1292]}
{"generation":46,"metadata":{"sampler_time":{"secs":0,"nanos":17044},"constraint_time":{"secs":0,"nanos":348919},"parser_time":{"secs":0,"nanos":268631},"transformer_time":{"secs":0,"nanos":231474790},"trie_time":{"secs":0,"nanos":285413},"total_time":{"secs":0,"nanos":304719625}},"pass":false,"entropy":4.35454228708418,"entropy_diff":0.000010483197667277011,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") \"New York\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,476,5529,2863,1715]}
{"generation":47,"metadata":{"sampler_time":{"secs":0,"nanos":29123},"constraint_time":{"secs":0,"nanos":390709},"parser_time":{"secs":0,"nanos":355129},"transformer_time":{"secs":0,"nanos":299143789},"trie_time":{"secs":0,"nanos":316874},"total_time":{"secs":0,"nanos":395912542}},"pass":false,"entropy":4.354350221465362,"entropy_diff":0.0001920656188181269,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,476,5529,2863,11121]}
{"generation":48,"metadata":{"sampler_time":{"secs":0,"nanos":32627},"constraint_time":{"secs":0,"nanos":362919},"parser_time":{"secs":0,"nanos":317415},"transformer_time":{"secs":0,"nanos":306988542},"trie_time":{"secs":0,"nanos":327246},"total_time":{"secs":0,"nanos":402152041}},"pass":false,"entropy":4.354340159336027,"entropy_diff":0.000010062129335075554,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,32,1292]}
{"generation":49,"metadata":{"sampler_time":{"secs":0,"nanos":27456},"constraint_time":{"secs":0,"nanos":335580},"parser_time":{"secs":0,"nanos":287838},"transformer_time":{"secs":0,"nanos":282287295},"trie_time":{"secs":0,"nanos":309920},"total_time":{"secs":0,"nanos":369760167}},"pass":false,"entropy":4.35433476809656,"entropy_diff":5.391239466412401e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.at col1 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,261,664,33,216,32,1292]}
{"generation":50,"metadata":{"sampler_time":{"secs":0,"nanos":57792},"constraint_time":{"secs":0,"nanos":459835},"parser_time":{"secs":0,"nanos":516251},"transformer_time":{"secs":0,"nanos":382991626},"trie_time":{"secs":0,"nanos":383164},"total_time":{"secs":0,"nanos":497159875}},"pass":false,"entropy":4.354299255702506,"entropy_diff":0.00003551239405386042,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,33,25,216,33,1292]}
{"generation":51,"metadata":{"sampler_time":{"secs":0,"nanos":45876},"constraint_time":{"secs":0,"nanos":367417},"parser_time":{"secs":0,"nanos":557330},"transformer_time":{"secs":0,"nanos":450338047},"trie_time":{"secs":0,"nanos":367666},"total_time":{"secs":0,"nanos":585304208}},"pass":false,"entropy":4.354292744593147,"entropy_diff":6.511109359230716e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 (str.substr col1 (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":52,"metadata":{"sampler_time":{"secs":0,"nanos":39081},"constraint_time":{"secs":0,"nanos":307626},"parser_time":{"secs":0,"nanos":343373},"transformer_time":{"secs":0,"nanos":308331588},"trie_time":{"secs":0,"nanos":380874},"total_time":{"secs":0,"nanos":406464167}},"pass":false,"entropy":4.354287380104897,"entropy_diff":5.364488250059196e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,33,216,33,1292]}
{"generation":53,"metadata":{"sampler_time":{"secs":0,"nanos":44371},"constraint_time":{"secs":0,"nanos":329920},"parser_time":{"secs":0,"nanos":387582},"transformer_time":{"secs":0,"nanos":291250878},"trie_time":{"secs":0,"nanos":410955},"total_time":{"secs":0,"nanos":393774958}},"pass":false,"entropy":4.354280344198054,"entropy_diff":7.035906842922657e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,664,33,1292]}
{"generation":54,"metadata":{"sampler_time":{"secs":0,"nanos":39827},"constraint_time":{"secs":0,"nanos":352292},"parser_time":{"secs":0,"nanos":371955},"transformer_time":{"secs":0,"nanos":308148293},"trie_time":{"secs":0,"nanos":381290},"total_time":{"secs":0,"nanos":401355792}},"pass":false,"entropy":4.354274805524829,"entropy_diff":5.538673224947388e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,216,34,1292]}
{"generation":55,"metadata":{"sampler_time":{"secs":0,"nanos":50920},"constraint_time":{"secs":0,"nanos":457466},"parser_time":{"secs":0,"nanos":476245},"transformer_time":{"secs":0,"nanos":375463706},"trie_time":{"secs":0,"nanos":344710},"total_time":{"secs":0,"nanos":488109125}},"pass":false,"entropy":4.354270180947039,"entropy_diff":4.624577790046658e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace (str.substr col1 0 1) \" \" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,42934,1292]}
{"generation":56,"metadata":{"sampler_time":{"secs":0,"nanos":46624},"constraint_time":{"secs":0,"nanos":381206},"parser_time":{"secs":0,"nanos":486498},"transformer_time":{"secs":0,"nanos":382952251},"trie_time":{"secs":0,"nanos":386164},"total_time":{"secs":0,"nanos":492346959}},"pass":false,"entropy":4.354246009380613,"entropy_diff":0.000024171566426645086,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292]}
{"generation":57,"metadata":{"sampler_time":{"secs":0,"nanos":49079},"constraint_time":{"secs":0,"nanos":418422},"parser_time":{"secs":0,"nanos":465915},"transformer_time":{"secs":0,"nanos":391285004},"trie_time":{"secs":0,"nanos":382048},"total_time":{"secs":0,"nanos":503660125}},"pass":false,"entropy":4.354240370937871,"entropy_diff":5.63844274115155e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr (str.substr col1 1 1) 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,216,33,1292]}
{"generation":58,"metadata":{"sampler_time":{"secs":0,"nanos":31415},"constraint_time":{"secs":0,"nanos":322214},"parser_time":{"secs":0,"nanos":536000},"transformer_time":{"secs":0,"nanos":357148791},"trie_time":{"secs":0,"nanos":528454},"total_time":{"secs":0,"nanos":463343083}},"pass":false,"entropy":4.35421667066079,"entropy_diff":0.000023700277081317722,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.at col1 0) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,5529,2863,11121]}
{"generation":59,"metadata":{"sampler_time":{"secs":0,"nanos":50914},"constraint_time":{"secs":0,"nanos":416293},"parser_time":{"secs":0,"nanos":440916},"transformer_time":{"secs":0,"nanos":383616874},"trie_time":{"secs":0,"nanos":421466},"total_time":{"secs":0,"nanos":498656500}},"pass":false,"entropy":4.354214229388007,"entropy_diff":2.441272783038073e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 0 1) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,5529,2863,11121]}
{"generation":60,"metadata":{"sampler_time":{"secs":0,"nanos":61504},"constraint_time":{"secs":0,"nanos":366708},"parser_time":{"secs":0,"nanos":443795},"transformer_time":{"secs":0,"nanos":375049044},"trie_time":{"secs":0,"nanos":394287},"total_time":{"secs":0,"nanos":494439709}},"pass":false,"entropy":4.354213097938602,"entropy_diff":1.1314494052783175e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 (str.substr col1 1 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,7754]}
{"generation":61,"metadata":{"sampler_time":{"secs":0,"nanos":45459},"constraint_time":{"secs":0,"nanos":337832},"parser_time":{"secs":0,"nanos":379042},"transformer_time":{"secs":0,"nanos":348847790},"trie_time":{"secs":0,"nanos":418667},"total_time":{"secs":0,"nanos":454472417}},"pass":false,"entropy":4.354211153125507,"entropy_diff":1.944813094567621e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,216]}
{"generation":62,"metadata":{"sampler_time":{"secs":0,"nanos":47784},"constraint_time":{"secs":0,"nanos":368914},"parser_time":{"secs":0,"nanos":457749},"transformer_time":{"secs":0,"nanos":349911498},"trie_time":{"secs":0,"nanos":394289},"total_time":{"secs":0,"nanos":457497125}},"pass":false,"entropy":4.354209761494137,"entropy_diff":1.3916313701400895e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.at col1 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":63,"metadata":{"sampler_time":{"secs":0,"nanos":43420},"constraint_time":{"secs":0,"nanos":328919},"parser_time":{"secs":0,"nanos":570839},"transformer_time":{"secs":0,"nanos":366177960},"trie_time":{"secs":0,"nanos":428953},"total_time":{"secs":0,"nanos":483257291}},"pass":false,"entropy":4.354198211541922,"entropy_diff":0.000011549952215084147,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.replace col1 \" \" \",\") \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,476,5529,2863,11121]}
{"generation":64,"metadata":{"sampler_time":{"secs":0,"nanos":47294},"constraint_time":{"secs":0,"nanos":415041},"parser_time":{"secs":0,"nanos":457114},"transformer_time":{"secs":0,"nanos":381940748},"trie_time":{"secs":0,"nanos":459458},"total_time":{"secs":0,"nanos":498331542}},"pass":false,"entropy":4.354197093436071,"entropy_diff":1.1181058505727037e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292]}
{"generation":65,"metadata":{"sampler_time":{"secs":0,"nanos":41914},"constraint_time":{"secs":0,"nanos":422457},"parser_time":{"secs":0,"nanos":465466},"transformer_time":{"secs":0,"nanos":382286585},"trie_time":{"secs":0,"nanos":432251},"total_time":{"secs":0,"nanos":503321292}},"pass":false,"entropy":4.354196167844694,"entropy_diff":9.255913777650449e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,33,1292]}
{"generation":66,"metadata":{"sampler_time":{"secs":0,"nanos":38167},"constraint_time":{"secs":0,"nanos":344378},"parser_time":{"secs":0,"nanos":488030},"transformer_time":{"secs":0,"nanos":389965083},"trie_time":{"secs":0,"nanos":452921},"total_time":{"secs":0,"nanos":512929709}},"pass":false,"entropy":4.354196055101321,"entropy_diff":1.1274337285982483e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"New York\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,25,216,33,1292]}
{"generation":67,"metadata":{"sampler_time":{"secs":0,"nanos":33627},"constraint_time":{"secs":0,"nanos":416751},"parser_time":{"secs":0,"nanos":548088},"transformer_time":{"secs":0,"nanos":382240500},"trie_time":{"secs":0,"nanos":445035},"total_time":{"secs":0,"nanos":511360000}},"pass":false,"entropy":4.354195779160032,"entropy_diff":2.7594128848562605e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 1 2) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,5529,2863,11121]}
{"generation":68,"metadata":{"sampler_time":{"secs":0,"nanos":54088},"constraint_time":{"secs":0,"nanos":473083},"parser_time":{"secs":0,"nanos":515881},"transformer_time":{"secs":0,"nanos":464946250},"trie_time":{"secs":0,"nanos":441287},"total_time":{"secs":0,"nanos":615204667}},"pass":false,"entropy":4.354195361909665,"entropy_diff":4.172503675903272e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":69,"metadata":{"sampler_time":{"secs":0,"nanos":84626},"constraint_time":{"secs":0,"nanos":470622},"parser_time":{"secs":0,"nanos":511787},"transformer_time":{"secs":0,"nanos":457241334},"trie_time":{"secs":0,"nanos":444673},"total_time":{"secs":0,"nanos":605237083}},"pass":false,"entropy":4.354195196618222,"entropy_diff":1.6529144275523322e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,33,1292]}
{"generation":70,"metadata":{"sampler_time":{"secs":0,"nanos":51456},"constraint_time":{"secs":0,"nanos":394461},"parser_time":{"secs":0,"nanos":459412},"transformer_time":{"secs":0,"nanos":383266584},"trie_time":{"secs":0,"nanos":494422},"total_time":{"secs":0,"nanos":501774500}},"pass":false,"entropy":4.354195155378245,"entropy_diff":4.123997676686031e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,34,1292]}
{"generation":71,"metadata":{"sampler_time":{"secs":0,"nanos":45378},"constraint_time":{"secs":0,"nanos":394756},"parser_time":{"secs":0,"nanos":478166},"transformer_time":{"secs":0,"nanos":407709415},"trie_time":{"secs":0,"nanos":451000},"total_time":{"secs":0,"nanos":530280334}},"pass":false,"entropy":4.354195127543947,"entropy_diff":2.7834298421680614e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":72,"metadata":{"sampler_time":{"secs":0,"nanos":54838},"constraint_time":{"secs":0,"nanos":369329},"parser_time":{"secs":0,"nanos":419126},"transformer_time":{"secs":0,"nanos":381899752},"trie_time":{"secs":0,"nanos":450703},"total_time":{"secs":0,"nanos":499354000}},"pass":false,"entropy":4.3541949852389354,"entropy_diff":1.4230501133027929e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,25,216,33,1292]}
{"generation":73,"metadata":{"sampler_time":{"secs":0,"nanos":52084},"constraint_time":{"secs":0,"nanos":339372},"parser_time":{"secs":0,"nanos":390540},"transformer_time":{"secs":0,"nanos":291934628},"trie_time":{"secs":0,"nanos":619296},"total_time":{"secs":0,"nanos":390631125}},"pass":false,"entropy":4.354194644440989,"entropy_diff":3.4079794630770266e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col2 col1 \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,33,476,5529,2863,11121]}
{"generation":74,"metadata":{"sampler_time":{"secs":0,"nanos":69540},"constraint_time":{"secs":0,"nanos":599250},"parser_time":{"secs":0,"nanos":566380},"transformer_time":{"secs":0,"nanos":466210917},"trie_time":{"secs":0,"nanos":460922},"total_time":{"secs":0,"nanos":605946791}},"pass":false,"entropy":4.354191575049373,"entropy_diff":3.069391616428163e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":75,"metadata":{"sampler_time":{"secs":0,"nanos":46038},"constraint_time":{"secs":0,"nanos":377049},"parser_time":{"secs":0,"nanos":483083},"transformer_time":{"secs":0,"nanos":388228084},"trie_time":{"secs":0,"nanos":520663},"total_time":{"secs":0,"nanos":510236584}},"pass":false,"entropy":4.354191549262912,"entropy_diff":2.5786460966514824e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,216,33,1292]}
{"generation":76,"metadata":{"sampler_time":{"secs":0,"nanos":48882},"constraint_time":{"secs":0,"nanos":332873},"parser_time":{"secs":0,"nanos":359088},"transformer_time":{"secs":0,"nanos":306741585},"trie_time":{"secs":0,"nanos":459628},"total_time":{"secs":0,"nanos":410328625}},"pass":false,"entropy":4.354191483531696,"entropy_diff":6.573121602571064e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 0 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,32,216,34,1292]}
{"generation":77,"metadata":{"sampler_time":{"secs":0,"nanos":54831},"constraint_time":{"secs":0,"nanos":315710},"parser_time":{"secs":0,"nanos":525421},"transformer_time":{"secs":0,"nanos":374590836},"trie_time":{"secs":0,"nanos":543660},"total_time":{"secs":0,"nanos":494224042}},"pass":false,"entropy":4.354189673027675,"entropy_diff":1.8105040204829947e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":78,"metadata":{"sampler_time":{"secs":0,"nanos":63123},"constraint_time":{"secs":0,"nanos":541998},"parser_time":{"secs":0,"nanos":671290},"transformer_time":{"secs":0,"nanos":457851335},"trie_time":{"secs":0,"nanos":482383},"total_time":{"secs":0,"nanos":597567583}},"pass":false,"entropy":4.354187879932924,"entropy_diff":1.7930947509015027e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,5529,2863,11121]}
{"generation":79,"metadata":{"sampler_time":{"secs":0,"nanos":31332},"constraint_time":{"secs":0,"nanos":283166},"parser_time":{"secs":0,"nanos":319044},"transformer_time":{"secs":0,"nanos":311143750},"trie_time":{"secs":0,"nanos":479791},"total_time":{"secs":0,"nanos":404177208}},"pass":false,"entropy":4.354187437699357,"entropy_diff":4.422335670994926e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,33,216,32,1292]}
{"generation":80,"metadata":{"sampler_time":{"secs":0,"nanos":31335},"constraint_time":{"secs":0,"nanos":359000},"parser_time":{"secs":0,"nanos":388411},"transformer_time":{"secs":0,"nanos":299946043},"trie_time":{"secs":0,"nanos":462373},"total_time":{"secs":0,"nanos":392809250}},"pass":false,"entropy":4.354185087678663,"entropy_diff":2.350020694485977e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,664,33,1292]}
{"generation":81,"metadata":{"sampler_time":{"secs":0,"nanos":61248},"constraint_time":{"secs":0,"nanos":318749},"parser_time":{"secs":0,"nanos":465163},"transformer_time":{"secs":0,"nanos":365182956},"trie_time":{"secs":0,"nanos":446668},"total_time":{"secs":0,"nanos":472931583}},"pass":false,"entropy":4.354183143213892,"entropy_diff":1.94446477053134e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.++ (str.substr col1 1 1) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,5529,2863,11121]}
{"generation":82,"metadata":{"sampler_time":{"secs":0,"nanos":38793},"constraint_time":{"secs":0,"nanos":411545},"parser_time":{"secs":0,"nanos":527995},"transformer_time":{"secs":0,"nanos":383076334},"trie_time":{"secs":0,"nanos":480755},"total_time":{"secs":0,"nanos":498894375}},"pass":false,"entropy":4.354178094356644,"entropy_diff":5.04885724783577e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col2 1 1) \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,5529,2863,11121]}
{"generation":83,"metadata":{"sampler_time":{"secs":0,"nanos":73953},"constraint_time":{"secs":0,"nanos":401961},"parser_time":{"secs":0,"nanos":533498},"transformer_time":{"secs":0,"nanos":440867460},"trie_time":{"secs":0,"nanos":556512},"total_time":{"secs":0,"nanos":575717500}},"pass":false,"entropy":4.35417772523431,"entropy_diff":3.6912233447594645e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,216,33,25,216,33,1292]}
{"generation":84,"metadata":{"sampler_time":{"secs":0,"nanos":81845},"constraint_time":{"secs":0,"nanos":549748},"parser_time":{"secs":0,"nanos":730872},"transformer_time":{"secs":0,"nanos":518534206},"trie_time":{"secs":0,"nanos":584081},"total_time":{"secs":0,"nanos":681232042}},"pass":false,"entropy":4.354177651330192,"entropy_diff":7.390411749241821e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col1 \" \" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":85,"metadata":{"sampler_time":{"secs":0,"nanos":65375},"constraint_time":{"secs":0,"nanos":539625},"parser_time":{"secs":0,"nanos":522535},"transformer_time":{"secs":0,"nanos":466214370},"trie_time":{"secs":0,"nanos":606624},"total_time":{"secs":0,"nanos":611746583}},"pass":false,"entropy":4.354177577255916,"entropy_diff":7.40742764904212e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":86,"metadata":{"sampler_time":{"secs":0,"nanos":63665},"constraint_time":{"secs":0,"nanos":376464},"parser_time":{"secs":0,"nanos":381491},"transformer_time":{"secs":0,"nanos":387609710},"trie_time":{"secs":0,"nanos":611670},"total_time":{"secs":0,"nanos":505952333}},"pass":false,"entropy":4.3541775510519845,"entropy_diff":2.6203931469126474e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,32,25,216,33,1292]}
{"generation":87,"metadata":{"sampler_time":{"secs":0,"nanos":75501},"constraint_time":{"secs":0,"nanos":1578756},"parser_time":{"secs":0,"nanos":689635},"transformer_time":{"secs":0,"nanos":515582458},"trie_time":{"secs":0,"nanos":617041},"total_time":{"secs":0,"nanos":683614125}},"pass":false,"entropy":4.354177487511895,"entropy_diff":6.354008963427304e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":88,"metadata":{"sampler_time":{"secs":0,"nanos":46503},"constraint_time":{"secs":0,"nanos":347084},"parser_time":{"secs":0,"nanos":403298},"transformer_time":{"secs":0,"nanos":293095918},"trie_time":{"secs":0,"nanos":540672},"total_time":{"secs":0,"nanos":387794916}},"pass":false,"entropy":4.354177464296653,"entropy_diff":2.321524217308024e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 \",\" \"New York\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,42934,476,5529,2863,11121]}
{"generation":89,"metadata":{"sampler_time":{"secs":0,"nanos":40585},"constraint_time":{"secs":0,"nanos":435708},"parser_time":{"secs":0,"nanos":540378},"transformer_time":{"secs":0,"nanos":450582877},"trie_time":{"secs":0,"nanos":603994},"total_time":{"secs":0,"nanos":589922917}},"pass":false,"entropy":4.354175326705432,"entropy_diff":2.137591220474633e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":90,"metadata":{"sampler_time":{"secs":0,"nanos":69587},"constraint_time":{"secs":0,"nanos":624372},"parser_time":{"secs":0,"nanos":675750},"transformer_time":{"secs":0,"nanos":454781629},"trie_time":{"secs":0,"nanos":714752},"total_time":{"secs":0,"nanos":601054083}},"pass":false,"entropy":4.35417529547778,"entropy_diff":3.122765246388326e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":91,"metadata":{"sampler_time":{"secs":0,"nanos":84295},"constraint_time":{"secs":0,"nanos":1088371},"parser_time":{"secs":0,"nanos":715997},"transformer_time":{"secs":0,"nanos":541589338},"trie_time":{"secs":0,"nanos":694124},"total_time":{"secs":0,"nanos":708779208}},"pass":false,"entropy":4.354175097409989,"entropy_diff":1.9806779061326552e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":92,"metadata":{"sampler_time":{"secs":0,"nanos":50708},"constraint_time":{"secs":0,"nanos":309331},"parser_time":{"secs":0,"nanos":494081},"transformer_time":{"secs":0,"nanos":374439372},"trie_time":{"secs":0,"nanos":703471},"total_time":{"secs":0,"nanos":489127833}},"pass":false,"entropy":4.354175071908902,"entropy_diff":2.5501087463908334e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,32,25,216,33,1292]}
{"generation":93,"metadata":{"sampler_time":{"secs":0,"nanos":54711},"constraint_time":{"secs":0,"nanos":539202},"parser_time":{"secs":0,"nanos":648917},"transformer_time":{"secs":0,"nanos":450723628},"trie_time":{"secs":0,"nanos":703915},"total_time":{"secs":0,"nanos":590185542}},"pass":false,"entropy":4.354175039848732,"entropy_diff":3.20601696301992e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":94,"metadata":{"sampler_time":{"secs":0,"nanos":30589},"constraint_time":{"secs":0,"nanos":319164},"parser_time":{"secs":0,"nanos":493702},"transformer_time":{"secs":0,"nanos":382579583},"trie_time":{"secs":0,"nanos":711250},"total_time":{"secs":0,"nanos":496678708}},"pass":false,"entropy":4.35417503075178,"entropy_diff":9.096951636422546e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,34,25,216,33,1292]}
{"generation":95,"metadata":{"sampler_time":{"secs":0,"nanos":34212},"constraint_time":{"secs":0,"nanos":408791},"parser_time":{"secs":0,"nanos":476082},"transformer_time":{"secs":0,"nanos":382191500},"trie_time":{"secs":0,"nanos":706116},"total_time":{"secs":0,"nanos":496476375}},"pass":false,"entropy":4.354175013267463,"entropy_diff":1.7484317105243008e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,32,1292]}
{"generation":96,"metadata":{"sampler_time":{"secs":0,"nanos":57087},"constraint_time":{"secs":0,"nanos":516335},"parser_time":{"secs":0,"nanos":549799},"transformer_time":{"secs":0,"nanos":466132332},"trie_time":{"secs":0,"nanos":715199},"total_time":{"secs":0,"nanos":610442584}},"pass":false,"entropy":4.354174997400167,"entropy_diff":1.586729592162328e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":97,"metadata":{"sampler_time":{"secs":0,"nanos":98542},"constraint_time":{"secs":0,"nanos":613753},"parser_time":{"secs":0,"nanos":957540},"transformer_time":{"secs":0,"nanos":654752874},"trie_time":{"secs":0,"nanos":740343},"total_time":{"secs":0,"nanos":864830750}},"pass":false,"entropy":4.354174983356847,"entropy_diff":1.4043320284429228e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.indexof col1 \" \" 1) 1)) (str.indexof col1 \" \" (+ (str.indexof col1 \" \" 1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,38799]}
{"generation":98,"metadata":{"sampler_time":{"secs":0,"nanos":85280},"constraint_time":{"secs":0,"nanos":433289},"parser_time":{"secs":0,"nanos":557290},"transformer_time":{"secs":0,"nanos":449735835},"trie_time":{"secs":0,"nanos":746957},"total_time":{"secs":0,"nanos":587173917}},"pass":false,"entropy":4.354174972413977,"entropy_diff":1.094286972147529e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":99,"metadata":{"sampler_time":{"secs":0,"nanos":83788},"constraint_time":{"secs":0,"nanos":521747},"parser_time":{"secs":0,"nanos":559120},"transformer_time":{"secs":0,"nanos":458095083},"trie_time":{"secs":0,"nanos":788127},"total_time":{"secs":0,"nanos":602300666}},"pass":false,"entropy":4.354174953623025,"entropy_diff":1.879095190560065e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,33,1292]}
{"generation":100,"metadata":{"sampler_time":{"secs":0,"nanos":30832},"constraint_time":{"secs":0,"nanos":398914},"parser_time":{"secs":0,"nanos":457623},"transformer_time":{"secs":0,"nanos":373472501},"trie_time":{"secs":0,"nanos":717540},"total_time":{"secs":0,"nanos":486144958}},"pass":false,"entropy":4.354174953092398,"entropy_diff":5.306270978167049e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,34,25,216,33,1292]}
{"generation":101,"metadata":{"sampler_time":{"secs":0,"nanos":68292},"constraint_time":{"secs":0,"nanos":505087},"parser_time":{"secs":0,"nanos":582298},"transformer_time":{"secs":0,"nanos":458924623},"trie_time":{"secs":0,"nanos":775503},"total_time":{"secs":0,"nanos":597624625}},"pass":false,"entropy":4.354174931869506,"entropy_diff":2.1222891888328377e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,33,1292]}
{"generation":102,"metadata":{"sampler_time":{"secs":0,"nanos":63954},"constraint_time":{"secs":0,"nanos":438582},"parser_time":{"secs":0,"nanos":546414},"transformer_time":{"secs":0,"nanos":450326833},"trie_time":{"secs":0,"nanos":763245},"total_time":{"secs":0,"nanos":592777125}},"pass":false,"entropy":4.3541749307304185,"entropy_diff":1.139087935086991e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,33,1292]}
{"generation":103,"metadata":{"sampler_time":{"secs":0,"nanos":73458},"constraint_time":{"secs":0,"nanos":388002},"parser_time":{"secs":0,"nanos":498917},"transformer_time":{"secs":0,"nanos":390056790},"trie_time":{"secs":0,"nanos":723585},"total_time":{"secs":0,"nanos":508713583}},"pass":false,"entropy":4.354174926379068,"entropy_diff":4.351350391118558e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"PA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,4442,18,216,33,25,216,33,1292]}
{"generation":104,"metadata":{"sampler_time":{"secs":0,"nanos":117874},"constraint_time":{"secs":0,"nanos":589957},"parser_time":{"secs":0,"nanos":590046},"transformer_time":{"secs":0,"nanos":526252418},"trie_time":{"secs":0,"nanos":771499},"total_time":{"secs":0,"nanos":693547500}},"pass":false,"entropy":4.354174908487902,"entropy_diff":1.7891165882133464e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,216,33,1292]}
{"generation":105,"metadata":{"sampler_time":{"secs":0,"nanos":67252},"constraint_time":{"secs":0,"nanos":547006},"parser_time":{"secs":0,"nanos":580754},"transformer_time":{"secs":0,"nanos":449604876},"trie_time":{"secs":0,"nanos":805579},"total_time":{"secs":0,"nanos":591446375}},"pass":false,"entropy":4.354174906759411,"entropy_diff":1.7284911280057713e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,33,1292]}
{"generation":106,"metadata":{"sampler_time":{"secs":0,"nanos":66160},"constraint_time":{"secs":0,"nanos":311997},"parser_time":{"secs":0,"nanos":455002},"transformer_time":{"secs":0,"nanos":373803040},"trie_time":{"secs":0,"nanos":723038},"total_time":{"secs":0,"nanos":488895375}},"pass":false,"entropy":4.354174903637822,"entropy_diff":3.121589209342801e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,33,216,33,25,216,33,1292]}
{"generation":107,"metadata":{"sampler_time":{"secs":0,"nanos":95380},"constraint_time":{"secs":0,"nanos":1127002},"parser_time":{"secs":0,"nanos":649079},"transformer_time":{"secs":0,"nanos":509201585},"trie_time":{"secs":0,"nanos":784621},"total_time":{"secs":0,"nanos":672007833}},"pass":false,"entropy":4.354174773760437,"entropy_diff":1.2987738529091075e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":108,"metadata":{"sampler_time":{"secs":0,"nanos":81665},"constraint_time":{"secs":0,"nanos":516743},"parser_time":{"secs":0,"nanos":548493},"transformer_time":{"secs":0,"nanos":440825337},"trie_time":{"secs":0,"nanos":829659},"total_time":{"secs":0,"nanos":578816791}},"pass":false,"entropy":4.354174772153329,"entropy_diff":1.607107336099034e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,476,20361,216,33,25,216,33,1292]}
{"generation":109,"metadata":{"sampler_time":{"secs":0,"nanos":52008},"constraint_time":{"secs":0,"nanos":404500},"parser_time":{"secs":0,"nanos":427337},"transformer_time":{"secs":0,"nanos":391383833},"trie_time":{"secs":0,"nanos":742751},"total_time":{"secs":0,"nanos":508739917}},"pass":false,"entropy":4.354174769299234,"entropy_diff":2.8540956265032946e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,664,33,216,33,25,216,33,1292]}
{"generation":110,"metadata":{"sampler_time":{"secs":0,"nanos":87088},"constraint_time":{"secs":0,"nanos":383420},"parser_time":{"secs":0,"nanos":633087},"transformer_time":{"secs":0,"nanos":517869538},"trie_time":{"secs":0,"nanos":775942},"total_time":{"secs":0,"nanos":676155209}},"pass":false,"entropy":4.3541747022450945,"entropy_diff":6.705413913010716e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (str.indexof col2 col1 (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":111,"metadata":{"sampler_time":{"secs":0,"nanos":55414},"constraint_time":{"secs":0,"nanos":397462},"parser_time":{"secs":0,"nanos":427499},"transformer_time":{"secs":0,"nanos":382216295},"trie_time":{"secs":0,"nanos":795584},"total_time":{"secs":0,"nanos":497298167}},"pass":false,"entropy":4.354174684133825,"entropy_diff":1.811126981721145e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,34,216,33,25,216,33,1292]}
{"generation":112,"metadata":{"sampler_time":{"secs":0,"nanos":71372},"constraint_time":{"secs":0,"nanos":517711},"parser_time":{"secs":0,"nanos":496160},"transformer_time":{"secs":0,"nanos":443201043},"trie_time":{"secs":0,"nanos":828554},"total_time":{"secs":0,"nanos":571988000}},"pass":false,"entropy":4.3541746390844285,"entropy_diff":4.504939621341464e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,33,25,216,33,25,216,33,1292]}
{"generation":113,"metadata":{"sampler_time":{"secs":0,"nanos":65291},"constraint_time":{"secs":0,"nanos":629711},"parser_time":{"secs":0,"nanos":588953},"transformer_time":{"secs":0,"nanos":465359291},"trie_time":{"secs":0,"nanos":870965},"total_time":{"secs":0,"nanos":598025500}},"pass":false,"entropy":4.354174633574729,"entropy_diff":5.509699363415166e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,216,33,25,216,33,1292]}
{"generation":114,"metadata":{"sampler_time":{"secs":0,"nanos":35295},"constraint_time":{"secs":0,"nanos":554747},"parser_time":{"secs":0,"nanos":592672},"transformer_time":{"secs":0,"nanos":459856209},"trie_time":{"secs":0,"nanos":899752},"total_time":{"secs":0,"nanos":589963875}},"pass":false,"entropy":4.354174630908924,"entropy_diff":2.665805354240547e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,33,1292]}
{"generation":115,"metadata":{"sampler_time":{"secs":0,"nanos":78533},"constraint_time":{"secs":0,"nanos":564754},"parser_time":{"secs":0,"nanos":770504},"transformer_time":{"secs":0,"nanos":594519131},"trie_time":{"secs":0,"nanos":869366},"total_time":{"secs":0,"nanos":775688584}},"pass":false,"entropy":4.354174630417766,"entropy_diff":4.911573370236511e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":116,"metadata":{"sampler_time":{"secs":0,"nanos":73084},"constraint_time":{"secs":0,"nanos":718163},"parser_time":{"secs":0,"nanos":563379},"transformer_time":{"secs":0,"nanos":465890584},"trie_time":{"secs":0,"nanos":872906},"total_time":{"secs":0,"nanos":602878584}},"pass":false,"entropy":4.354174629933519,"entropy_diff":4.842473089183841e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":117,"metadata":{"sampler_time":{"secs":0,"nanos":70208},"constraint_time":{"secs":0,"nanos":405751},"parser_time":{"secs":0,"nanos":505419},"transformer_time":{"secs":0,"nanos":390432040},"trie_time":{"secs":0,"nanos":875418},"total_time":{"secs":0,"nanos":501567208}},"pass":false,"entropy":4.354174627776521,"entropy_diff":2.156998135660615e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"New York\" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,34,25,216,33,1292]}
{"generation":118,"metadata":{"sampler_time":{"secs":0,"nanos":58999},"constraint_time":{"secs":0,"nanos":434671},"parser_time":{"secs":0,"nanos":516033},"transformer_time":{"secs":0,"nanos":382775793},"trie_time":{"secs":0,"nanos":829006},"total_time":{"secs":0,"nanos":493173334}},"pass":false,"entropy":4.354174622419073,"entropy_diff":5.35744781871017e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,33,25,216,33,1292]}
{"generation":119,"metadata":{"sampler_time":{"secs":0,"nanos":61918},"constraint_time":{"secs":0,"nanos":286873},"parser_time":{"secs":0,"nanos":459049},"transformer_time":{"secs":0,"nanos":375124122},"trie_time":{"secs":0,"nanos":873457},"total_time":{"secs":0,"nanos":481290417}},"pass":false,"entropy":4.354174572214627,"entropy_diff":5.0204445933843544e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,34,1292]}
{"generation":120,"metadata":{"sampler_time":{"secs":0,"nanos":56623},"constraint_time":{"secs":0,"nanos":1158953},"parser_time":{"secs":0,"nanos":767999},"transformer_time":{"secs":0,"nanos":534630213},"trie_time":{"secs":0,"nanos":886667},"total_time":{"secs":0,"nanos":686999833}},"pass":false,"entropy":4.354174565136212,"entropy_diff":7.078415187322662e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":121,"metadata":{"sampler_time":{"secs":0,"nanos":71708},"constraint_time":{"secs":0,"nanos":539630},"parser_time":{"secs":0,"nanos":606251},"transformer_time":{"secs":0,"nanos":449853289},"trie_time":{"secs":0,"nanos":917794},"total_time":{"secs":0,"nanos":586320000}},"pass":false,"entropy":4.354174563755313,"entropy_diff":1.3808989507424485e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,216,33,1292]}
{"generation":122,"metadata":{"sampler_time":{"secs":0,"nanos":78167},"constraint_time":{"secs":0,"nanos":510669},"parser_time":{"secs":0,"nanos":571047},"transformer_time":{"secs":0,"nanos":466685622},"trie_time":{"secs":0,"nanos":915870},"total_time":{"secs":0,"nanos":607748125}},"pass":false,"entropy":4.354174563202763,"entropy_diff":5.525500057501631e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":123,"metadata":{"sampler_time":{"secs":0,"nanos":61461},"constraint_time":{"secs":0,"nanos":520541},"parser_time":{"secs":0,"nanos":592548},"transformer_time":{"secs":0,"nanos":463499081},"trie_time":{"secs":0,"nanos":974370},"total_time":{"secs":0,"nanos":604016708}},"pass":false,"entropy":4.354174561376146,"entropy_diff":1.8266170798142412e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,32,1292]}
{"generation":124,"metadata":{"sampler_time":{"secs":0,"nanos":113751},"constraint_time":{"secs":0,"nanos":578426},"parser_time":{"secs":0,"nanos":818879},"transformer_time":{"secs":0,"nanos":601706665},"trie_time":{"secs":0,"nanos":959658},"total_time":{"secs":0,"nanos":789347583}},"pass":false,"entropy":4.35417456131857,"entropy_diff":5.757616605706062e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":125,"metadata":{"sampler_time":{"secs":0,"nanos":59750},"constraint_time":{"secs":0,"nanos":566043},"parser_time":{"secs":0,"nanos":520795},"transformer_time":{"secs":0,"nanos":457170542},"trie_time":{"secs":0,"nanos":987217},"total_time":{"secs":0,"nanos":602839959}},"pass":false,"entropy":4.354174561229212,"entropy_diff":8.93578544491902e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,33,1292]}
{"generation":126,"metadata":{"sampler_time":{"secs":0,"nanos":58554},"constraint_time":{"secs":0,"nanos":419327},"parser_time":{"secs":0,"nanos":585910},"transformer_time":{"secs":0,"nanos":453131207},"trie_time":{"secs":0,"nanos":953300},"total_time":{"secs":0,"nanos":598137500}},"pass":false,"entropy":4.354174561168804,"entropy_diff":6.040767885906462e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":127,"metadata":{"sampler_time":{"secs":0,"nanos":62333},"constraint_time":{"secs":0,"nanos":687958},"parser_time":{"secs":0,"nanos":602008},"transformer_time":{"secs":0,"nanos":448763043},"trie_time":{"secs":0,"nanos":982499},"total_time":{"secs":0,"nanos":593719125}},"pass":false,"entropy":4.354174557027175,"entropy_diff":4.141629261766866e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,32,25,216,33,1292]}
{"generation":128,"metadata":{"sampler_time":{"secs":0,"nanos":112663},"constraint_time":{"secs":0,"nanos":587586},"parser_time":{"secs":0,"nanos":754548},"transformer_time":{"secs":0,"nanos":590299419},"trie_time":{"secs":0,"nanos":1013878},"total_time":{"secs":0,"nanos":785522916}},"pass":false,"entropy":4.354174556881469,"entropy_diff":1.4570566975180554e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":129,"metadata":{"sampler_time":{"secs":0,"nanos":81745},"constraint_time":{"secs":0,"nanos":523037},"parser_time":{"secs":0,"nanos":641363},"transformer_time":{"secs":0,"nanos":508223708},"trie_time":{"secs":0,"nanos":949668},"total_time":{"secs":0,"nanos":667945833}},"pass":false,"entropy":4.354174556803439,"entropy_diff":7.80300268843348e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":130,"metadata":{"sampler_time":{"secs":0,"nanos":77331},"constraint_time":{"secs":0,"nanos":430163},"parser_time":{"secs":0,"nanos":477122},"transformer_time":{"secs":0,"nanos":441173626},"trie_time":{"secs":0,"nanos":971923},"total_time":{"secs":0,"nanos":579304958}},"pass":false,"entropy":4.354174552254695,"entropy_diff":4.548744492183232e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":131,"metadata":{"sampler_time":{"secs":0,"nanos":55208},"constraint_time":{"secs":0,"nanos":394666},"parser_time":{"secs":0,"nanos":372410},"transformer_time":{"secs":0,"nanos":349311750},"trie_time":{"secs":0,"nanos":938165},"total_time":{"secs":0,"nanos":457118292}},"pass":false,"entropy":4.3541745457458125,"entropy_diff":6.508882322009413e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,216]}
{"generation":132,"metadata":{"sampler_time":{"secs":0,"nanos":69126},"constraint_time":{"secs":0,"nanos":396037},"parser_time":{"secs":0,"nanos":433037},"transformer_time":{"secs":0,"nanos":390117245},"trie_time":{"secs":0,"nanos":968793},"total_time":{"secs":0,"nanos":506790583}},"pass":false,"entropy":4.354174528108347,"entropy_diff":1.76374657101519e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"USA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,24842,18,216,33,25,216,33,1292]}
{"generation":133,"metadata":{"sampler_time":{"secs":0,"nanos":42126},"constraint_time":{"secs":0,"nanos":374292},"parser_time":{"secs":0,"nanos":403457},"transformer_time":{"secs":0,"nanos":371794624},"trie_time":{"secs":0,"nanos":985035},"total_time":{"secs":0,"nanos":489882000}},"pass":false,"entropy":4.354174522501119,"entropy_diff":5.6072275711471775e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,34,1292]}
{"generation":134,"metadata":{"sampler_time":{"secs":0,"nanos":76420},"constraint_time":{"secs":0,"nanos":600127},"parser_time":{"secs":0,"nanos":602000},"transformer_time":{"secs":0,"nanos":451147497},"trie_time":{"secs":0,"nanos":932288},"total_time":{"secs":0,"nanos":603651417}},"pass":false,"entropy":4.354174517922923,"entropy_diff":4.578196488580488e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":135,"metadata":{"sampler_time":{"secs":0,"nanos":43714},"constraint_time":{"secs":0,"nanos":671455},"parser_time":{"secs":0,"nanos":545753},"transformer_time":{"secs":0,"nanos":458639043},"trie_time":{"secs":0,"nanos":1116786},"total_time":{"secs":0,"nanos":606414042}},"pass":false,"entropy":4.354174495730334,"entropy_diff":2.219258909974542e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,34,1292]}
{"generation":136,"metadata":{"sampler_time":{"secs":0,"nanos":61340},"constraint_time":{"secs":0,"nanos":718623},"parser_time":{"secs":0,"nanos":708208},"transformer_time":{"secs":0,"nanos":466232001},"trie_time":{"secs":0,"nanos":1077039},"total_time":{"secs":0,"nanos":609815541}},"pass":false,"entropy":4.354174495681863,"entropy_diff":4.8470560898294934e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"NY\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,30513,1715,216,33,25,216,33,1292]}
{"generation":137,"metadata":{"sampler_time":{"secs":0,"nanos":124210},"constraint_time":{"secs":0,"nanos":850456},"parser_time":{"secs":0,"nanos":1454209},"transformer_time":{"secs":1,"nanos":27502038},"trie_time":{"secs":0,"nanos":1148339},"total_time":{"secs":1,"nanos":336560333}},"pass":false,"entropy":4.354174495433136,"entropy_diff":2.4872726100966247e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":138,"metadata":{"sampler_time":{"secs":0,"nanos":38045},"constraint_time":{"secs":0,"nanos":443877},"parser_time":{"secs":0,"nanos":598715},"transformer_time":{"secs":0,"nanos":459097541},"trie_time":{"secs":0,"nanos":1185156},"total_time":{"secs":0,"nanos":595798916}},"pass":false,"entropy":4.354174495414994,"entropy_diff":1.8141932400794758e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,216,33,1292]}
{"generation":139,"metadata":{"sampler_time":{"secs":0,"nanos":47830},"constraint_time":{"secs":0,"nanos":550206},"parser_time":{"secs":0,"nanos":615998},"transformer_time":{"secs":0,"nanos":450526915},"trie_time":{"secs":0,"nanos":1196336},"total_time":{"secs":0,"nanos":595471584}},"pass":false,"entropy":4.354174495363054,"entropy_diff":5.1939785805643623e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,216,33,1292]}
{"generation":140,"metadata":{"sampler_time":{"secs":0,"nanos":76120},"constraint_time":{"secs":0,"nanos":610754},"parser_time":{"secs":0,"nanos":746344},"transformer_time":{"secs":0,"nanos":602575706},"trie_time":{"secs":0,"nanos":1201792},"total_time":{"secs":0,"nanos":794563459}},"pass":false,"entropy":4.354174495292315,"entropy_diff":7.073897023701647e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":141,"metadata":{"sampler_time":{"secs":0,"nanos":47710},"constraint_time":{"secs":0,"nanos":567539},"parser_time":{"secs":0,"nanos":749245},"transformer_time":{"secs":0,"nanos":528231173},"trie_time":{"secs":0,"nanos":1281923},"total_time":{"secs":0,"nanos":697037875}},"pass":false,"entropy":4.354174495270823,"entropy_diff":2.149214139990363e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":142,"metadata":{"sampler_time":{"secs":0,"nanos":47830},"constraint_time":{"secs":0,"nanos":533664},"parser_time":{"secs":0,"nanos":551082},"transformer_time":{"secs":0,"nanos":451478712},"trie_time":{"secs":0,"nanos":1212369},"total_time":{"secs":0,"nanos":598493291}},"pass":false,"entropy":4.354174495253449,"entropy_diff":1.737365806775415e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,32,25,216,33,1292]}
{"generation":143,"metadata":{"sampler_time":{"secs":0,"nanos":41252},"constraint_time":{"secs":0,"nanos":563416},"parser_time":{"secs":0,"nanos":554416},"transformer_time":{"secs":0,"nanos":458607837},"trie_time":{"secs":0,"nanos":1214426},"total_time":{"secs":0,"nanos":604700750}},"pass":false,"entropy":4.35417449519194,"entropy_diff":6.150902009949277e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,34,1292]}
{"generation":144,"metadata":{"sampler_time":{"secs":0,"nanos":49463},"constraint_time":{"secs":0,"nanos":680709},"parser_time":{"secs":0,"nanos":604163},"transformer_time":{"secs":0,"nanos":510687628},"trie_time":{"secs":0,"nanos":1236367},"total_time":{"secs":0,"nanos":674184583}},"pass":false,"entropy":4.354174495176496,"entropy_diff":1.5444534540165478e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.at col1 0)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,261,664,33,216,32,1292,216,33,25,216,33,1292]}
{"generation":145,"metadata":{"sampler_time":{"secs":0,"nanos":36582},"constraint_time":{"secs":0,"nanos":596628},"parser_time":{"secs":0,"nanos":576298},"transformer_time":{"secs":0,"nanos":450092627},"trie_time":{"secs":0,"nanos":1316999},"total_time":{"secs":0,"nanos":592278542}},"pass":false,"entropy":4.354174495105554,"entropy_diff":7.09414749167081e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,216,33,1292]}
{"generation":146,"metadata":{"sampler_time":{"secs":0,"nanos":69916},"constraint_time":{"secs":0,"nanos":633589},"parser_time":{"secs":0,"nanos":666624},"transformer_time":{"secs":0,"nanos":593318293},"trie_time":{"secs":0,"nanos":1239207},"total_time":{"secs":0,"nanos":786325667}},"pass":false,"entropy":4.354174494993623,"entropy_diff":1.1193090898586888e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col1 (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":147,"metadata":{"sampler_time":{"secs":0,"nanos":55494},"constraint_time":{"secs":0,"nanos":1099622},"parser_time":{"secs":0,"nanos":583833},"transformer_time":{"secs":0,"nanos":534159500},"trie_time":{"secs":0,"nanos":1221878},"total_time":{"secs":0,"nanos":707123791}},"pass":false,"entropy":4.354174494954558,"entropy_diff":3.906563961209031e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,33,25,216,33,1292]}
{"generation":148,"metadata":{"sampler_time":{"secs":0,"nanos":70745},"constraint_time":{"secs":0,"nanos":1241875},"parser_time":{"secs":0,"nanos":659460},"transformer_time":{"secs":0,"nanos":509045086},"trie_time":{"secs":0,"nanos":1201922},"total_time":{"secs":0,"nanos":671513667}},"pass":false,"entropy":4.3541744948650285,"entropy_diff":8.952927288419232e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace (str.at col1 0) \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,365,1321,30,261,664,33,216,32,25,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":149,"metadata":{"sampler_time":{"secs":0,"nanos":52664},"constraint_time":{"secs":0,"nanos":521459},"parser_time":{"secs":0,"nanos":554962},"transformer_time":{"secs":0,"nanos":470642667},"trie_time":{"secs":0,"nanos":1224409},"total_time":{"secs":0,"nanos":611591583}},"pass":false,"entropy":4.354174492543406,"entropy_diff":2.321622893930453e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,216,33,25,216,33,1292]}
{"generation":150,"metadata":{"sampler_time":{"secs":0,"nanos":68594},"constraint_time":{"secs":0,"nanos":530498},"parser_time":{"secs":0,"nanos":469631},"transformer_time":{"secs":0,"nanos":466272878},"trie_time":{"secs":0,"nanos":1197659},"total_time":{"secs":0,"nanos":607872125}},"pass":false,"entropy":4.354174492126419,"entropy_diff":4.169864453729133e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,216,33,25,216,33,1292]}
{"generation":151,"metadata":{"sampler_time":{"secs":0,"nanos":81121},"constraint_time":{"secs":0,"nanos":1230831},"parser_time":{"secs":0,"nanos":705540},"transformer_time":{"secs":0,"nanos":544400421},"trie_time":{"secs":0,"nanos":1227001},"total_time":{"secs":0,"nanos":718474208}},"pass":false,"entropy":4.354174491866317,"entropy_diff":2.60102162030762e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":152,"metadata":{"sampler_time":{"secs":0,"nanos":84955},"constraint_time":{"secs":0,"nanos":743251},"parser_time":{"secs":0,"nanos":611797},"transformer_time":{"secs":0,"nanos":534103749},"trie_time":{"secs":0,"nanos":1234301},"total_time":{"secs":0,"nanos":705364125}},"pass":false,"entropy":4.354174491586243,"entropy_diff":2.80073741976139e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":153,"metadata":{"sampler_time":{"secs":0,"nanos":74252},"constraint_time":{"secs":0,"nanos":521711},"parser_time":{"secs":0,"nanos":506920},"transformer_time":{"secs":0,"nanos":470371253},"trie_time":{"secs":0,"nanos":1223416},"total_time":{"secs":0,"nanos":615487667}},"pass":false,"entropy":4.3541744913736755,"entropy_diff":2.1256774118683097e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,34,216,33,25,216,33,25,216,33,1292]}
{"generation":154,"metadata":{"sampler_time":{"secs":0,"nanos":65375},"constraint_time":{"secs":0,"nanos":566251},"parser_time":{"secs":0,"nanos":485627},"transformer_time":{"secs":0,"nanos":465563208},"trie_time":{"secs":0,"nanos":1249046},"total_time":{"secs":0,"nanos":608439209}},"pass":false,"entropy":4.354174490879898,"entropy_diff":4.937774633617664e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,32,25,216,33,1292]}
{"generation":155,"metadata":{"sampler_time":{"secs":0,"nanos":75827},"constraint_time":{"secs":0,"nanos":634205},"parser_time":{"secs":0,"nanos":613796},"transformer_time":{"secs":0,"nanos":533882168},"trie_time":{"secs":0,"nanos":1309791},"total_time":{"secs":0,"nanos":694260083}},"pass":false,"entropy":4.354174490847049,"entropy_diff":3.284927885260913e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":156,"metadata":{"sampler_time":{"secs":0,"nanos":55749},"constraint_time":{"secs":0,"nanos":390871},"parser_time":{"secs":0,"nanos":399997},"transformer_time":{"secs":0,"nanos":382460044},"trie_time":{"secs":0,"nanos":1235126},"total_time":{"secs":0,"nanos":499758000}},"pass":false,"entropy":4.354174490724276,"entropy_diff":1.227729029551483e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,34,25,216,33,1292]}
{"generation":157,"metadata":{"sampler_time":{"secs":0,"nanos":50707},"constraint_time":{"secs":0,"nanos":367374},"parser_time":{"secs":0,"nanos":405172},"transformer_time":{"secs":0,"nanos":377761042},"trie_time":{"secs":0,"nanos":1205671},"total_time":{"secs":0,"nanos":492489542}},"pass":false,"entropy":4.354174486468292,"entropy_diff":4.2559840096600965e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,42934,216,33,25,216,33,1292]}
{"generation":158,"metadata":{"sampler_time":{"secs":0,"nanos":47079},"constraint_time":{"secs":0,"nanos":336453},"parser_time":{"secs":0,"nanos":384119},"transformer_time":{"secs":0,"nanos":340731873},"trie_time":{"secs":0,"nanos":1158582},"total_time":{"secs":0,"nanos":443759250}},"pass":false,"entropy":4.354174466522422,"entropy_diff":1.9945869844661956e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,216]}
{"generation":159,"metadata":{"sampler_time":{"secs":0,"nanos":83247},"constraint_time":{"secs":0,"nanos":460251},"parser_time":{"secs":0,"nanos":586873},"transformer_time":{"secs":0,"nanos":484016419},"trie_time":{"secs":0,"nanos":1143250},"total_time":{"secs":0,"nanos":630188125}},"pass":false,"entropy":4.354174446370601,"entropy_diff":2.015182065662202e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (int.to.str (str.indexof col1 \" \" 1)) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,591,30,1141,30,1321,365,1321,30,3888,1714,664,33,476,476,216,33,1292,476,476,216,33,25,216,33,1292]}
{"generation":160,"metadata":{"sampler_time":{"secs":0,"nanos":53953},"constraint_time":{"secs":0,"nanos":3149336},"parser_time":{"secs":0,"nanos":758501},"transformer_time":{"secs":0,"nanos":542144666},"trie_time":{"secs":0,"nanos":1332292},"total_time":{"secs":0,"nanos":709788084}},"pass":false,"entropy":4.354174395923168,"entropy_diff":5.0447433785905105e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof \" \" \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":161,"metadata":{"sampler_time":{"secs":0,"nanos":49209},"constraint_time":{"secs":0,"nanos":525123},"parser_time":{"secs":0,"nanos":519332},"transformer_time":{"secs":0,"nanos":465916915},"trie_time":{"secs":0,"nanos":1351841},"total_time":{"secs":0,"nanos":607735792}},"pass":false,"entropy":4.354174395649934,"entropy_diff":2.732338799660283e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,34,25,216,33,1292]}
{"generation":162,"metadata":{"sampler_time":{"secs":0,"nanos":75124},"constraint_time":{"secs":0,"nanos":665083},"parser_time":{"secs":0,"nanos":592623},"transformer_time":{"secs":0,"nanos":499785128},"trie_time":{"secs":0,"nanos":1326166},"total_time":{"secs":0,"nanos":652412333}},"pass":false,"entropy":4.3541743956104675,"entropy_diff":3.9466208079375065e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (+ 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,30425,216,33,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":163,"metadata":{"sampler_time":{"secs":0,"nanos":34085},"constraint_time":{"secs":0,"nanos":329580},"parser_time":{"secs":0,"nanos":421997},"transformer_time":{"secs":0,"nanos":386961333},"trie_time":{"secs":0,"nanos":1328383},"total_time":{"secs":0,"nanos":501428458}},"pass":false,"entropy":4.354174395260342,"entropy_diff":3.5012526211630757e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,34,1292]}
{"generation":164,"metadata":{"sampler_time":{"secs":0,"nanos":92166},"constraint_time":{"secs":0,"nanos":666420},"parser_time":{"secs":0,"nanos":831958},"transformer_time":{"secs":0,"nanos":677926039},"trie_time":{"secs":0,"nanos":1437042},"total_time":{"secs":0,"nanos":880330792}},"pass":false,"entropy":4.3541743941377,"entropy_diff":1.1226424234678234e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":165,"metadata":{"sampler_time":{"secs":0,"nanos":67665},"constraint_time":{"secs":0,"nanos":535963},"parser_time":{"secs":0,"nanos":595914},"transformer_time":{"secs":0,"nanos":453945830},"trie_time":{"secs":0,"nanos":1467219},"total_time":{"secs":0,"nanos":590958583}},"pass":false,"entropy":4.354174394135636,"entropy_diff":2.064126647383091e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,34,1292]}
{"generation":166,"metadata":{"sampler_time":{"secs":0,"nanos":80914},"constraint_time":{"secs":0,"nanos":595918},"parser_time":{"secs":0,"nanos":804881},"transformer_time":{"secs":0,"nanos":601528463},"trie_time":{"secs":0,"nanos":1484575},"total_time":{"secs":0,"nanos":776736709}},"pass":false,"entropy":4.354174394110371,"entropy_diff":2.5264235148370062e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":167,"metadata":{"sampler_time":{"secs":0,"nanos":49961},"constraint_time":{"secs":0,"nanos":574039},"parser_time":{"secs":0,"nanos":726788},"transformer_time":{"secs":0,"nanos":526509172},"trie_time":{"secs":0,"nanos":1441048},"total_time":{"secs":0,"nanos":677903167}},"pass":false,"entropy":4.354174394105112,"entropy_diff":5.259792601464142e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,1292,216,33,1292]}
{"generation":168,"metadata":{"sampler_time":{"secs":0,"nanos":46090},"constraint_time":{"secs":0,"nanos":588752},"parser_time":{"secs":0,"nanos":615965},"transformer_time":{"secs":0,"nanos":529116540},"trie_time":{"secs":0,"nanos":1505747},"total_time":{"secs":0,"nanos":688277083}},"pass":false,"entropy":4.3541743941021025,"entropy_diff":3.0091484859440243e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col2 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,34,216,33,1292,216,33,1292]}
{"generation":169,"metadata":{"sampler_time":{"secs":0,"nanos":40162},"constraint_time":{"secs":0,"nanos":526249},"parser_time":{"secs":0,"nanos":596704},"transformer_time":{"secs":0,"nanos":457015204},"trie_time":{"secs":0,"nanos":1438500},"total_time":{"secs":0,"nanos":592823833}},"pass":false,"entropy":4.354174394099982,"entropy_diff":2.120081887824199e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,32,1292]}
{"generation":170,"metadata":{"sampler_time":{"secs":0,"nanos":81786},"constraint_time":{"secs":0,"nanos":605215},"parser_time":{"secs":0,"nanos":667794},"transformer_time":{"secs":0,"nanos":516124081},"trie_time":{"secs":0,"nanos":1420289},"total_time":{"secs":0,"nanos":667540417}},"pass":false,"entropy":4.35417439409383,"entropy_diff":6.1524119132627675e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":171,"metadata":{"sampler_time":{"secs":0,"nanos":94046},"constraint_time":{"secs":0,"nanos":1234583},"parser_time":{"secs":0,"nanos":698922},"transformer_time":{"secs":0,"nanos":534389875},"trie_time":{"secs":0,"nanos":1409402},"total_time":{"secs":0,"nanos":687802125}},"pass":false,"entropy":4.3541743940441275,"entropy_diff":4.970246436641901e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":172,"metadata":{"sampler_time":{"secs":0,"nanos":53457},"constraint_time":{"secs":0,"nanos":575792},"parser_time":{"secs":0,"nanos":584788},"transformer_time":{"secs":0,"nanos":495769377},"trie_time":{"secs":0,"nanos":1519788},"total_time":{"secs":0,"nanos":633259750}},"pass":false,"entropy":4.354174393398157,"entropy_diff":6.459703882910617e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":173,"metadata":{"sampler_time":{"secs":0,"nanos":69125},"constraint_time":{"secs":0,"nanos":746543},"parser_time":{"secs":0,"nanos":729710},"transformer_time":{"secs":0,"nanos":559857125},"trie_time":{"secs":0,"nanos":1511958},"total_time":{"secs":0,"nanos":728266084}},"pass":false,"entropy":4.354174393391275,"entropy_diff":6.8824945742562704e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (- (str.indexof col1 col1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":174,"metadata":{"sampler_time":{"secs":0,"nanos":88452},"constraint_time":{"secs":0,"nanos":652250},"parser_time":{"secs":0,"nanos":743870},"transformer_time":{"secs":0,"nanos":516428086},"trie_time":{"secs":0,"nanos":1516787},"total_time":{"secs":0,"nanos":680703166}},"pass":false,"entropy":4.354174393375009,"entropy_diff":1.6266099578388094e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":175,"metadata":{"sampler_time":{"secs":0,"nanos":78132},"constraint_time":{"secs":0,"nanos":1373916},"parser_time":{"secs":0,"nanos":695589},"transformer_time":{"secs":0,"nanos":533277128},"trie_time":{"secs":0,"nanos":1484546},"total_time":{"secs":0,"nanos":699897667}},"pass":false,"entropy":4.3541743933414745,"entropy_diff":3.353406441419793e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":176,"metadata":{"sampler_time":{"secs":0,"nanos":33338},"constraint_time":{"secs":0,"nanos":578287},"parser_time":{"secs":0,"nanos":644910},"transformer_time":{"secs":0,"nanos":448808290},"trie_time":{"secs":0,"nanos":1500208},"total_time":{"secs":0,"nanos":588622625}},"pass":false,"entropy":4.354174393216209,"entropy_diff":1.2526513160082686e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,34,1292]}
{"generation":177,"metadata":{"sampler_time":{"secs":0,"nanos":100704},"constraint_time":{"secs":0,"nanos":633333},"parser_time":{"secs":0,"nanos":672334},"transformer_time":{"secs":0,"nanos":538925795},"trie_time":{"secs":0,"nanos":1714542},"total_time":{"secs":0,"nanos":711123375}},"pass":false,"entropy":4.354174393188113,"entropy_diff":2.809663612879376e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,1292,216,33,25,216,33,1292]}
{"generation":178,"metadata":{"sampler_time":{"secs":0,"nanos":92003},"constraint_time":{"secs":0,"nanos":595292},"parser_time":{"secs":0,"nanos":741293},"transformer_time":{"secs":0,"nanos":552123629},"trie_time":{"secs":0,"nanos":1404790},"total_time":{"secs":0,"nanos":726903791}},"pass":false,"entropy":4.354174393128481,"entropy_diff":5.963141092024671e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ (str.indexof col1 \" \" 1) 1)) (str.indexof col1 \"New York\" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,7754]}
{"generation":179,"metadata":{"sampler_time":{"secs":0,"nanos":90082},"constraint_time":{"secs":0,"nanos":579163},"parser_time":{"secs":0,"nanos":575958},"transformer_time":{"secs":0,"nanos":484445538},"trie_time":{"secs":0,"nanos":1459082},"total_time":{"secs":0,"nanos":638882917}},"pass":false,"entropy":4.354174387151547,"entropy_diff":5.976934502882614e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (int.to.str (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,591,30,1141,30,1321,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":180,"metadata":{"sampler_time":{"secs":0,"nanos":67499},"constraint_time":{"secs":0,"nanos":356878},"parser_time":{"secs":0,"nanos":402704},"transformer_time":{"secs":0,"nanos":374117497},"trie_time":{"secs":0,"nanos":1385166},"total_time":{"secs":0,"nanos":493201833}},"pass":false,"entropy":4.354174380057071,"entropy_diff":7.094476117686099e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,34,216,33,25,216,33,1292]}
{"generation":181,"metadata":{"sampler_time":{"secs":0,"nanos":68882},"constraint_time":{"secs":0,"nanos":404998},"parser_time":{"secs":0,"nanos":485466},"transformer_time":{"secs":0,"nanos":390555168},"trie_time":{"secs":0,"nanos":1380705},"total_time":{"secs":0,"nanos":513493250}},"pass":false,"entropy":4.354174339591162,"entropy_diff":4.0465908845988e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,664,34,216,33,25,216,33,1292]}
{"generation":182,"metadata":{"sampler_time":{"secs":0,"nanos":76286},"constraint_time":{"secs":0,"nanos":438875},"parser_time":{"secs":0,"nanos":724740},"transformer_time":{"secs":0,"nanos":488051126},"trie_time":{"secs":0,"nanos":1439168},"total_time":{"secs":0,"nanos":639181000}},"pass":false,"entropy":4.354174317826513,"entropy_diff":2.1764648749922344e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (+ (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":183,"metadata":{"sampler_time":{"secs":0,"nanos":75212},"constraint_time":{"secs":0,"nanos":392793},"parser_time":{"secs":0,"nanos":512960},"transformer_time":{"secs":0,"nanos":382367665},"trie_time":{"secs":0,"nanos":1477338},"total_time":{"secs":0,"nanos":502099959}},"pass":false,"entropy":4.354174317299773,"entropy_diff":5.267404290520972e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,32,1292]}
{"generation":184,"metadata":{"sampler_time":{"secs":0,"nanos":63333},"constraint_time":{"secs":0,"nanos":322292},"parser_time":{"secs":0,"nanos":471754},"transformer_time":{"secs":0,"nanos":391254835},"trie_time":{"secs":0,"nanos":1454787},"total_time":{"secs":0,"nanos":509186833}},"pass":false,"entropy":4.354174316400145,"entropy_diff":8.996279277084795e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"New York\" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,32,25,216,33,1292]}
{"generation":185,"metadata":{"sampler_time":{"secs":0,"nanos":68667},"constraint_time":{"secs":0,"nanos":408917},"parser_time":{"secs":0,"nanos":452704},"transformer_time":{"secs":0,"nanos":390347000},"trie_time":{"secs":0,"nanos":1408419},"total_time":{"secs":0,"nanos":508163291}},"pass":false,"entropy":4.3541743146539735,"entropy_diff":1.746171207628322e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \"New York\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,5529,2863,18,216,33,25,216,33,1292]}
{"generation":186,"metadata":{"sampler_time":{"secs":0,"nanos":56043},"constraint_time":{"secs":0,"nanos":370879},"parser_time":{"secs":0,"nanos":460790},"transformer_time":{"secs":0,"nanos":382786414},"trie_time":{"secs":0,"nanos":1465334},"total_time":{"secs":0,"nanos":507510042}},"pass":false,"entropy":4.35417430173388,"entropy_diff":1.2920093439561242e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,32,25,216,33,1292]}
{"generation":187,"metadata":{"sampler_time":{"secs":0,"nanos":60918},"constraint_time":{"secs":0,"nanos":415997},"parser_time":{"secs":0,"nanos":582374},"transformer_time":{"secs":0,"nanos":452825544},"trie_time":{"secs":0,"nanos":1518166},"total_time":{"secs":0,"nanos":598863083}},"pass":false,"entropy":4.3541742980183145,"entropy_diff":3.7155656329446174e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":188,"metadata":{"sampler_time":{"secs":0,"nanos":81334},"constraint_time":{"secs":0,"nanos":398752},"parser_time":{"secs":0,"nanos":623416},"transformer_time":{"secs":0,"nanos":474110911},"trie_time":{"secs":0,"nanos":1474383},"total_time":{"secs":0,"nanos":625295458}},"pass":false,"entropy":4.354174297609377,"entropy_diff":4.0893777253359076e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ 1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":189,"metadata":{"sampler_time":{"secs":0,"nanos":59630},"constraint_time":{"secs":0,"nanos":411503},"parser_time":{"secs":0,"nanos":503449},"transformer_time":{"secs":0,"nanos":389912874},"trie_time":{"secs":0,"nanos":1505373},"total_time":{"secs":0,"nanos":505744083}},"pass":false,"entropy":4.354174297080351,"entropy_diff":5.290257121259856e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"NY\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,30513,18,216,33,25,216,33,1292]}
{"generation":190,"metadata":{"sampler_time":{"secs":0,"nanos":58296},"constraint_time":{"secs":0,"nanos":430879},"parser_time":{"secs":0,"nanos":490959},"transformer_time":{"secs":0,"nanos":382331041},"trie_time":{"secs":0,"nanos":1427250},"total_time":{"secs":0,"nanos":494294667}},"pass":false,"entropy":4.354174294406726,"entropy_diff":2.6736248770475868e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,25,216,33,1292]}
{"generation":191,"metadata":{"sampler_time":{"secs":0,"nanos":56629},"constraint_time":{"secs":0,"nanos":404255},"parser_time":{"secs":0,"nanos":545747},"transformer_time":{"secs":0,"nanos":449420670},"trie_time":{"secs":0,"nanos":1504252},"total_time":{"secs":0,"nanos":581835583}},"pass":false,"entropy":4.35417427861422,"entropy_diff":1.5792505969614012e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) (str.indexof col2 col1 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754]}
{"generation":192,"metadata":{"sampler_time":{"secs":0,"nanos":61291},"constraint_time":{"secs":0,"nanos":335577},"parser_time":{"secs":0,"nanos":540040},"transformer_time":{"secs":0,"nanos":415539709},"trie_time":{"secs":0,"nanos":1532121},"total_time":{"secs":0,"nanos":541025000}},"pass":false,"entropy":4.354174276289428,"entropy_diff":2.324791914531943e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":193,"metadata":{"sampler_time":{"secs":0,"nanos":62459},"constraint_time":{"secs":0,"nanos":381499},"parser_time":{"secs":0,"nanos":436290},"transformer_time":{"secs":0,"nanos":377242127},"trie_time":{"secs":0,"nanos":1540919},"total_time":{"secs":0,"nanos":494310208}},"pass":false,"entropy":4.35417427575196,"entropy_diff":5.374678480052353e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,32,1292]}
{"generation":194,"metadata":{"sampler_time":{"secs":0,"nanos":64377},"constraint_time":{"secs":0,"nanos":389083},"parser_time":{"secs":0,"nanos":473878},"transformer_time":{"secs":0,"nanos":382778585},"trie_time":{"secs":0,"nanos":1452172},"total_time":{"secs":0,"nanos":502105791}},"pass":false,"entropy":4.35417427230309,"entropy_diff":3.4488705225044214e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,32,25,216,33,1292]}
{"generation":195,"metadata":{"sampler_time":{"secs":0,"nanos":48121},"constraint_time":{"secs":0,"nanos":394711},"parser_time":{"secs":0,"nanos":455035},"transformer_time":{"secs":0,"nanos":389792916},"trie_time":{"secs":0,"nanos":1532379},"total_time":{"secs":0,"nanos":510642625}},"pass":false,"entropy":4.354174269455551,"entropy_diff":2.8475390934090683e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"New York\" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,25,216,34,1292]}
{"generation":196,"metadata":{"sampler_time":{"secs":0,"nanos":58334},"constraint_time":{"secs":0,"nanos":559544},"parser_time":{"secs":0,"nanos":687130},"transformer_time":{"secs":0,"nanos":458353791},"trie_time":{"secs":0,"nanos":1611755},"total_time":{"secs":0,"nanos":604935083}},"pass":false,"entropy":4.354174268316737,"entropy_diff":1.1388134879553036e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"New York\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,5529,2863,1715,216,33,25,216,33,1292]}
{"generation":197,"metadata":{"sampler_time":{"secs":0,"nanos":85168},"constraint_time":{"secs":0,"nanos":568415},"parser_time":{"secs":0,"nanos":759706},"transformer_time":{"secs":0,"nanos":600430456},"trie_time":{"secs":0,"nanos":1653708},"total_time":{"secs":0,"nanos":791393917}},"pass":false,"entropy":4.354174268243676,"entropy_diff":7.30615568045323e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 (str.replace col2 col2 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,33,7754]}
{"generation":198,"metadata":{"sampler_time":{"secs":0,"nanos":55669},"constraint_time":{"secs":0,"nanos":508869},"parser_time":{"secs":0,"nanos":547544},"transformer_time":{"secs":0,"nanos":451789836},"trie_time":{"secs":0,"nanos":1691967},"total_time":{"secs":0,"nanos":592830708}},"pass":false,"entropy":4.354174268229752,"entropy_diff":1.3923973085638863e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,34,25,216,33,1292]}
{"generation":199,"metadata":{"sampler_time":{"secs":0,"nanos":49252},"constraint_time":{"secs":0,"nanos":589044},"parser_time":{"secs":0,"nanos":594666},"transformer_time":{"secs":0,"nanos":465757869},"trie_time":{"secs":0,"nanos":1646582},"total_time":{"secs":0,"nanos":610498750}},"pass":false,"entropy":4.35417426820786,"entropy_diff":2.1891821688768687e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"New York\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,5529,2863,1715,216,33,25,216,33,1292]}
{"generation":200,"metadata":{"sampler_time":{"secs":0,"nanos":58497},"constraint_time":{"secs":0,"nanos":661208},"parser_time":{"secs":0,"nanos":647339},"transformer_time":{"secs":0,"nanos":492183251},"trie_time":{"secs":0,"nanos":1669958},"total_time":{"secs":0,"nanos":641750166}},"pass":false,"entropy":4.354174268124378,"entropy_diff":8.348166602445417e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":201,"metadata":{"sampler_time":{"secs":0,"nanos":96166},"constraint_time":{"secs":0,"nanos":590586},"parser_time":{"secs":0,"nanos":727784},"transformer_time":{"secs":0,"nanos":550886917},"trie_time":{"secs":0,"nanos":1760661},"total_time":{"secs":0,"nanos":724636084}},"pass":false,"entropy":4.3541742681218745,"entropy_diff":2.503774965134653e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (+ 1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":202,"metadata":{"sampler_time":{"secs":0,"nanos":69708},"constraint_time":{"secs":0,"nanos":620627},"parser_time":{"secs":0,"nanos":660216},"transformer_time":{"secs":0,"nanos":450644790},"trie_time":{"secs":0,"nanos":1757047},"total_time":{"secs":0,"nanos":594787625}},"pass":false,"entropy":4.354174268110664,"entropy_diff":1.121058801345498e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,32,1292]}
{"generation":203,"metadata":{"sampler_time":{"secs":0,"nanos":129712},"constraint_time":{"secs":0,"nanos":2127877},"parser_time":{"secs":0,"nanos":1297292},"transformer_time":{"secs":0,"nanos":772085708},"trie_time":{"secs":0,"nanos":1736822},"total_time":{"secs":1,"nanos":6239833}},"pass":false,"entropy":4.354174268086931,"entropy_diff":2.3733015552807046e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace \"New York\" col1 \"USA\") \"USA\") 1) (str.indexof col1 (str.replace col1 (str.replace \"New York\" col1 \"USA\") \"USA\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,476,5529,2863,18,664,33,476,24842,1715,476,24842,1715,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,476,5529,2863,18,664,33,476,24842,1715,476,24842,1715,216,33,7754]}
{"generation":204,"metadata":{"sampler_time":{"secs":0,"nanos":55543},"constraint_time":{"secs":0,"nanos":490202},"parser_time":{"secs":0,"nanos":616830},"transformer_time":{"secs":0,"nanos":450424663},"trie_time":{"secs":0,"nanos":1757039},"total_time":{"secs":0,"nanos":589254625}},"pass":false,"entropy":4.35417426800687,"entropy_diff":8.006129093018899e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":205,"metadata":{"sampler_time":{"secs":0,"nanos":56249},"constraint_time":{"secs":0,"nanos":382876},"parser_time":{"secs":0,"nanos":570212},"transformer_time":{"secs":0,"nanos":416536960},"trie_time":{"secs":0,"nanos":1658715},"total_time":{"secs":0,"nanos":538414583}},"pass":false,"entropy":4.354174267377462,"entropy_diff":6.294076371204937e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":206,"metadata":{"sampler_time":{"secs":0,"nanos":51369},"constraint_time":{"secs":0,"nanos":457458},"parser_time":{"secs":0,"nanos":668010},"transformer_time":{"secs":0,"nanos":466155126},"trie_time":{"secs":0,"nanos":1584381},"total_time":{"secs":0,"nanos":605498500}},"pass":false,"entropy":4.354174267107695,"entropy_diff":2.6976731959393874e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 1 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":207,"metadata":{"sampler_time":{"secs":0,"nanos":83251},"constraint_time":{"secs":0,"nanos":613122},"parser_time":{"secs":0,"nanos":812293},"transformer_time":{"secs":0,"nanos":616902251},"trie_time":{"secs":0,"nanos":1800119},"total_time":{"secs":0,"nanos":799135417}},"pass":false,"entropy":4.35417424509814,"entropy_diff":2.2009554179192037e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) (str.indexof col1 (str.substr col1 0 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,7754]}
{"generation":208,"metadata":{"sampler_time":{"secs":0,"nanos":65373},"constraint_time":{"secs":0,"nanos":490502},"parser_time":{"secs":0,"nanos":612989},"transformer_time":{"secs":0,"nanos":466317912},"trie_time":{"secs":0,"nanos":1792792},"total_time":{"secs":0,"nanos":604934834}},"pass":false,"entropy":4.354174245079643,"entropy_diff":1.8497203768674808e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,32,25,216,33,1292]}
{"generation":209,"metadata":{"sampler_time":{"secs":0,"nanos":48423},"constraint_time":{"secs":0,"nanos":475298},"parser_time":{"secs":0,"nanos":574548},"transformer_time":{"secs":0,"nanos":466140541},"trie_time":{"secs":0,"nanos":1770494},"total_time":{"secs":0,"nanos":604924250}},"pass":false,"entropy":4.354174245059089,"entropy_diff":2.0554224988700298e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,216,33,25,216,33,1292]}
{"generation":210,"metadata":{"sampler_time":{"secs":0,"nanos":50756},"constraint_time":{"secs":0,"nanos":500798},"parser_time":{"secs":0,"nanos":601578},"transformer_time":{"secs":0,"nanos":466380916},"trie_time":{"secs":0,"nanos":1784666},"total_time":{"secs":0,"nanos":605981042}},"pass":false,"entropy":4.35417424499196,"entropy_diff":6.712941313935517e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,34,25,216,33,1292]}
{"generation":211,"metadata":{"sampler_time":{"secs":0,"nanos":69213},"constraint_time":{"secs":0,"nanos":653082},"parser_time":{"secs":0,"nanos":690339},"transformer_time":{"secs":0,"nanos":499741581},"trie_time":{"secs":0,"nanos":1957670},"total_time":{"secs":0,"nanos":644344667}},"pass":false,"entropy":4.35417424496398,"entropy_diff":2.7979396577393345e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (- 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,17481,216,33,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":212,"metadata":{"sampler_time":{"secs":0,"nanos":52083},"constraint_time":{"secs":0,"nanos":400120},"parser_time":{"secs":0,"nanos":523495},"transformer_time":{"secs":0,"nanos":390077666},"trie_time":{"secs":0,"nanos":1732743},"total_time":{"secs":0,"nanos":500184709}},"pass":false,"entropy":4.354174244706146,"entropy_diff":2.5783464252526755e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"CA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,8970,18,216,33,25,216,33,1292]}
{"generation":213,"metadata":{"sampler_time":{"secs":0,"nanos":43002},"constraint_time":{"secs":0,"nanos":497420},"parser_time":{"secs":0,"nanos":552711},"transformer_time":{"secs":0,"nanos":465842669},"trie_time":{"secs":0,"nanos":1666248},"total_time":{"secs":0,"nanos":596135833}},"pass":false,"entropy":4.354174242675737,"entropy_diff":2.030408730036015e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":214,"metadata":{"sampler_time":{"secs":0,"nanos":57582},"constraint_time":{"secs":0,"nanos":491672},"parser_time":{"secs":0,"nanos":534583},"transformer_time":{"secs":0,"nanos":464545248},"trie_time":{"secs":0,"nanos":1824706},"total_time":{"secs":0,"nanos":595246333}},"pass":false,"entropy":4.354174240523408,"entropy_diff":2.1523289817082514e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,32,25,216,33,25,216,33,1292]}
{"generation":215,"metadata":{"sampler_time":{"secs":0,"nanos":34834},"constraint_time":{"secs":0,"nanos":392538},"parser_time":{"secs":0,"nanos":462989},"transformer_time":{"secs":0,"nanos":398406918},"trie_time":{"secs":0,"nanos":1646588},"total_time":{"secs":0,"nanos":506411667}},"pass":false,"entropy":4.35417424023869,"entropy_diff":2.8471802693275094e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" \"NY\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,476,30513,18,216,33,25,216,33,1292]}
{"generation":216,"metadata":{"sampler_time":{"secs":0,"nanos":51126},"constraint_time":{"secs":0,"nanos":305746},"parser_time":{"secs":0,"nanos":488088},"transformer_time":{"secs":0,"nanos":382079788},"trie_time":{"secs":0,"nanos":1747498},"total_time":{"secs":0,"nanos":491221958}},"pass":false,"entropy":4.3541742326858754,"entropy_diff":7.552814373923411e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,32,1292]}
{"generation":217,"metadata":{"sampler_time":{"secs":0,"nanos":44215},"constraint_time":{"secs":0,"nanos":430210},"parser_time":{"secs":0,"nanos":646953},"transformer_time":{"secs":0,"nanos":517740375},"trie_time":{"secs":0,"nanos":1682257},"total_time":{"secs":0,"nanos":669852458}},"pass":false,"entropy":4.35417423096088,"entropy_diff":1.7249952577458316e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":218,"metadata":{"sampler_time":{"secs":0,"nanos":40002},"constraint_time":{"secs":0,"nanos":313456},"parser_time":{"secs":0,"nanos":471454},"transformer_time":{"secs":0,"nanos":374120831},"trie_time":{"secs":0,"nanos":1654368},"total_time":{"secs":0,"nanos":484517167}},"pass":false,"entropy":4.354174225403135,"entropy_diff":5.557745375028844e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,476,476,216,33,25,216,33,1292]}
{"generation":219,"metadata":{"sampler_time":{"secs":0,"nanos":54370},"constraint_time":{"secs":0,"nanos":950128},"parser_time":{"secs":0,"nanos":681328},"transformer_time":{"secs":0,"nanos":548647838},"trie_time":{"secs":0,"nanos":1832708},"total_time":{"secs":0,"nanos":708086708}},"pass":false,"entropy":4.354174208087655,"entropy_diff":1.7315479716728532e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr (str.substr col1 1 1) 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":220,"metadata":{"sampler_time":{"secs":0,"nanos":56706},"constraint_time":{"secs":0,"nanos":523880},"parser_time":{"secs":0,"nanos":552994},"transformer_time":{"secs":0,"nanos":457574210},"trie_time":{"secs":0,"nanos":1929004},"total_time":{"secs":0,"nanos":593157250}},"pass":false,"entropy":4.3541742070965235,"entropy_diff":9.911316212196652e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,32,1292]}
{"generation":221,"metadata":{"sampler_time":{"secs":0,"nanos":41253},"constraint_time":{"secs":0,"nanos":527207},"parser_time":{"secs":0,"nanos":552040},"transformer_time":{"secs":0,"nanos":448814334},"trie_time":{"secs":0,"nanos":1929080},"total_time":{"secs":0,"nanos":579069875}},"pass":false,"entropy":4.354174207089582,"entropy_diff":6.941114349956479e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,32,25,216,33,1292]}
{"generation":222,"metadata":{"sampler_time":{"secs":0,"nanos":56991},"constraint_time":{"secs":0,"nanos":589629},"parser_time":{"secs":0,"nanos":845713},"transformer_time":{"secs":0,"nanos":585948418},"trie_time":{"secs":0,"nanos":1908372},"total_time":{"secs":0,"nanos":759349125}},"pass":false,"entropy":4.354174207073019,"entropy_diff":1.6563639348987635e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) (str.indexof col2 (str.replace col2 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,216,33,7754]}
{"generation":223,"metadata":{"sampler_time":{"secs":0,"nanos":52455},"constraint_time":{"secs":0,"nanos":614412},"parser_time":{"secs":0,"nanos":741793},"transformer_time":{"secs":0,"nanos":517428831},"trie_time":{"secs":0,"nanos":1972900},"total_time":{"secs":0,"nanos":665161833}},"pass":false,"entropy":4.354174207044681,"entropy_diff":2.8337332480532496e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":224,"metadata":{"sampler_time":{"secs":0,"nanos":49627},"constraint_time":{"secs":0,"nanos":419960},"parser_time":{"secs":0,"nanos":684166},"transformer_time":{"secs":0,"nanos":450432122},"trie_time":{"secs":0,"nanos":1809075},"total_time":{"secs":0,"nanos":579267083}},"pass":false,"entropy":4.354174206988821,"entropy_diff":5.5860205350199976e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":225,"metadata":{"sampler_time":{"secs":0,"nanos":49995},"constraint_time":{"secs":0,"nanos":513044},"parser_time":{"secs":0,"nanos":597031},"transformer_time":{"secs":0,"nanos":458273540},"trie_time":{"secs":0,"nanos":2077791},"total_time":{"secs":0,"nanos":590063791}},"pass":false,"entropy":4.354174201489666,"entropy_diff":5.499154909216486e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,34,1292]}
{"generation":226,"metadata":{"sampler_time":{"secs":0,"nanos":50412},"constraint_time":{"secs":0,"nanos":640040},"parser_time":{"secs":0,"nanos":779250},"transformer_time":{"secs":0,"nanos":604348331},"trie_time":{"secs":0,"nanos":2057039},"total_time":{"secs":0,"nanos":778167542}},"pass":false,"entropy":4.35417420148502,"entropy_diff":4.646061313451355e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,216,33,1292]}
{"generation":227,"metadata":{"sampler_time":{"secs":0,"nanos":72549},"constraint_time":{"secs":0,"nanos":708208},"parser_time":{"secs":0,"nanos":1009303},"transformer_time":{"secs":0,"nanos":746166460},"trie_time":{"secs":0,"nanos":2150324},"total_time":{"secs":0,"nanos":962633125}},"pass":false,"entropy":4.354174201484719,"entropy_diff":3.0109248427834245e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":228,"metadata":{"sampler_time":{"secs":0,"nanos":74543},"constraint_time":{"secs":0,"nanos":761665},"parser_time":{"secs":0,"nanos":1027252},"transformer_time":{"secs":0,"nanos":780488915},"trie_time":{"secs":0,"nanos":2135251},"total_time":{"secs":1,"nanos":2655625}},"pass":false,"entropy":4.35417420148468,"entropy_diff":3.907985046680551e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof (str.replace col1 col1 col1) (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":229,"metadata":{"sampler_time":{"secs":0,"nanos":34335},"constraint_time":{"secs":0,"nanos":519210},"parser_time":{"secs":0,"nanos":641913},"transformer_time":{"secs":0,"nanos":457339045},"trie_time":{"secs":0,"nanos":2125667},"total_time":{"secs":0,"nanos":589902000}},"pass":false,"entropy":4.354174201481221,"entropy_diff":3.4594549447319878e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,34,1292]}
{"generation":230,"metadata":{"sampler_time":{"secs":0,"nanos":44084},"constraint_time":{"secs":0,"nanos":521709},"parser_time":{"secs":0,"nanos":664000},"transformer_time":{"secs":0,"nanos":460533290},"trie_time":{"secs":0,"nanos":2072367},"total_time":{"secs":0,"nanos":592425542}},"pass":false,"entropy":4.3541742014747715,"entropy_diff":6.449063505442609e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \"New York\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,5529,2863,1715,216,33,25,216,33,1292]}
{"generation":231,"metadata":{"sampler_time":{"secs":0,"nanos":51297},"constraint_time":{"secs":0,"nanos":948038},"parser_time":{"secs":0,"nanos":724764},"transformer_time":{"secs":0,"nanos":509039128},"trie_time":{"secs":0,"nanos":2059481},"total_time":{"secs":0,"nanos":657027750}},"pass":false,"entropy":4.354174201456772,"entropy_diff":1.7999823853642738e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":232,"metadata":{"sampler_time":{"secs":0,"nanos":37081},"constraint_time":{"secs":0,"nanos":493416},"parser_time":{"secs":0,"nanos":667913},"transformer_time":{"secs":0,"nanos":449799835},"trie_time":{"secs":0,"nanos":2136243},"total_time":{"secs":0,"nanos":582113792}},"pass":false,"entropy":4.3541742013919755,"entropy_diff":6.479616843080294e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,34,25,216,33,1292]}
{"generation":233,"metadata":{"sampler_time":{"secs":0,"nanos":37329},"constraint_time":{"secs":0,"nanos":518048},"parser_time":{"secs":0,"nanos":625616},"transformer_time":{"secs":0,"nanos":458175790},"trie_time":{"secs":0,"nanos":2189749},"total_time":{"secs":0,"nanos":591436625}},"pass":false,"entropy":4.354174201372312,"entropy_diff":1.9663382033741073e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,32,1292]}
{"generation":234,"metadata":{"sampler_time":{"secs":0,"nanos":37967},"constraint_time":{"secs":0,"nanos":528335},"parser_time":{"secs":0,"nanos":634998},"transformer_time":{"secs":0,"nanos":450361291},"trie_time":{"secs":0,"nanos":2256716},"total_time":{"secs":0,"nanos":587588500}},"pass":false,"entropy":4.354174201368889,"entropy_diff":3.4230396295242826e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,32,1292]}
{"generation":235,"metadata":{"sampler_time":{"secs":0,"nanos":55963},"constraint_time":{"secs":0,"nanos":577467},"parser_time":{"secs":0,"nanos":789171},"transformer_time":{"secs":0,"nanos":517761418},"trie_time":{"secs":0,"nanos":2120046},"total_time":{"secs":0,"nanos":678464750}},"pass":false,"entropy":4.354174201360753,"entropy_diff":8.135714324453147e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":236,"metadata":{"sampler_time":{"secs":0,"nanos":54335},"constraint_time":{"secs":0,"nanos":494496},"parser_time":{"secs":0,"nanos":602207},"transformer_time":{"secs":0,"nanos":449312710},"trie_time":{"secs":0,"nanos":2089120},"total_time":{"secs":0,"nanos":588025000}},"pass":false,"entropy":4.354174201348631,"entropy_diff":1.212274725048701e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,216,34,1292]}
{"generation":237,"metadata":{"sampler_time":{"secs":0,"nanos":42416},"constraint_time":{"secs":0,"nanos":771547},"parser_time":{"secs":0,"nanos":792213},"transformer_time":{"secs":0,"nanos":600865918},"trie_time":{"secs":0,"nanos":2203501},"total_time":{"secs":0,"nanos":785536917}},"pass":false,"entropy":4.354174201343687,"entropy_diff":4.943601084050897e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 0)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,1292,216,33,1292]}
{"generation":238,"metadata":{"sampler_time":{"secs":0,"nanos":58167},"constraint_time":{"secs":0,"nanos":643670},"parser_time":{"secs":0,"nanos":914615},"transformer_time":{"secs":0,"nanos":627715461},"trie_time":{"secs":0,"nanos":2192842},"total_time":{"secs":0,"nanos":819923583}},"pass":false,"entropy":4.354174201343655,"entropy_diff":3.197442310920451e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (- 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,216,33,216,33,7754,216,33,1292]}
{"generation":239,"metadata":{"sampler_time":{"secs":0,"nanos":64699},"constraint_time":{"secs":0,"nanos":657042},"parser_time":{"secs":0,"nanos":869038},"transformer_time":{"secs":0,"nanos":627487794},"trie_time":{"secs":0,"nanos":2243624},"total_time":{"secs":0,"nanos":819199666}},"pass":false,"entropy":4.354174201343603,"entropy_diff":5.240252676230739e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (+ 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,216,33,7754,216,33,1292]}
{"generation":240,"metadata":{"sampler_time":{"secs":0,"nanos":100380},"constraint_time":{"secs":0,"nanos":728081},"parser_time":{"secs":0,"nanos":949198},"transformer_time":{"secs":0,"nanos":695346668},"trie_time":{"secs":0,"nanos":2205621},"total_time":{"secs":0,"nanos":903953333}},"pass":false,"entropy":4.354174201343561,"entropy_diff":4.1744385725905886e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col2 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,3888,1714,664,34,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":241,"metadata":{"sampler_time":{"secs":0,"nanos":115790},"constraint_time":{"secs":0,"nanos":845881},"parser_time":{"secs":0,"nanos":1433204},"transformer_time":{"secs":1,"nanos":27114753},"trie_time":{"secs":0,"nanos":2221088},"total_time":{"secs":1,"nanos":335939833}},"pass":false,"entropy":4.354174201343389,"entropy_diff":1.723066134218243e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col1 col1 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":242,"metadata":{"sampler_time":{"secs":0,"nanos":67375},"constraint_time":{"secs":0,"nanos":593086},"parser_time":{"secs":0,"nanos":830875},"transformer_time":{"secs":0,"nanos":661822335},"trie_time":{"secs":0,"nanos":2334330},"total_time":{"secs":0,"nanos":858592708}},"pass":false,"entropy":4.3541742013428655,"entropy_diff":5.231370892033738e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 col1 (str.indexof col1 col1 (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":243,"metadata":{"sampler_time":{"secs":0,"nanos":70667},"constraint_time":{"secs":0,"nanos":647089},"parser_time":{"secs":0,"nanos":876664},"transformer_time":{"secs":0,"nanos":601730961},"trie_time":{"secs":0,"nanos":2379337},"total_time":{"secs":0,"nanos":780048375}},"pass":false,"entropy":4.354174201342026,"entropy_diff":8.393286066166183e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,1292,216,33,1292]}
{"generation":244,"metadata":{"sampler_time":{"secs":0,"nanos":72705},"constraint_time":{"secs":0,"nanos":655958},"parser_time":{"secs":0,"nanos":886390},"transformer_time":{"secs":0,"nanos":672160874},"trie_time":{"secs":0,"nanos":2356117},"total_time":{"secs":0,"nanos":864338750}},"pass":false,"entropy":4.3541742013420075,"entropy_diff":1.865174681370263e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":245,"metadata":{"sampler_time":{"secs":0,"nanos":163416},"constraint_time":{"secs":0,"nanos":793121},"parser_time":{"secs":0,"nanos":1399661},"transformer_time":{"secs":1,"nanos":17425915},"trie_time":{"secs":0,"nanos":2338296},"total_time":{"secs":1,"nanos":306137417}},"pass":false,"entropy":4.354174201341964,"entropy_diff":4.3520742565306136e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.at col1 0) (str.indexof col1 col1 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col1 0 1) (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":246,"metadata":{"sampler_time":{"secs":0,"nanos":57874},"constraint_time":{"secs":0,"nanos":629121},"parser_time":{"secs":0,"nanos":747797},"transformer_time":{"secs":0,"nanos":518046249},"trie_time":{"secs":0,"nanos":2396000},"total_time":{"secs":0,"nanos":669973291}},"pass":false,"entropy":4.354174201341593,"entropy_diff":3.7125857943465235e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 \" \" \",\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,476,476,42934,1292,216,33,25,216,33,1292]}
{"generation":247,"metadata":{"sampler_time":{"secs":0,"nanos":49798},"constraint_time":{"secs":0,"nanos":556589},"parser_time":{"secs":0,"nanos":573664},"transformer_time":{"secs":0,"nanos":449928413},"trie_time":{"secs":0,"nanos":2344623},"total_time":{"secs":0,"nanos":578886334}},"pass":false,"entropy":4.354174201330281,"entropy_diff":1.1311840353300795e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,32,1292]}
{"generation":248,"metadata":{"sampler_time":{"secs":0,"nanos":67120},"constraint_time":{"secs":0,"nanos":521914},"parser_time":{"secs":0,"nanos":575617},"transformer_time":{"secs":0,"nanos":450241748},"trie_time":{"secs":0,"nanos":2380338},"total_time":{"secs":0,"nanos":586935291}},"pass":false,"entropy":4.354174201307051,"entropy_diff":2.3230306567256775e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,32,25,216,33,1292]}
{"generation":249,"metadata":{"sampler_time":{"secs":0,"nanos":78915},"constraint_time":{"secs":0,"nanos":1100332},"parser_time":{"secs":0,"nanos":774672},"transformer_time":{"secs":0,"nanos":518137914},"trie_time":{"secs":0,"nanos":2320502},"total_time":{"secs":0,"nanos":680002833}},"pass":false,"entropy":4.354174201291756,"entropy_diff":1.5294432387236157e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":250,"metadata":{"sampler_time":{"secs":0,"nanos":61333},"constraint_time":{"secs":0,"nanos":473124},"parser_time":{"secs":0,"nanos":586922},"transformer_time":{"secs":0,"nanos":441178496},"trie_time":{"secs":0,"nanos":2314423},"total_time":{"secs":0,"nanos":571632167}},"pass":false,"entropy":4.354174201269193,"entropy_diff":2.256328457406198e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,42934,25,216,33,25,216,33,1292]}
{"generation":251,"metadata":{"sampler_time":{"secs":0,"nanos":36747},"constraint_time":{"secs":0,"nanos":462960},"parser_time":{"secs":0,"nanos":565555},"transformer_time":{"secs":0,"nanos":441109668},"trie_time":{"secs":0,"nanos":2221747},"total_time":{"secs":0,"nanos":571582208}},"pass":false,"entropy":4.354174201150351,"entropy_diff":1.1884182526955556e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,34,25,216,33,25,216,33,1292]}
{"generation":252,"metadata":{"sampler_time":{"secs":0,"nanos":94701},"constraint_time":{"secs":0,"nanos":887205},"parser_time":{"secs":0,"nanos":1003579},"transformer_time":{"secs":0,"nanos":653489543},"trie_time":{"secs":0,"nanos":2370497},"total_time":{"secs":0,"nanos":844557375}},"pass":false,"entropy":4.354174200638954,"entropy_diff":5.113971468517775e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (- (str.indexof col1 \" \" 1) 1)) (str.indexof col1 \" \" (- (str.indexof col1 \" \" 1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,476,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,38799]}
{"generation":253,"metadata":{"sampler_time":{"secs":0,"nanos":54705},"constraint_time":{"secs":0,"nanos":412671},"parser_time":{"secs":0,"nanos":600470},"transformer_time":{"secs":0,"nanos":475676206},"trie_time":{"secs":0,"nanos":2222994},"total_time":{"secs":0,"nanos":616127292}},"pass":false,"entropy":4.35417420007638,"entropy_diff":5.625739873948987e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (+ 1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,30425,216,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":254,"metadata":{"sampler_time":{"secs":0,"nanos":41007},"constraint_time":{"secs":0,"nanos":354661},"parser_time":{"secs":0,"nanos":546411},"transformer_time":{"secs":0,"nanos":440377750},"trie_time":{"secs":0,"nanos":2202537},"total_time":{"secs":0,"nanos":568200834}},"pass":false,"entropy":4.354174199175171,"entropy_diff":9.012088852955458e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":255,"metadata":{"sampler_time":{"secs":0,"nanos":61757},"constraint_time":{"secs":0,"nanos":594209},"parser_time":{"secs":0,"nanos":597664},"transformer_time":{"secs":0,"nanos":465898338},"trie_time":{"secs":0,"nanos":2431172},"total_time":{"secs":0,"nanos":601278875}},"pass":false,"entropy":4.354174197974378,"entropy_diff":1.2007932426172374e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"USA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,24842,1715,216,33,25,216,33,1292]}
{"generation":256,"metadata":{"sampler_time":{"secs":0,"nanos":53918},"constraint_time":{"secs":0,"nanos":573040},"parser_time":{"secs":0,"nanos":749630},"transformer_time":{"secs":0,"nanos":602858087},"trie_time":{"secs":0,"nanos":2480155},"total_time":{"secs":0,"nanos":779934083}},"pass":false,"entropy":4.354174197947534,"entropy_diff":2.6843416378596885e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) (str.indexof col2 (str.replace col2 col2 col1) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,34,7754]}
{"generation":257,"metadata":{"sampler_time":{"secs":0,"nanos":66177},"constraint_time":{"secs":0,"nanos":574162},"parser_time":{"secs":0,"nanos":667002},"transformer_time":{"secs":0,"nanos":517018793},"trie_time":{"secs":0,"nanos":2522205},"total_time":{"secs":0,"nanos":668295166}},"pass":false,"entropy":4.3541741979429585,"entropy_diff":4.575895218295045e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":258,"metadata":{"sampler_time":{"secs":0,"nanos":51172},"constraint_time":{"secs":0,"nanos":1060204},"parser_time":{"secs":0,"nanos":806247},"transformer_time":{"secs":0,"nanos":508512462},"trie_time":{"secs":0,"nanos":2504208},"total_time":{"secs":0,"nanos":667634667}},"pass":false,"entropy":4.354174197928161,"entropy_diff":1.4797052472204086e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,42934,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":259,"metadata":{"sampler_time":{"secs":0,"nanos":35875},"constraint_time":{"secs":0,"nanos":510122},"parser_time":{"secs":0,"nanos":543372},"transformer_time":{"secs":0,"nanos":448565247},"trie_time":{"secs":0,"nanos":2533504},"total_time":{"secs":0,"nanos":582098708}},"pass":false,"entropy":4.354174197916128,"entropy_diff":1.2033041230097297e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,42934,25,216,33,25,216,33,1292]}
{"generation":260,"metadata":{"sampler_time":{"secs":0,"nanos":40301},"constraint_time":{"secs":0,"nanos":1295829},"parser_time":{"secs":0,"nanos":716579},"transformer_time":{"secs":0,"nanos":533697661},"trie_time":{"secs":0,"nanos":2506869},"total_time":{"secs":0,"nanos":691995625}},"pass":false,"entropy":4.354174197891033,"entropy_diff":2.509548124862704e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":261,"metadata":{"sampler_time":{"secs":0,"nanos":15407},"constraint_time":{"secs":0,"nanos":550711},"parser_time":{"secs":0,"nanos":589498},"transformer_time":{"secs":0,"nanos":450848085},"trie_time":{"secs":0,"nanos":2522542},"total_time":{"secs":0,"nanos":586528417}},"pass":false,"entropy":4.354174197868424,"entropy_diff":2.2608581673466688e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,34,25,216,33,1292]}
{"generation":262,"metadata":{"sampler_time":{"secs":0,"nanos":34997},"constraint_time":{"secs":0,"nanos":594254},"parser_time":{"secs":0,"nanos":656838},"transformer_time":{"secs":0,"nanos":441725002},"trie_time":{"secs":0,"nanos":2812870},"total_time":{"secs":0,"nanos":579289208}},"pass":false,"entropy":4.354174197860319,"entropy_diff":8.105516258183343e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,34,1292]}
{"generation":263,"metadata":{"sampler_time":{"secs":0,"nanos":35121},"constraint_time":{"secs":0,"nanos":799965},"parser_time":{"secs":0,"nanos":648702},"transformer_time":{"secs":0,"nanos":462503624},"trie_time":{"secs":0,"nanos":2813752},"total_time":{"secs":0,"nanos":599367000}},"pass":false,"entropy":4.3541741978560085,"entropy_diff":4.310329870804708e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"New York\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,5529,2863,1715,216,32,25,216,33,1292]}
{"generation":264,"metadata":{"sampler_time":{"secs":0,"nanos":23420},"constraint_time":{"secs":0,"nanos":563752},"parser_time":{"secs":0,"nanos":649628},"transformer_time":{"secs":0,"nanos":461398748},"trie_time":{"secs":0,"nanos":2437261},"total_time":{"secs":0,"nanos":594712583}},"pass":false,"entropy":4.354174197851925,"entropy_diff":4.083844373781176e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace \"New York\" col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,476,5529,2863,18,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":265,"metadata":{"sampler_time":{"secs":0,"nanos":32247},"constraint_time":{"secs":0,"nanos":481040},"parser_time":{"secs":0,"nanos":640836},"transformer_time":{"secs":0,"nanos":466621422},"trie_time":{"secs":0,"nanos":2264498},"total_time":{"secs":0,"nanos":597909709}},"pass":false,"entropy":4.354174197145007,"entropy_diff":7.069171914508843e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col2 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":266,"metadata":{"sampler_time":{"secs":0,"nanos":14500},"constraint_time":{"secs":0,"nanos":403331},"parser_time":{"secs":0,"nanos":520626},"transformer_time":{"secs":0,"nanos":398864873},"trie_time":{"secs":0,"nanos":2208122},"total_time":{"secs":0,"nanos":511071792}},"pass":false,"entropy":4.35417419538553,"entropy_diff":1.7594770085338496e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" \"New York\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,476,5529,2863,18,216,33,25,216,33,1292]}
{"generation":267,"metadata":{"sampler_time":{"secs":0,"nanos":22710},"constraint_time":{"secs":0,"nanos":317626},"parser_time":{"secs":0,"nanos":470171},"transformer_time":{"secs":0,"nanos":383346755},"trie_time":{"secs":0,"nanos":2346168},"total_time":{"secs":0,"nanos":499182000}},"pass":false,"entropy":4.354174192024421,"entropy_diff":3.361109612853852e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,216,34,1292]}
{"generation":268,"metadata":{"sampler_time":{"secs":0,"nanos":23543},"constraint_time":{"secs":0,"nanos":431925},"parser_time":{"secs":0,"nanos":596755},"transformer_time":{"secs":0,"nanos":475193081},"trie_time":{"secs":0,"nanos":2328255},"total_time":{"secs":0,"nanos":612592791}},"pass":false,"entropy":4.354174191887065,"entropy_diff":1.3735590442820467e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.len col1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,4152,664,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":269,"metadata":{"sampler_time":{"secs":0,"nanos":18088},"constraint_time":{"secs":0,"nanos":646793},"parser_time":{"secs":0,"nanos":716616},"transformer_time":{"secs":0,"nanos":517622579},"trie_time":{"secs":0,"nanos":2336179},"total_time":{"secs":0,"nanos":670832334}},"pass":false,"entropy":4.354174191768761,"entropy_diff":1.1830358914721728e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col2 \" \" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,34,476,476,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":270,"metadata":{"sampler_time":{"secs":0,"nanos":35206},"constraint_time":{"secs":0,"nanos":355705},"parser_time":{"secs":0,"nanos":415711},"transformer_time":{"secs":0,"nanos":382727999},"trie_time":{"secs":0,"nanos":2346250},"total_time":{"secs":0,"nanos":495562000}},"pass":false,"entropy":4.354174191556645,"entropy_diff":2.121165465496233e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,34,25,216,34,1292]}
{"generation":271,"metadata":{"sampler_time":{"secs":0,"nanos":30706},"constraint_time":{"secs":0,"nanos":318040},"parser_time":{"secs":0,"nanos":475957},"transformer_time":{"secs":0,"nanos":390579168},"trie_time":{"secs":0,"nanos":2370460},"total_time":{"secs":0,"nanos":500082583}},"pass":false,"entropy":4.354174191221765,"entropy_diff":3.348796795421549e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"New York\" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,25,216,32,1292]}
{"generation":272,"metadata":{"sampler_time":{"secs":0,"nanos":21721},"constraint_time":{"secs":0,"nanos":891457},"parser_time":{"secs":0,"nanos":627169},"transformer_time":{"secs":0,"nanos":510191372},"trie_time":{"secs":0,"nanos":2463864},"total_time":{"secs":0,"nanos":648822250}},"pass":false,"entropy":4.354174190883867,"entropy_diff":3.3789770981229594e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":273,"metadata":{"sampler_time":{"secs":0,"nanos":41035},"constraint_time":{"secs":0,"nanos":477917},"parser_time":{"secs":0,"nanos":585166},"transformer_time":{"secs":0,"nanos":441050253},"trie_time":{"secs":0,"nanos":2466334},"total_time":{"secs":0,"nanos":566248458}},"pass":false,"entropy":4.354174190740475,"entropy_diff":1.4339196496848672e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,34,216,32,25,216,33,25,216,33,1292]}
{"generation":274,"metadata":{"sampler_time":{"secs":0,"nanos":32750},"constraint_time":{"secs":0,"nanos":497085},"parser_time":{"secs":0,"nanos":623992},"transformer_time":{"secs":0,"nanos":450456957},"trie_time":{"secs":0,"nanos":2465502},"total_time":{"secs":0,"nanos":581900166}},"pass":false,"entropy":4.354174190268838,"entropy_diff":4.716378398939014e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,476,20361,216,33,25,216,33,1292]}
{"generation":275,"metadata":{"sampler_time":{"secs":0,"nanos":24124},"constraint_time":{"secs":0,"nanos":365665},"parser_time":{"secs":0,"nanos":742785},"transformer_time":{"secs":0,"nanos":519707162},"trie_time":{"secs":0,"nanos":2395950},"total_time":{"secs":0,"nanos":667912375}},"pass":false,"entropy":4.354174189544372,"entropy_diff":7.244658206673193e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (str.indexof col1 col2 (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":276,"metadata":{"sampler_time":{"secs":0,"nanos":26001},"constraint_time":{"secs":0,"nanos":415461},"parser_time":{"secs":0,"nanos":606872},"transformer_time":{"secs":0,"nanos":449616543},"trie_time":{"secs":0,"nanos":2367926},"total_time":{"secs":0,"nanos":577246542}},"pass":false,"entropy":4.354174189324057,"entropy_diff":2.2031443336345546e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof col2 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754]}
{"generation":277,"metadata":{"sampler_time":{"secs":0,"nanos":11581},"constraint_time":{"secs":0,"nanos":378746},"parser_time":{"secs":0,"nanos":543829},"transformer_time":{"secs":0,"nanos":407763751},"trie_time":{"secs":0,"nanos":2407291},"total_time":{"secs":0,"nanos":529065166}},"pass":false,"entropy":4.354174189274951,"entropy_diff":4.9106496646800224e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ 2 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,216,34,216,33,1292,216,33,1292]}
{"generation":278,"metadata":{"sampler_time":{"secs":0,"nanos":20250},"constraint_time":{"secs":0,"nanos":337629},"parser_time":{"secs":0,"nanos":483869},"transformer_time":{"secs":0,"nanos":390218457},"trie_time":{"secs":0,"nanos":2367913},"total_time":{"secs":0,"nanos":500006042}},"pass":false,"entropy":4.354174189193176,"entropy_diff":8.177458710179053e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"CT\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5335,18,216,33,25,216,33,1292]}
{"generation":279,"metadata":{"sampler_time":{"secs":0,"nanos":18792},"constraint_time":{"secs":0,"nanos":336711},"parser_time":{"secs":0,"nanos":504913},"transformer_time":{"secs":0,"nanos":381844789},"trie_time":{"secs":0,"nanos":2270872},"total_time":{"secs":0,"nanos":492237875}},"pass":false,"entropy":4.354174188282681,"entropy_diff":9.104947906735106e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,32,25,216,33,1292]}
{"generation":280,"metadata":{"sampler_time":{"secs":0,"nanos":22752},"constraint_time":{"secs":0,"nanos":485042},"parser_time":{"secs":0,"nanos":573038},"transformer_time":{"secs":0,"nanos":451336418},"trie_time":{"secs":0,"nanos":2365421},"total_time":{"secs":0,"nanos":584465583}},"pass":false,"entropy":4.35417418411627,"entropy_diff":4.166411216033339e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":281,"metadata":{"sampler_time":{"secs":0,"nanos":34449},"constraint_time":{"secs":0,"nanos":1163287},"parser_time":{"secs":0,"nanos":720494},"transformer_time":{"secs":0,"nanos":540921500},"trie_time":{"secs":0,"nanos":2358121},"total_time":{"secs":0,"nanos":693202875}},"pass":false,"entropy":4.354174183576301,"entropy_diff":5.399689584351108e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":282,"metadata":{"sampler_time":{"secs":0,"nanos":12540},"constraint_time":{"secs":0,"nanos":320919},"parser_time":{"secs":0,"nanos":552292},"transformer_time":{"secs":0,"nanos":449931749},"trie_time":{"secs":0,"nanos":2430081},"total_time":{"secs":0,"nanos":578663000}},"pass":false,"entropy":4.354174182806564,"entropy_diff":7.697371628978544e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 0) (str.indexof col2 col1 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,32,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754]}
{"generation":283,"metadata":{"sampler_time":{"secs":0,"nanos":21794},"constraint_time":{"secs":0,"nanos":361460},"parser_time":{"secs":0,"nanos":454664},"transformer_time":{"secs":0,"nanos":373311333},"trie_time":{"secs":0,"nanos":2449714},"total_time":{"secs":0,"nanos":479677875}},"pass":false,"entropy":4.354174182584764,"entropy_diff":2.2180035585961377e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,34,25,216,34,1292]}
{"generation":284,"metadata":{"sampler_time":{"secs":0,"nanos":23581},"constraint_time":{"secs":0,"nanos":361918},"parser_time":{"secs":0,"nanos":451546},"transformer_time":{"secs":0,"nanos":382578168},"trie_time":{"secs":0,"nanos":2358908},"total_time":{"secs":0,"nanos":492871875}},"pass":false,"entropy":4.35417418223152,"entropy_diff":3.532436565478747e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,34,25,216,33,1292]}
{"generation":285,"metadata":{"sampler_time":{"secs":0,"nanos":18295},"constraint_time":{"secs":0,"nanos":479833},"parser_time":{"secs":0,"nanos":558710},"transformer_time":{"secs":0,"nanos":440485833},"trie_time":{"secs":0,"nanos":2294286},"total_time":{"secs":0,"nanos":570097083}},"pass":false,"entropy":4.354174179457606,"entropy_diff":2.773914431486446e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.at col1 0) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,261,664,33,216,32,25,476,476,216,33,25,216,33,1292]}
{"generation":286,"metadata":{"sampler_time":{"secs":0,"nanos":19624},"constraint_time":{"secs":0,"nanos":322454},"parser_time":{"secs":0,"nanos":485709},"transformer_time":{"secs":0,"nanos":390463001},"trie_time":{"secs":0,"nanos":2273456},"total_time":{"secs":0,"nanos":504317375}},"pass":false,"entropy":4.354174166909607,"entropy_diff":1.2547999084233652e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,664,34,216,32,25,216,33,1292]}
{"generation":287,"metadata":{"sampler_time":{"secs":0,"nanos":19246},"constraint_time":{"secs":0,"nanos":514628},"parser_time":{"secs":0,"nanos":548087},"transformer_time":{"secs":0,"nanos":468404835},"trie_time":{"secs":0,"nanos":2573499},"total_time":{"secs":0,"nanos":605870333}},"pass":false,"entropy":4.354174165251524,"entropy_diff":1.6580825601408833e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,34,25,216,33,25,216,33,1292]}
{"generation":288,"metadata":{"sampler_time":{"secs":0,"nanos":32870},"constraint_time":{"secs":0,"nanos":482082},"parser_time":{"secs":0,"nanos":606419},"transformer_time":{"secs":0,"nanos":483025749},"trie_time":{"secs":0,"nanos":2535087},"total_time":{"secs":0,"nanos":629682708}},"pass":false,"entropy":4.354174165201445,"entropy_diff":5.007905201637186e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (- (str.indexof col1 col1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,17481,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":289,"metadata":{"sampler_time":{"secs":0,"nanos":26253},"constraint_time":{"secs":0,"nanos":517296},"parser_time":{"secs":0,"nanos":543373},"transformer_time":{"secs":0,"nanos":467515168},"trie_time":{"secs":0,"nanos":2557584},"total_time":{"secs":0,"nanos":605479916}},"pass":false,"entropy":4.354174164527189,"entropy_diff":6.742562064232516e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,34,25,216,33,1292]}
{"generation":290,"metadata":{"sampler_time":{"secs":0,"nanos":40075},"constraint_time":{"secs":0,"nanos":687203},"parser_time":{"secs":0,"nanos":978669},"transformer_time":{"secs":0,"nanos":770692038},"trie_time":{"secs":0,"nanos":2535800},"total_time":{"secs":0,"nanos":991940583}},"pass":false,"entropy":4.354174164503655,"entropy_diff":2.3534063586794218e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) (str.indexof col1 (str.substr col1 1 2) (str.indexof col1 \"New York\" 1))) (str.indexof col1 \"New York\" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,7754,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,7754]}
{"generation":291,"metadata":{"sampler_time":{"secs":0,"nanos":48206},"constraint_time":{"secs":0,"nanos":722250},"parser_time":{"secs":0,"nanos":960290},"transformer_time":{"secs":0,"nanos":753708833},"trie_time":{"secs":0,"nanos":2617838},"total_time":{"secs":0,"nanos":971980375}},"pass":false,"entropy":4.354174164484752,"entropy_diff":1.8903101306477765e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) (str.indexof col1 (str.substr col1 0 1) (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":292,"metadata":{"sampler_time":{"secs":0,"nanos":27007},"constraint_time":{"secs":0,"nanos":704656},"parser_time":{"secs":0,"nanos":923340},"transformer_time":{"secs":0,"nanos":693250671},"trie_time":{"secs":0,"nanos":2643829},"total_time":{"secs":0,"nanos":893628000}},"pass":false,"entropy":4.3541741644543,"entropy_diff":3.0451197119418794e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) (str.indexof col2 (str.substr col2 (str.indexof col2 \" \" 1) 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,7754]}
{"generation":293,"metadata":{"sampler_time":{"secs":0,"nanos":26167},"constraint_time":{"secs":0,"nanos":502046},"parser_time":{"secs":0,"nanos":577916},"transformer_time":{"secs":0,"nanos":465751083},"trie_time":{"secs":0,"nanos":2720124},"total_time":{"secs":0,"nanos":602460625}},"pass":false,"entropy":4.354174164439452,"entropy_diff":1.4848566820546694e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,32,25,216,33,1292]}
{"generation":294,"metadata":{"sampler_time":{"secs":0,"nanos":18833},"constraint_time":{"secs":0,"nanos":521624},"parser_time":{"secs":0,"nanos":565164},"transformer_time":{"secs":0,"nanos":465890041},"trie_time":{"secs":0,"nanos":2680173},"total_time":{"secs":0,"nanos":602739500}},"pass":false,"entropy":4.354174164423211,"entropy_diff":1.624123058263649e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,34,25,216,33,1292]}
{"generation":295,"metadata":{"sampler_time":{"secs":0,"nanos":15958},"constraint_time":{"secs":0,"nanos":514002},"parser_time":{"secs":0,"nanos":539965},"transformer_time":{"secs":0,"nanos":466449246},"trie_time":{"secs":0,"nanos":2730700},"total_time":{"secs":0,"nanos":606468875}},"pass":false,"entropy":4.354174164402718,"entropy_diff":2.049294067774099e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,32,25,216,33,25,216,33,1292]}
{"generation":296,"metadata":{"sampler_time":{"secs":0,"nanos":22119},"constraint_time":{"secs":0,"nanos":506958},"parser_time":{"secs":0,"nanos":524336},"transformer_time":{"secs":0,"nanos":470752912},"trie_time":{"secs":0,"nanos":2731298},"total_time":{"secs":0,"nanos":606817084}},"pass":false,"entropy":4.354174164355062,"entropy_diff":4.765521310901022e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,34,25,216,33,1292]}
{"generation":297,"metadata":{"sampler_time":{"secs":0,"nanos":49000},"constraint_time":{"secs":0,"nanos":507167},"parser_time":{"secs":0,"nanos":598743},"transformer_time":{"secs":0,"nanos":466909919},"trie_time":{"secs":0,"nanos":2980676},"total_time":{"secs":0,"nanos":604214958}},"pass":false,"entropy":4.354174164338858,"entropy_diff":1.6204815267428785e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,32,25,216,33,1292]}
{"generation":298,"metadata":{"sampler_time":{"secs":0,"nanos":28165},"constraint_time":{"secs":0,"nanos":586084},"parser_time":{"secs":0,"nanos":600243},"transformer_time":{"secs":0,"nanos":474362792},"trie_time":{"secs":0,"nanos":2669843},"total_time":{"secs":0,"nanos":606427500}},"pass":false,"entropy":4.354174164314549,"entropy_diff":2.4308555168772727e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr \"New York\" 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,476,5529,2863,18,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":299,"metadata":{"sampler_time":{"secs":0,"nanos":39454},"constraint_time":{"secs":0,"nanos":440834},"parser_time":{"secs":0,"nanos":614176},"transformer_time":{"secs":0,"nanos":474010207},"trie_time":{"secs":0,"nanos":2414171},"total_time":{"secs":0,"nanos":605281917}},"pass":false,"entropy":4.3541741638518605,"entropy_diff":4.6268855413700294e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":300,"metadata":{"sampler_time":{"secs":0,"nanos":31753},"constraint_time":{"secs":0,"nanos":399791},"parser_time":{"secs":0,"nanos":613408},"transformer_time":{"secs":0,"nanos":441039329},"trie_time":{"secs":0,"nanos":2568999},"total_time":{"secs":0,"nanos":567063500}},"pass":false,"entropy":4.354174160609798,"entropy_diff":3.2420626183693457e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) (str.indexof col1 \" \" 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,34,7754]}
{"generation":301,"metadata":{"sampler_time":{"secs":0,"nanos":27923},"constraint_time":{"secs":0,"nanos":472205},"parser_time":{"secs":0,"nanos":696753},"transformer_time":{"secs":0,"nanos":483348126},"trie_time":{"secs":0,"nanos":2590668},"total_time":{"secs":0,"nanos":624638667}},"pass":false,"entropy":4.354174160147056,"entropy_diff":4.6274184484218495e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (- (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":302,"metadata":{"sampler_time":{"secs":0,"nanos":20342},"constraint_time":{"secs":0,"nanos":560171},"parser_time":{"secs":0,"nanos":626203},"transformer_time":{"secs":0,"nanos":452216249},"trie_time":{"secs":0,"nanos":2819164},"total_time":{"secs":0,"nanos":590301916}},"pass":false,"entropy":4.354174160071771,"entropy_diff":7.528466738904172e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,32,25,216,33,1292]}
{"generation":303,"metadata":{"sampler_time":{"secs":0,"nanos":30948},"constraint_time":{"secs":0,"nanos":594215},"parser_time":{"secs":0,"nanos":753712},"transformer_time":{"secs":0,"nanos":595290870},"trie_time":{"secs":0,"nanos":2894535},"total_time":{"secs":0,"nanos":773251792}},"pass":false,"entropy":4.354174160063719,"entropy_diff":8.052225553001335e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":304,"metadata":{"sampler_time":{"secs":0,"nanos":39667},"constraint_time":{"secs":0,"nanos":595415},"parser_time":{"secs":0,"nanos":834376},"transformer_time":{"secs":0,"nanos":627826788},"trie_time":{"secs":0,"nanos":2855045},"total_time":{"secs":0,"nanos":819470542}},"pass":false,"entropy":4.354174160063034,"entropy_diff":6.847855615887966e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (+ 1 (str.indexof col1 (str.replace col1 col1 col1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,30425,216,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,38799]}
{"generation":305,"metadata":{"sampler_time":{"secs":0,"nanos":30663},"constraint_time":{"secs":0,"nanos":1565167},"parser_time":{"secs":0,"nanos":727206},"transformer_time":{"secs":0,"nanos":521802792},"trie_time":{"secs":0,"nanos":2884294},"total_time":{"secs":0,"nanos":680405666}},"pass":false,"entropy":4.354174160061108,"entropy_diff":1.9264589923295716e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col2 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,34,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":306,"metadata":{"sampler_time":{"secs":0,"nanos":30375},"constraint_time":{"secs":0,"nanos":402749},"parser_time":{"secs":0,"nanos":619329},"transformer_time":{"secs":0,"nanos":475790670},"trie_time":{"secs":0,"nanos":2652592},"total_time":{"secs":0,"nanos":615921959}},"pass":false,"entropy":4.354174160039117,"entropy_diff":2.19912976717751e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (+ 1 (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,30425,216,33,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":307,"metadata":{"sampler_time":{"secs":0,"nanos":63918},"constraint_time":{"secs":0,"nanos":1089882},"parser_time":{"secs":0,"nanos":1644458},"transformer_time":{"secs":1,"nanos":667084},"trie_time":{"secs":0,"nanos":3068490},"total_time":{"secs":1,"nanos":292146375}},"pass":false,"entropy":4.354174159560308,"entropy_diff":4.788089924545602e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1))) (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 (str.replace col1 \" \" \" \") (str.indexof col1 \" \" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,1292,7754]}
{"generation":308,"metadata":{"sampler_time":{"secs":0,"nanos":47702},"constraint_time":{"secs":0,"nanos":643499},"parser_time":{"secs":0,"nanos":664121},"transformer_time":{"secs":0,"nanos":584958292},"trie_time":{"secs":0,"nanos":3094083},"total_time":{"secs":0,"nanos":752202417}},"pass":false,"entropy":4.354174159560143,"entropy_diff":1.6431300764452317e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \",\" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":309,"metadata":{"sampler_time":{"secs":0,"nanos":40542},"constraint_time":{"secs":0,"nanos":584165},"parser_time":{"secs":0,"nanos":718550},"transformer_time":{"secs":0,"nanos":593813998},"trie_time":{"secs":0,"nanos":3134920},"total_time":{"secs":0,"nanos":765732333}},"pass":false,"entropy":4.3541741595598165,"entropy_diff":3.268496584496461e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof \" \" col1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,476,476,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":310,"metadata":{"sampler_time":{"secs":0,"nanos":44296},"constraint_time":{"secs":0,"nanos":737499},"parser_time":{"secs":0,"nanos":604034},"transformer_time":{"secs":0,"nanos":525766961},"trie_time":{"secs":0,"nanos":3122374},"total_time":{"secs":0,"nanos":680337166}},"pass":false,"entropy":4.354174159558425,"entropy_diff":1.3917755836700962e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":311,"metadata":{"sampler_time":{"secs":0,"nanos":37086},"constraint_time":{"secs":0,"nanos":569166},"parser_time":{"secs":0,"nanos":529623},"transformer_time":{"secs":0,"nanos":469158461},"trie_time":{"secs":0,"nanos":3004837},"total_time":{"secs":0,"nanos":605200500}},"pass":false,"entropy":4.354174159557976,"entropy_diff":4.4853010194856324e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"NY\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,30513,1715,216,32,25,216,33,1292]}
{"generation":312,"metadata":{"sampler_time":{"secs":0,"nanos":46092},"constraint_time":{"secs":0,"nanos":651799},"parser_time":{"secs":0,"nanos":759631},"transformer_time":{"secs":0,"nanos":669334919},"trie_time":{"secs":0,"nanos":3087454},"total_time":{"secs":0,"nanos":864848083}},"pass":false,"entropy":4.354174159554003,"entropy_diff":3.97282207131866e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col1 col2) (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":313,"metadata":{"sampler_time":{"secs":0,"nanos":21256},"constraint_time":{"secs":0,"nanos":523828},"parser_time":{"secs":0,"nanos":540748},"transformer_time":{"secs":0,"nanos":483432163},"trie_time":{"secs":0,"nanos":3148880},"total_time":{"secs":0,"nanos":623978833}},"pass":false,"entropy":4.354174159553274,"entropy_diff":7.291944825738028e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.len col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,4152,664,33,1292,216,33,1292]}
{"generation":314,"metadata":{"sampler_time":{"secs":0,"nanos":52960},"constraint_time":{"secs":0,"nanos":579920},"parser_time":{"secs":0,"nanos":742834},"transformer_time":{"secs":0,"nanos":585919792},"trie_time":{"secs":0,"nanos":3123304},"total_time":{"secs":0,"nanos":759803000}},"pass":false,"entropy":4.354174159551341,"entropy_diff":1.9335644196871726e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":315,"metadata":{"sampler_time":{"secs":0,"nanos":47876},"constraint_time":{"secs":0,"nanos":593794},"parser_time":{"secs":0,"nanos":725090},"transformer_time":{"secs":0,"nanos":541957835},"trie_time":{"secs":0,"nanos":3059169},"total_time":{"secs":0,"nanos":696539459}},"pass":false,"entropy":4.354174159546734,"entropy_diff":4.6069814629845496e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"New York\") (str.indexof col1 \"USA\" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,5529,2863,1715,365,1321,30,3888,1714,664,33,476,24842,18,216,33,1292,216,33,1292]}
{"generation":316,"metadata":{"sampler_time":{"secs":0,"nanos":33505},"constraint_time":{"secs":0,"nanos":594832},"parser_time":{"secs":0,"nanos":631041},"transformer_time":{"secs":0,"nanos":521212749},"trie_time":{"secs":0,"nanos":3142612},"total_time":{"secs":0,"nanos":680080083}},"pass":false,"entropy":4.3541741595394825,"entropy_diff":7.251088618431822e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,476,49088,216,33,25,216,33,1292]}
{"generation":317,"metadata":{"sampler_time":{"secs":0,"nanos":27580},"constraint_time":{"secs":0,"nanos":666582},"parser_time":{"secs":0,"nanos":690705},"transformer_time":{"secs":0,"nanos":519380914},"trie_time":{"secs":0,"nanos":3159909},"total_time":{"secs":0,"nanos":680315209}},"pass":false,"entropy":4.354174159536812,"entropy_diff":2.6707525080382766e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":318,"metadata":{"sampler_time":{"secs":0,"nanos":42084},"constraint_time":{"secs":0,"nanos":576460},"parser_time":{"secs":0,"nanos":745756},"transformer_time":{"secs":0,"nanos":516886666},"trie_time":{"secs":0,"nanos":3398914},"total_time":{"secs":0,"nanos":673049041}},"pass":false,"entropy":4.354174159516235,"entropy_diff":2.05764294491928e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) (str.indexof col1 \" \" 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,34,7754]}
{"generation":319,"metadata":{"sampler_time":{"secs":0,"nanos":32865},"constraint_time":{"secs":0,"nanos":511253},"parser_time":{"secs":0,"nanos":756416},"transformer_time":{"secs":0,"nanos":542782747},"trie_time":{"secs":0,"nanos":2942086},"total_time":{"secs":0,"nanos":702067750}},"pass":false,"entropy":4.3541741595088155,"entropy_diff":7.419842518174846e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"New York\" (str.indexof col1 \"New York\" (str.indexof col1 \"New York\" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,365,1321,30,3888,1714,664,33,476,5529,2863,18,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,7754,216,33,1292]}
{"generation":320,"metadata":{"sampler_time":{"secs":0,"nanos":33333},"constraint_time":{"secs":0,"nanos":567253},"parser_time":{"secs":0,"nanos":607668},"transformer_time":{"secs":0,"nanos":449131794},"trie_time":{"secs":0,"nanos":2881288},"total_time":{"secs":0,"nanos":590402125}},"pass":false,"entropy":4.35417415900457,"entropy_diff":5.042455342163521e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":321,"metadata":{"sampler_time":{"secs":0,"nanos":35914},"constraint_time":{"secs":0,"nanos":572667},"parser_time":{"secs":0,"nanos":636961},"transformer_time":{"secs":0,"nanos":471651037},"trie_time":{"secs":0,"nanos":3321290},"total_time":{"secs":0,"nanos":610478583}},"pass":false,"entropy":4.354174158389777,"entropy_diff":6.147926612243282e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"NY\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,30513,1715,216,34,25,216,33,1292]}
{"generation":322,"metadata":{"sampler_time":{"secs":0,"nanos":25085},"constraint_time":{"secs":0,"nanos":1347456},"parser_time":{"secs":0,"nanos":717373},"transformer_time":{"secs":0,"nanos":533980079},"trie_time":{"secs":0,"nanos":3274706},"total_time":{"secs":0,"nanos":696538625}},"pass":false,"entropy":4.354174158386464,"entropy_diff":3.312905505481467e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":323,"metadata":{"sampler_time":{"secs":0,"nanos":24709},"constraint_time":{"secs":0,"nanos":571661},"parser_time":{"secs":0,"nanos":590832},"transformer_time":{"secs":0,"nanos":458043626},"trie_time":{"secs":0,"nanos":3290923},"total_time":{"secs":0,"nanos":596231500}},"pass":false,"entropy":4.354174158374664,"entropy_diff":1.1800338484135864e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"New York\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,5529,2863,1715,216,32,25,216,33,1292]}
{"generation":324,"metadata":{"sampler_time":{"secs":0,"nanos":36376},"constraint_time":{"secs":0,"nanos":616042},"parser_time":{"secs":0,"nanos":755577},"transformer_time":{"secs":0,"nanos":545680834},"trie_time":{"secs":0,"nanos":3351834},"total_time":{"secs":0,"nanos":704980125}},"pass":false,"entropy":4.354174158371193,"entropy_diff":3.4710012641880894e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"NY\") (str.indexof col1 \"New York\" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,30513,1715,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,1292,216,33,1292]}
{"generation":325,"metadata":{"sampler_time":{"secs":0,"nanos":32541},"constraint_time":{"secs":0,"nanos":576462},"parser_time":{"secs":0,"nanos":591210},"transformer_time":{"secs":0,"nanos":459078291},"trie_time":{"secs":0,"nanos":3326538},"total_time":{"secs":0,"nanos":598550209}},"pass":false,"entropy":4.354174158365944,"entropy_diff":5.24913446042774e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"New York\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,5529,2863,1715,216,34,25,216,33,1292]}
{"generation":326,"metadata":{"sampler_time":{"secs":0,"nanos":47540},"constraint_time":{"secs":0,"nanos":599873},"parser_time":{"secs":0,"nanos":704127},"transformer_time":{"secs":0,"nanos":586567209},"trie_time":{"secs":0,"nanos":3427284},"total_time":{"secs":0,"nanos":769123292}},"pass":false,"entropy":4.354174158362856,"entropy_diff":3.0881963652973354e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":327,"metadata":{"sampler_time":{"secs":0,"nanos":39458},"constraint_time":{"secs":0,"nanos":1136079},"parser_time":{"secs":0,"nanos":669248},"transformer_time":{"secs":0,"nanos":507567790},"trie_time":{"secs":0,"nanos":3645131},"total_time":{"secs":0,"nanos":663602041}},"pass":false,"entropy":4.3541741583615705,"entropy_diff":1.2851941733060812e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,42934,25,216,33,25,216,33,1292]}
{"generation":328,"metadata":{"sampler_time":{"secs":0,"nanos":41251},"constraint_time":{"secs":0,"nanos":580569},"parser_time":{"secs":0,"nanos":763827},"transformer_time":{"secs":0,"nanos":605038006},"trie_time":{"secs":0,"nanos":3482170},"total_time":{"secs":0,"nanos":787599375}},"pass":false,"entropy":4.3541741583526425,"entropy_diff":8.927969474825659e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col1 (str.replace col1 col1 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,7754]}
{"generation":329,"metadata":{"sampler_time":{"secs":0,"nanos":49750},"constraint_time":{"secs":0,"nanos":576547},"parser_time":{"secs":0,"nanos":749045},"transformer_time":{"secs":0,"nanos":606783506},"trie_time":{"secs":0,"nanos":3376536},"total_time":{"secs":0,"nanos":781362416}},"pass":false,"entropy":4.354174158352471,"entropy_diff":1.7141843500212417e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) (str.indexof col2 (str.replace col2 col2 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,33,7754]}
{"generation":330,"metadata":{"sampler_time":{"secs":0,"nanos":41587},"constraint_time":{"secs":0,"nanos":622168},"parser_time":{"secs":0,"nanos":609746},"transformer_time":{"secs":0,"nanos":450243254},"trie_time":{"secs":0,"nanos":3298119},"total_time":{"secs":0,"nanos":582334917}},"pass":false,"entropy":4.354174158351666,"entropy_diff":8.046896482483135e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,32,1292]}
{"generation":331,"metadata":{"sampler_time":{"secs":0,"nanos":18665},"constraint_time":{"secs":0,"nanos":574086},"parser_time":{"secs":0,"nanos":743548},"transformer_time":{"secs":0,"nanos":517681417},"trie_time":{"secs":0,"nanos":3353511},"total_time":{"secs":0,"nanos":673551916}},"pass":false,"entropy":4.3541741583476465,"entropy_diff":4.019895527562767e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":332,"metadata":{"sampler_time":{"secs":0,"nanos":38410},"constraint_time":{"secs":0,"nanos":558462},"parser_time":{"secs":0,"nanos":692207},"transformer_time":{"secs":0,"nanos":601970255},"trie_time":{"secs":0,"nanos":3460713},"total_time":{"secs":0,"nanos":777498917}},"pass":false,"entropy":4.354174158346314,"entropy_diff":1.3322676295501878e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,7754]}
{"generation":333,"metadata":{"sampler_time":{"secs":0,"nanos":45420},"constraint_time":{"secs":0,"nanos":723211},"parser_time":{"secs":0,"nanos":941169},"transformer_time":{"secs":0,"nanos":750143085},"trie_time":{"secs":0,"nanos":3477254},"total_time":{"secs":0,"nanos":978618791}},"pass":false,"entropy":4.3541741583462485,"entropy_diff":6.572520305780927e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,7754]}
{"generation":334,"metadata":{"sampler_time":{"secs":0,"nanos":26582},"constraint_time":{"secs":0,"nanos":659542},"parser_time":{"secs":0,"nanos":724621},"transformer_time":{"secs":0,"nanos":602151254},"trie_time":{"secs":0,"nanos":3465705},"total_time":{"secs":0,"nanos":785706209}},"pass":false,"entropy":4.354174158346175,"entropy_diff":7.37188088351104e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col2 (str.replace col2 col2 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,216,33,7754]}
{"generation":335,"metadata":{"sampler_time":{"secs":0,"nanos":25915},"constraint_time":{"secs":0,"nanos":500492},"parser_time":{"secs":0,"nanos":582534},"transformer_time":{"secs":0,"nanos":457611083},"trie_time":{"secs":0,"nanos":3437667},"total_time":{"secs":0,"nanos":595980250}},"pass":false,"entropy":4.3541741583459554,"entropy_diff":2.1938006966593093e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,34,1292]}
{"generation":336,"metadata":{"sampler_time":{"secs":0,"nanos":27623},"constraint_time":{"secs":0,"nanos":591421},"parser_time":{"secs":0,"nanos":664961},"transformer_time":{"secs":0,"nanos":521138130},"trie_time":{"secs":0,"nanos":3389574},"total_time":{"secs":0,"nanos":681531625}},"pass":false,"entropy":4.354174158344486,"entropy_diff":1.4690471061840071e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col2 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,34,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":337,"metadata":{"sampler_time":{"secs":0,"nanos":42046},"constraint_time":{"secs":0,"nanos":637835},"parser_time":{"secs":0,"nanos":587582},"transformer_time":{"secs":0,"nanos":467922373},"trie_time":{"secs":0,"nanos":3326756},"total_time":{"secs":0,"nanos":604543583}},"pass":false,"entropy":4.354174158343228,"entropy_diff":1.2585488207150775e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"New York\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,5529,2863,1715,216,34,25,216,33,1292]}
{"generation":338,"metadata":{"sampler_time":{"secs":0,"nanos":69248},"constraint_time":{"secs":0,"nanos":713544},"parser_time":{"secs":0,"nanos":609219},"transformer_time":{"secs":0,"nanos":483790415},"trie_time":{"secs":0,"nanos":3968247},"total_time":{"secs":0,"nanos":626422958}},"pass":false,"entropy":4.354174158340091,"entropy_diff":3.1370461783808423e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":339,"metadata":{"sampler_time":{"secs":0,"nanos":34041},"constraint_time":{"secs":0,"nanos":534334},"parser_time":{"secs":0,"nanos":559589},"transformer_time":{"secs":0,"nanos":458208624},"trie_time":{"secs":0,"nanos":3497750},"total_time":{"secs":0,"nanos":592770791}},"pass":false,"entropy":4.354174158338305,"entropy_diff":1.7861268020169518e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,32,1292]}
{"generation":340,"metadata":{"sampler_time":{"secs":0,"nanos":32626},"constraint_time":{"secs":0,"nanos":582210},"parser_time":{"secs":0,"nanos":658716},"transformer_time":{"secs":0,"nanos":516562455},"trie_time":{"secs":0,"nanos":3356410},"total_time":{"secs":0,"nanos":666787167}},"pass":false,"entropy":4.354174158337357,"entropy_diff":9.476863738200336e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 0) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,32,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":341,"metadata":{"sampler_time":{"secs":0,"nanos":34125},"constraint_time":{"secs":0,"nanos":681960},"parser_time":{"secs":0,"nanos":806995},"transformer_time":{"secs":0,"nanos":541934954},"trie_time":{"secs":0,"nanos":3405591},"total_time":{"secs":0,"nanos":699569042}},"pass":false,"entropy":4.354174158335101,"entropy_diff":2.255973186038318e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace \"New York\" \"NY\" \"USA\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,476,5529,2863,18,476,30513,18,476,24842,11121,216,33,25,216,33,1292]}
{"generation":342,"metadata":{"sampler_time":{"secs":0,"nanos":37538},"constraint_time":{"secs":0,"nanos":1541547},"parser_time":{"secs":0,"nanos":732160},"transformer_time":{"secs":0,"nanos":517010832},"trie_time":{"secs":0,"nanos":3421217},"total_time":{"secs":0,"nanos":677292459}},"pass":false,"entropy":4.3541741583318565,"entropy_diff":3.2445157671645575e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":343,"metadata":{"sampler_time":{"secs":0,"nanos":16922},"constraint_time":{"secs":0,"nanos":551209},"parser_time":{"secs":0,"nanos":600584},"transformer_time":{"secs":0,"nanos":449597250},"trie_time":{"secs":0,"nanos":3304543},"total_time":{"secs":0,"nanos":583823166}},"pass":false,"entropy":4.354174158324533,"entropy_diff":7.323919248847233e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":344,"metadata":{"sampler_time":{"secs":0,"nanos":18663},"constraint_time":{"secs":0,"nanos":400838},"parser_time":{"secs":0,"nanos":583040},"transformer_time":{"secs":0,"nanos":443300457},"trie_time":{"secs":0,"nanos":3096748},"total_time":{"secs":0,"nanos":570997542}},"pass":false,"entropy":4.35417415811968,"entropy_diff":2.0485302343331568e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":345,"metadata":{"sampler_time":{"secs":0,"nanos":41916},"constraint_time":{"secs":0,"nanos":518331},"parser_time":{"secs":0,"nanos":535293},"transformer_time":{"secs":0,"nanos":440550497},"trie_time":{"secs":0,"nanos":3220249},"total_time":{"secs":0,"nanos":567541167}},"pass":false,"entropy":4.354174157842258,"entropy_diff":2.774216412149144e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,216,34,25,216,33,1292]}
{"generation":346,"metadata":{"sampler_time":{"secs":0,"nanos":40165},"constraint_time":{"secs":0,"nanos":598587},"parser_time":{"secs":0,"nanos":861573},"transformer_time":{"secs":0,"nanos":595000372},"trie_time":{"secs":0,"nanos":3287838},"total_time":{"secs":0,"nanos":763863333}},"pass":false,"entropy":4.35417415781948,"entropy_diff":2.2778223751629412e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) (str.indexof col1 (str.substr col1 1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":347,"metadata":{"sampler_time":{"secs":0,"nanos":28874},"constraint_time":{"secs":0,"nanos":388500},"parser_time":{"secs":0,"nanos":492547},"transformer_time":{"secs":0,"nanos":381538712},"trie_time":{"secs":0,"nanos":3041453},"total_time":{"secs":0,"nanos":493162125}},"pass":false,"entropy":4.354174157783635,"entropy_diff":3.5845104662257654e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,34,25,216,33,1292]}
{"generation":348,"metadata":{"sampler_time":{"secs":0,"nanos":29375},"constraint_time":{"secs":0,"nanos":406251},"parser_time":{"secs":0,"nanos":510293},"transformer_time":{"secs":0,"nanos":384426084},"trie_time":{"secs":0,"nanos":2953877},"total_time":{"secs":0,"nanos":496714000}},"pass":false,"entropy":4.3541741569616645,"entropy_diff":8.219700475819991e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,34,25,216,33,1292]}
{"generation":349,"metadata":{"sampler_time":{"secs":0,"nanos":35839},"constraint_time":{"secs":0,"nanos":416548},"parser_time":{"secs":0,"nanos":621622},"transformer_time":{"secs":0,"nanos":441282837},"trie_time":{"secs":0,"nanos":2961293},"total_time":{"secs":0,"nanos":569359125}},"pass":false,"entropy":4.354174154901463,"entropy_diff":2.060201786946436e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":350,"metadata":{"sampler_time":{"secs":0,"nanos":29375},"constraint_time":{"secs":0,"nanos":495539},"parser_time":{"secs":0,"nanos":600381},"transformer_time":{"secs":0,"nanos":441198128},"trie_time":{"secs":0,"nanos":3792379},"total_time":{"secs":0,"nanos":570175917}},"pass":false,"entropy":4.354174151539436,"entropy_diff":3.3620271011614022e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,33,25,216,34,25,216,33,1292]}
{"generation":351,"metadata":{"sampler_time":{"secs":0,"nanos":55831},"constraint_time":{"secs":0,"nanos":1041089},"parser_time":{"secs":0,"nanos":685919},"transformer_time":{"secs":0,"nanos":523882125},"trie_time":{"secs":0,"nanos":3392001},"total_time":{"secs":0,"nanos":675639167}},"pass":false,"entropy":4.354174151507741,"entropy_diff":3.169464690699897e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at (str.substr col1 0 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":352,"metadata":{"sampler_time":{"secs":0,"nanos":40792},"constraint_time":{"secs":0,"nanos":322961},"parser_time":{"secs":0,"nanos":550871},"transformer_time":{"secs":0,"nanos":440990083},"trie_time":{"secs":0,"nanos":3169711},"total_time":{"secs":0,"nanos":570858042}},"pass":false,"entropy":4.354174151159767,"entropy_diff":3.4797409398379386e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,32,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":353,"metadata":{"sampler_time":{"secs":0,"nanos":23252},"constraint_time":{"secs":0,"nanos":332413},"parser_time":{"secs":0,"nanos":544208},"transformer_time":{"secs":0,"nanos":449440915},"trie_time":{"secs":0,"nanos":3147247},"total_time":{"secs":0,"nanos":583080958}},"pass":false,"entropy":4.354174150960591,"entropy_diff":1.9917578697459248e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":354,"metadata":{"sampler_time":{"secs":0,"nanos":41794},"constraint_time":{"secs":0,"nanos":488667},"parser_time":{"secs":0,"nanos":610298},"transformer_time":{"secs":0,"nanos":494913750},"trie_time":{"secs":0,"nanos":3190342},"total_time":{"secs":0,"nanos":644514459}},"pass":false,"entropy":4.354174150731235,"entropy_diff":2.2935608967600274e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.len col1) (+ 1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,4152,664,33,25,30425,216,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":355,"metadata":{"sampler_time":{"secs":0,"nanos":26835},"constraint_time":{"secs":0,"nanos":319541},"parser_time":{"secs":0,"nanos":521506},"transformer_time":{"secs":0,"nanos":409027920},"trie_time":{"secs":0,"nanos":3166040},"total_time":{"secs":0,"nanos":532999708}},"pass":false,"entropy":4.354174150708563,"entropy_diff":2.2671642341265397e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ 1 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,216,33,216,33,1292,216,33,1292]}
{"generation":356,"metadata":{"sampler_time":{"secs":0,"nanos":18706},"constraint_time":{"secs":0,"nanos":472747},"parser_time":{"secs":0,"nanos":518669},"transformer_time":{"secs":0,"nanos":441136124},"trie_time":{"secs":0,"nanos":3063033},"total_time":{"secs":0,"nanos":570659167}},"pass":false,"entropy":4.354174150674287,"entropy_diff":3.427658157306723e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.at col2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,261,664,34,216,32,25,216,33,25,216,33,1292]}
{"generation":357,"metadata":{"sampler_time":{"secs":0,"nanos":25791},"constraint_time":{"secs":0,"nanos":414503},"parser_time":{"secs":0,"nanos":434254},"transformer_time":{"secs":0,"nanos":382823206},"trie_time":{"secs":0,"nanos":3010209},"total_time":{"secs":0,"nanos":493574959}},"pass":false,"entropy":4.354174149511939,"entropy_diff":1.1623475515420978e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,32,25,216,33,1292]}
{"generation":358,"metadata":{"sampler_time":{"secs":0,"nanos":28416},"constraint_time":{"secs":0,"nanos":386336},"parser_time":{"secs":0,"nanos":479041},"transformer_time":{"secs":0,"nanos":382187126},"trie_time":{"secs":0,"nanos":3183038},"total_time":{"secs":0,"nanos":492689125}},"pass":false,"entropy":4.354174147899741,"entropy_diff":1.6121983748007551e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,216,32,1292]}
{"generation":359,"metadata":{"sampler_time":{"secs":0,"nanos":38865},"constraint_time":{"secs":0,"nanos":523955},"parser_time":{"secs":0,"nanos":712367},"transformer_time":{"secs":0,"nanos":549654250},"trie_time":{"secs":0,"nanos":3155923},"total_time":{"secs":0,"nanos":707350875}},"pass":false,"entropy":4.354174147775687,"entropy_diff":1.240536562363559e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (- (str.indexof col1 \" \" 1) 1)) (str.indexof col1 \"New York\" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,7754]}
{"generation":360,"metadata":{"sampler_time":{"secs":0,"nanos":26549},"constraint_time":{"secs":0,"nanos":409546},"parser_time":{"secs":0,"nanos":606455},"transformer_time":{"secs":0,"nanos":517920169},"trie_time":{"secs":0,"nanos":3170594},"total_time":{"secs":0,"nanos":666236000}},"pass":false,"entropy":4.354174147215561,"entropy_diff":5.601261676702052e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col1 col1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":361,"metadata":{"sampler_time":{"secs":0,"nanos":34161},"constraint_time":{"secs":0,"nanos":614503},"parser_time":{"secs":0,"nanos":623750},"transformer_time":{"secs":0,"nanos":483613171},"trie_time":{"secs":0,"nanos":3262787},"total_time":{"secs":0,"nanos":618183500}},"pass":false,"entropy":4.354174146984182,"entropy_diff":2.3137936011607962e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.to.int col1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,1141,30,591,664,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":362,"metadata":{"sampler_time":{"secs":0,"nanos":34329},"constraint_time":{"secs":0,"nanos":454625},"parser_time":{"secs":0,"nanos":595960},"transformer_time":{"secs":0,"nanos":434267123},"trie_time":{"secs":0,"nanos":3468797},"total_time":{"secs":0,"nanos":560912292}},"pass":false,"entropy":4.354174146950113,"entropy_diff":3.4068747822857404e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.++ col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,11444,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":363,"metadata":{"sampler_time":{"secs":0,"nanos":20788},"constraint_time":{"secs":0,"nanos":417168},"parser_time":{"secs":0,"nanos":465290},"transformer_time":{"secs":0,"nanos":390343666},"trie_time":{"secs":0,"nanos":3087785},"total_time":{"secs":0,"nanos":501541708}},"pass":false,"entropy":4.354174146465805,"entropy_diff":4.843077050509237e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,664,33,216,34,25,216,33,1292]}
{"generation":364,"metadata":{"sampler_time":{"secs":0,"nanos":19130},"constraint_time":{"secs":0,"nanos":406463},"parser_time":{"secs":0,"nanos":452338},"transformer_time":{"secs":0,"nanos":382288873},"trie_time":{"secs":0,"nanos":3126372},"total_time":{"secs":0,"nanos":491827916}},"pass":false,"entropy":4.354174145469443,"entropy_diff":9.963621039332793e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,34,1292]}
{"generation":365,"metadata":{"sampler_time":{"secs":0,"nanos":30879},"constraint_time":{"secs":0,"nanos":316459},"parser_time":{"secs":0,"nanos":429911},"transformer_time":{"secs":0,"nanos":373797333},"trie_time":{"secs":0,"nanos":3066588},"total_time":{"secs":0,"nanos":481237959}},"pass":false,"entropy":4.3541741451857785,"entropy_diff":2.836646473269866e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,34,216,32,25,216,33,1292]}
{"generation":366,"metadata":{"sampler_time":{"secs":0,"nanos":34041},"constraint_time":{"secs":0,"nanos":488001},"parser_time":{"secs":0,"nanos":776864},"transformer_time":{"secs":0,"nanos":567600044},"trie_time":{"secs":0,"nanos":3263007},"total_time":{"secs":0,"nanos":734114875}},"pass":false,"entropy":4.35417414168932,"entropy_diff":3.4964582340535344e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (- 1 1) 1)) (str.indexof col1 \" \" (+ (- 1 1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,17481,216,33,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,476,30425,17481,216,33,216,33,25,216,33,38799]}
{"generation":367,"metadata":{"sampler_time":{"secs":0,"nanos":13001},"constraint_time":{"secs":0,"nanos":381790},"parser_time":{"secs":0,"nanos":475174},"transformer_time":{"secs":0,"nanos":382467790},"trie_time":{"secs":0,"nanos":3241619},"total_time":{"secs":0,"nanos":493510458}},"pass":false,"entropy":4.354174141605151,"entropy_diff":8.416911612130207e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,32,25,216,33,1292]}
{"generation":368,"metadata":{"sampler_time":{"secs":0,"nanos":47288},"constraint_time":{"secs":0,"nanos":481883},"parser_time":{"secs":0,"nanos":719837},"transformer_time":{"secs":0,"nanos":532975044},"trie_time":{"secs":0,"nanos":3344085},"total_time":{"secs":0,"nanos":685359750}},"pass":false,"entropy":4.3541741410945995,"entropy_diff":5.10551600996223e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof \" \" (str.substr col1 1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,476,476,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":369,"metadata":{"sampler_time":{"secs":0,"nanos":37125},"constraint_time":{"secs":0,"nanos":353540},"parser_time":{"secs":0,"nanos":593336},"transformer_time":{"secs":0,"nanos":450361629},"trie_time":{"secs":0,"nanos":3347960},"total_time":{"secs":0,"nanos":579395417}},"pass":false,"entropy":4.3541741410256325,"entropy_diff":6.896705428971472e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof col1 \" \" 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,34,7754]}
{"generation":370,"metadata":{"sampler_time":{"secs":0,"nanos":37587},"constraint_time":{"secs":0,"nanos":370210},"parser_time":{"secs":0,"nanos":620623},"transformer_time":{"secs":0,"nanos":434831166},"trie_time":{"secs":0,"nanos":3389799},"total_time":{"secs":0,"nanos":560200250}},"pass":false,"entropy":4.354174141020166,"entropy_diff":5.466738173254271e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof \" \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,476,476,216]}
{"generation":371,"metadata":{"sampler_time":{"secs":0,"nanos":12955},"constraint_time":{"secs":0,"nanos":415001},"parser_time":{"secs":0,"nanos":484804},"transformer_time":{"secs":0,"nanos":380817291},"trie_time":{"secs":0,"nanos":3271075},"total_time":{"secs":0,"nanos":496110791}},"pass":false,"entropy":4.354174140997268,"entropy_diff":2.289812783828893e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,34,25,216,33,1292]}
{"generation":372,"metadata":{"sampler_time":{"secs":0,"nanos":35285},"constraint_time":{"secs":0,"nanos":399124},"parser_time":{"secs":0,"nanos":549959},"transformer_time":{"secs":0,"nanos":389851169},"trie_time":{"secs":0,"nanos":3290623},"total_time":{"secs":0,"nanos":504899042}},"pass":false,"entropy":4.354174140352897,"entropy_diff":6.443707789571818e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"MD\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,9815,18,216,33,25,216,33,1292]}
{"generation":373,"metadata":{"sampler_time":{"secs":0,"nanos":28203},"constraint_time":{"secs":0,"nanos":516792},"parser_time":{"secs":0,"nanos":589329},"transformer_time":{"secs":0,"nanos":466044080},"trie_time":{"secs":0,"nanos":3205422},"total_time":{"secs":0,"nanos":602908000}},"pass":false,"entropy":4.354174139805492,"entropy_diff":5.474047881648403e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":374,"metadata":{"sampler_time":{"secs":0,"nanos":26253},"constraint_time":{"secs":0,"nanos":451661},"parser_time":{"secs":0,"nanos":612204},"transformer_time":{"secs":0,"nanos":449444836},"trie_time":{"secs":0,"nanos":3159951},"total_time":{"secs":0,"nanos":582583208}},"pass":false,"entropy":4.354174139433816,"entropy_diff":3.716760232919114e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":375,"metadata":{"sampler_time":{"secs":0,"nanos":24877},"constraint_time":{"secs":0,"nanos":423919},"parser_time":{"secs":0,"nanos":530962},"transformer_time":{"secs":0,"nanos":455736291},"trie_time":{"secs":0,"nanos":3478421},"total_time":{"secs":0,"nanos":588051375}},"pass":false,"entropy":4.354174138852073,"entropy_diff":5.817426540488668e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 2) (str.indexof col2 col1 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,34,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754]}
{"generation":376,"metadata":{"sampler_time":{"secs":0,"nanos":14164},"constraint_time":{"secs":0,"nanos":372626},"parser_time":{"secs":0,"nanos":428875},"transformer_time":{"secs":0,"nanos":383227001},"trie_time":{"secs":0,"nanos":3333212},"total_time":{"secs":0,"nanos":495594041}},"pass":false,"entropy":4.354174138664536,"entropy_diff":1.8753709696284204e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,34,1292]}
{"generation":377,"metadata":{"sampler_time":{"secs":0,"nanos":32669},"constraint_time":{"secs":0,"nanos":338586},"parser_time":{"secs":0,"nanos":564671},"transformer_time":{"secs":0,"nanos":397302874},"trie_time":{"secs":0,"nanos":3093412},"total_time":{"secs":0,"nanos":509712292}},"pass":false,"entropy":4.354174138411227,"entropy_diff":2.533093734768954e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"New York\" \"USA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,5529,2863,18,476,24842,18,216,33,25,216,33,1292]}
{"generation":378,"metadata":{"sampler_time":{"secs":0,"nanos":28499},"constraint_time":{"secs":0,"nanos":1313222},"parser_time":{"secs":0,"nanos":772949},"transformer_time":{"secs":0,"nanos":517450712},"trie_time":{"secs":0,"nanos":3225208},"total_time":{"secs":0,"nanos":675147459}},"pass":false,"entropy":4.354174136752692,"entropy_diff":1.6585346429565107e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 (str.replace col2 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,365,1321,30,9630,664,34,476,476,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":379,"metadata":{"sampler_time":{"secs":0,"nanos":22541},"constraint_time":{"secs":0,"nanos":559211},"parser_time":{"secs":0,"nanos":598918},"transformer_time":{"secs":0,"nanos":458027044},"trie_time":{"secs":0,"nanos":3650378},"total_time":{"secs":0,"nanos":590598334}},"pass":false,"entropy":4.354174136301458,"entropy_diff":4.512346052365501e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,42934,25,216,33,25,216,33,1292]}
{"generation":380,"metadata":{"sampler_time":{"secs":0,"nanos":35083},"constraint_time":{"secs":0,"nanos":627083},"parser_time":{"secs":0,"nanos":791545},"transformer_time":{"secs":0,"nanos":593382667},"trie_time":{"secs":0,"nanos":3658088},"total_time":{"secs":0,"nanos":767283208}},"pass":false,"entropy":4.354174136289823,"entropy_diff":1.163424911965194e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":381,"metadata":{"sampler_time":{"secs":0,"nanos":32504},"constraint_time":{"secs":0,"nanos":510580},"parser_time":{"secs":0,"nanos":667169},"transformer_time":{"secs":0,"nanos":517017080},"trie_time":{"secs":0,"nanos":3738917},"total_time":{"secs":0,"nanos":672175417}},"pass":false,"entropy":4.354174136288953,"entropy_diff":8.704148513061227e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":382,"metadata":{"sampler_time":{"secs":0,"nanos":31332},"constraint_time":{"secs":0,"nanos":595915},"parser_time":{"secs":0,"nanos":861246},"transformer_time":{"secs":0,"nanos":669650375},"trie_time":{"secs":0,"nanos":3786256},"total_time":{"secs":0,"nanos":861344625}},"pass":false,"entropy":4.354174136288431,"entropy_diff":5.222489107836736e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,38799]}
{"generation":383,"metadata":{"sampler_time":{"secs":0,"nanos":29500},"constraint_time":{"secs":0,"nanos":567966},"parser_time":{"secs":0,"nanos":911382},"transformer_time":{"secs":0,"nanos":619772791},"trie_time":{"secs":0,"nanos":3725377},"total_time":{"secs":0,"nanos":802735750}},"pass":false,"entropy":4.354174136287138,"entropy_diff":1.2931877790833823e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (+ (str.indexof col1 col1 (str.indexof col1 \" \" 1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,30425,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,7754]}
{"generation":384,"metadata":{"sampler_time":{"secs":0,"nanos":37207},"constraint_time":{"secs":0,"nanos":536333},"parser_time":{"secs":0,"nanos":738417},"transformer_time":{"secs":0,"nanos":584910750},"trie_time":{"secs":0,"nanos":3750161},"total_time":{"secs":0,"nanos":755717375}},"pass":false,"entropy":4.354174136285538,"entropy_diff":1.5996093338799255e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) (str.indexof col1 (str.replace col1 col1 \",\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,7754]}
{"generation":385,"metadata":{"sampler_time":{"secs":0,"nanos":35510},"constraint_time":{"secs":0,"nanos":1286502},"parser_time":{"secs":0,"nanos":697051},"transformer_time":{"secs":0,"nanos":536743415},"trie_time":{"secs":0,"nanos":4119659},"total_time":{"secs":0,"nanos":695277959}},"pass":false,"entropy":4.354174136280017,"entropy_diff":5.5209170568559784e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":386,"metadata":{"sampler_time":{"secs":0,"nanos":33501},"constraint_time":{"secs":0,"nanos":1091079},"parser_time":{"secs":0,"nanos":616500},"transformer_time":{"secs":0,"nanos":508716045},"trie_time":{"secs":0,"nanos":3892076},"total_time":{"secs":0,"nanos":660646458}},"pass":false,"entropy":4.354174136275308,"entropy_diff":4.709121981250064e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,32,25,216,33,1292]}
{"generation":387,"metadata":{"sampler_time":{"secs":0,"nanos":30997},"constraint_time":{"secs":0,"nanos":494708},"parser_time":{"secs":0,"nanos":490708},"transformer_time":{"secs":0,"nanos":449598084},"trie_time":{"secs":0,"nanos":3758961},"total_time":{"secs":0,"nanos":584265292}},"pass":false,"entropy":4.3541741362745885,"entropy_diff":7.194245199571014e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,34,1292]}
{"generation":388,"metadata":{"sampler_time":{"secs":0,"nanos":42412},"constraint_time":{"secs":0,"nanos":998960},"parser_time":{"secs":0,"nanos":666162},"transformer_time":{"secs":0,"nanos":509032292},"trie_time":{"secs":0,"nanos":3742629},"total_time":{"secs":0,"nanos":658711625}},"pass":false,"entropy":4.354174136266633,"entropy_diff":7.955414105254022e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":389,"metadata":{"sampler_time":{"secs":0,"nanos":27248},"constraint_time":{"secs":0,"nanos":706754},"parser_time":{"secs":0,"nanos":720785},"transformer_time":{"secs":0,"nanos":530307207},"trie_time":{"secs":0,"nanos":3724456},"total_time":{"secs":0,"nanos":687430208}},"pass":false,"entropy":4.35417413626071,"entropy_diff":5.923261880980135e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" (str.replace col1 \" \" \"New York\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,365,1321,30,9630,664,33,476,476,476,5529,2863,11121,216,33,25,216,33,1292]}
{"generation":390,"metadata":{"sampler_time":{"secs":0,"nanos":41874},"constraint_time":{"secs":0,"nanos":1254882},"parser_time":{"secs":0,"nanos":685294},"transformer_time":{"secs":0,"nanos":517548415},"trie_time":{"secs":0,"nanos":3779582},"total_time":{"secs":0,"nanos":674166166}},"pass":false,"entropy":4.354174136245545,"entropy_diff":1.5164758337959938e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":391,"metadata":{"sampler_time":{"secs":0,"nanos":34621},"constraint_time":{"secs":0,"nanos":541501},"parser_time":{"secs":0,"nanos":547540},"transformer_time":{"secs":0,"nanos":491722999},"trie_time":{"secs":0,"nanos":3896630},"total_time":{"secs":0,"nanos":631692250}},"pass":false,"entropy":4.3541741362401725,"entropy_diff":5.3725912607660575e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":392,"metadata":{"sampler_time":{"secs":0,"nanos":37169},"constraint_time":{"secs":0,"nanos":636710},"parser_time":{"secs":0,"nanos":728788},"transformer_time":{"secs":0,"nanos":592879666},"trie_time":{"secs":0,"nanos":3874575},"total_time":{"secs":0,"nanos":768329167}},"pass":false,"entropy":4.3541741362398705,"entropy_diff":3.019806626980426e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 (str.replace col1 col2 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,1292,216,33,1292]}
{"generation":393,"metadata":{"sampler_time":{"secs":0,"nanos":39956},"constraint_time":{"secs":0,"nanos":555173},"parser_time":{"secs":0,"nanos":733426},"transformer_time":{"secs":0,"nanos":661566710},"trie_time":{"secs":0,"nanos":3909671},"total_time":{"secs":0,"nanos":852434458}},"pass":false,"entropy":4.354174136239499,"entropy_diff":3.7125857943465235e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.indexof col1 col1 (str.indexof col1 col1 (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":394,"metadata":{"sampler_time":{"secs":0,"nanos":42916},"constraint_time":{"secs":0,"nanos":539878},"parser_time":{"secs":0,"nanos":723746},"transformer_time":{"secs":0,"nanos":586965043},"trie_time":{"secs":0,"nanos":3895586},"total_time":{"secs":0,"nanos":758812541}},"pass":false,"entropy":4.354174136239332,"entropy_diff":1.6697754290362354e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 col1 (str.indexof col1 \" \" 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,38799]}
{"generation":395,"metadata":{"sampler_time":{"secs":0,"nanos":67580},"constraint_time":{"secs":0,"nanos":556039},"parser_time":{"secs":0,"nanos":810328},"transformer_time":{"secs":0,"nanos":661211249},"trie_time":{"secs":0,"nanos":3911586},"total_time":{"secs":0,"nanos":852670083}},"pass":false,"entropy":4.3541741362389095,"entropy_diff":4.227729277772596e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 col2 (str.indexof col2 col1 (str.indexof col1 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,1292,7754]}
{"generation":396,"metadata":{"sampler_time":{"secs":0,"nanos":51922},"constraint_time":{"secs":0,"nanos":610451},"parser_time":{"secs":0,"nanos":743087},"transformer_time":{"secs":0,"nanos":562155838},"trie_time":{"secs":0,"nanos":4360164},"total_time":{"secs":0,"nanos":726379833}},"pass":false,"entropy":4.354174136238804,"entropy_diff":1.056932319443149e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (- (str.indexof col1 col2 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,17481,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292,216,33,1292]}
{"generation":397,"metadata":{"sampler_time":{"secs":0,"nanos":45123},"constraint_time":{"secs":0,"nanos":598457},"parser_time":{"secs":0,"nanos":639532},"transformer_time":{"secs":0,"nanos":534496584},"trie_time":{"secs":0,"nanos":3979839},"total_time":{"secs":0,"nanos":690970375}},"pass":false,"entropy":4.35417413623712,"entropy_diff":1.6839862837514374e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col2 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,1292,216,33,25,216,33,1292]}
{"generation":398,"metadata":{"sampler_time":{"secs":0,"nanos":19499},"constraint_time":{"secs":0,"nanos":1277541},"parser_time":{"secs":0,"nanos":627207},"transformer_time":{"secs":0,"nanos":535408294},"trie_time":{"secs":0,"nanos":3941750},"total_time":{"secs":0,"nanos":687822709}},"pass":false,"entropy":4.354174136235036,"entropy_diff":2.0836665726164938e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":399,"metadata":{"sampler_time":{"secs":0,"nanos":34458},"constraint_time":{"secs":0,"nanos":507992},"parser_time":{"secs":0,"nanos":571455},"transformer_time":{"secs":0,"nanos":450147918},"trie_time":{"secs":0,"nanos":3978083},"total_time":{"secs":0,"nanos":584800584}},"pass":false,"entropy":4.354174136232389,"entropy_diff":2.646771690706373e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,216,34,1292]}
{"generation":400,"metadata":{"sampler_time":{"secs":0,"nanos":78368},"constraint_time":{"secs":0,"nanos":934325},"parser_time":{"secs":0,"nanos":1533667},"transformer_time":{"secs":0,"nanos":990994417},"trie_time":{"secs":0,"nanos":4154671},"total_time":{"secs":1,"nanos":293044666}},"pass":false,"entropy":4.354174136231425,"entropy_diff":9.64561763794336e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1))) (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,1292,7754]}
{"generation":401,"metadata":{"sampler_time":{"secs":0,"nanos":43912},"constraint_time":{"secs":0,"nanos":1069751},"parser_time":{"secs":0,"nanos":713087},"transformer_time":{"secs":0,"nanos":533561664},"trie_time":{"secs":0,"nanos":4063747},"total_time":{"secs":0,"nanos":689810750}},"pass":false,"entropy":4.354174136230514,"entropy_diff":9.103828801926284e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":402,"metadata":{"sampler_time":{"secs":0,"nanos":32500},"constraint_time":{"secs":0,"nanos":495837},"parser_time":{"secs":0,"nanos":583250},"transformer_time":{"secs":0,"nanos":457768710},"trie_time":{"secs":0,"nanos":4087456},"total_time":{"secs":0,"nanos":591669792}},"pass":false,"entropy":4.354174136221933,"entropy_diff":8.58157989114261e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,664,33,25,216,33,25,216,33,1292]}
{"generation":403,"metadata":{"sampler_time":{"secs":0,"nanos":29417},"constraint_time":{"secs":0,"nanos":420665},"parser_time":{"secs":0,"nanos":679375},"transformer_time":{"secs":0,"nanos":474598496},"trie_time":{"secs":0,"nanos":3683960},"total_time":{"secs":0,"nanos":611827417}},"pass":false,"entropy":4.354174136205712,"entropy_diff":1.6220802478983387e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) (+ (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":404,"metadata":{"sampler_time":{"secs":0,"nanos":25251},"constraint_time":{"secs":0,"nanos":642458},"parser_time":{"secs":0,"nanos":638001},"transformer_time":{"secs":0,"nanos":466288335},"trie_time":{"secs":0,"nanos":4095547},"total_time":{"secs":0,"nanos":601635500}},"pass":false,"entropy":4.354174136074138,"entropy_diff":1.3157386291595685e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"USA\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,24842,1715,216,34,25,216,33,1292]}
{"generation":405,"metadata":{"sampler_time":{"secs":0,"nanos":29539},"constraint_time":{"secs":0,"nanos":630709},"parser_time":{"secs":0,"nanos":751589},"transformer_time":{"secs":0,"nanos":542038961},"trie_time":{"secs":0,"nanos":4071336},"total_time":{"secs":0,"nanos":695776833}},"pass":false,"entropy":4.354174136073099,"entropy_diff":1.0391687510491465e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"USA\") (str.indexof col1 \"New York\" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,24842,1715,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,1292,216,33,1292]}
{"generation":406,"metadata":{"sampler_time":{"secs":0,"nanos":27708},"constraint_time":{"secs":0,"nanos":561003},"parser_time":{"secs":0,"nanos":717659},"transformer_time":{"secs":0,"nanos":486229294},"trie_time":{"secs":0,"nanos":4166877},"total_time":{"secs":0,"nanos":624239417}},"pass":false,"entropy":4.354174136071192,"entropy_diff":1.906919067096169e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":407,"metadata":{"sampler_time":{"secs":0,"nanos":22243},"constraint_time":{"secs":0,"nanos":601037},"parser_time":{"secs":0,"nanos":569873},"transformer_time":{"secs":0,"nanos":465864790},"trie_time":{"secs":0,"nanos":4183964},"total_time":{"secs":0,"nanos":600429708}},"pass":false,"entropy":4.354174136070136,"entropy_diff":1.056044141023449e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,664,33,25,216,33,25,216,33,1292]}
{"generation":408,"metadata":{"sampler_time":{"secs":0,"nanos":44917},"constraint_time":{"secs":0,"nanos":1154870},"parser_time":{"secs":0,"nanos":747917},"transformer_time":{"secs":0,"nanos":593102582},"trie_time":{"secs":0,"nanos":4086881},"total_time":{"secs":0,"nanos":764763500}},"pass":false,"entropy":4.354174136064568,"entropy_diff":5.567990513100085e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":409,"metadata":{"sampler_time":{"secs":0,"nanos":41504},"constraint_time":{"secs":0,"nanos":3632582},"parser_time":{"secs":0,"nanos":1140297},"transformer_time":{"secs":0,"nanos":772376418},"trie_time":{"secs":0,"nanos":4123594},"total_time":{"secs":0,"nanos":998431875}},"pass":false,"entropy":4.354174136062462,"entropy_diff":2.105871033108997e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \"New York\" \"USA\") \"New York\") 1) (str.indexof col1 (str.replace col1 (str.replace col1 \"New York\" \"USA\") \"New York\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,24842,1715,476,5529,2863,1715,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,24842,1715,476,5529,2863,1715,216,33,7754]}
{"generation":410,"metadata":{"sampler_time":{"secs":0,"nanos":27582},"constraint_time":{"secs":0,"nanos":565374},"parser_time":{"secs":0,"nanos":587753},"transformer_time":{"secs":0,"nanos":449251876},"trie_time":{"secs":0,"nanos":4201742},"total_time":{"secs":0,"nanos":580459542}},"pass":false,"entropy":4.35417413605915,"entropy_diff":3.312017327061767e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,216,34,1292]}
{"generation":411,"metadata":{"sampler_time":{"secs":0,"nanos":31542},"constraint_time":{"secs":0,"nanos":697835},"parser_time":{"secs":0,"nanos":686113},"transformer_time":{"secs":0,"nanos":526150664},"trie_time":{"secs":0,"nanos":4163886},"total_time":{"secs":0,"nanos":680173000}},"pass":false,"entropy":4.354174136057657,"entropy_diff":1.4930279235159105e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"New York\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,5529,2863,1715,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":412,"metadata":{"sampler_time":{"secs":0,"nanos":33456},"constraint_time":{"secs":0,"nanos":544163},"parser_time":{"secs":0,"nanos":587202},"transformer_time":{"secs":0,"nanos":467074749},"trie_time":{"secs":0,"nanos":4066746},"total_time":{"secs":0,"nanos":600586959}},"pass":false,"entropy":4.354174136053634,"entropy_diff":4.023448241241567e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,32,25,216,33,1292]}
{"generation":413,"metadata":{"sampler_time":{"secs":0,"nanos":37200},"constraint_time":{"secs":0,"nanos":1193873},"parser_time":{"secs":0,"nanos":664005},"transformer_time":{"secs":0,"nanos":507697459},"trie_time":{"secs":0,"nanos":4157666},"total_time":{"secs":0,"nanos":654993041}},"pass":false,"entropy":4.354174136043599,"entropy_diff":1.0034639785772015e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":414,"metadata":{"sampler_time":{"secs":0,"nanos":59381},"constraint_time":{"secs":0,"nanos":1299710},"parser_time":{"secs":0,"nanos":752955},"transformer_time":{"secs":0,"nanos":600613163},"trie_time":{"secs":0,"nanos":4228674},"total_time":{"secs":0,"nanos":780188500}},"pass":false,"entropy":4.354174136040314,"entropy_diff":3.2853719744707632e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,216,33,1292]}
{"generation":415,"metadata":{"sampler_time":{"secs":0,"nanos":50128},"constraint_time":{"secs":0,"nanos":730209},"parser_time":{"secs":0,"nanos":1000715},"transformer_time":{"secs":0,"nanos":753430084},"trie_time":{"secs":0,"nanos":4427074},"total_time":{"secs":0,"nanos":967238583}},"pass":false,"entropy":4.354174136039425,"entropy_diff":8.890665981198254e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) (str.indexof col1 \" \" 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,38799]}
{"generation":416,"metadata":{"sampler_time":{"secs":0,"nanos":66622},"constraint_time":{"secs":0,"nanos":704000},"parser_time":{"secs":0,"nanos":1050500},"transformer_time":{"secs":0,"nanos":812946085},"trie_time":{"secs":0,"nanos":4446250},"total_time":{"secs":1,"nanos":50716334}},"pass":false,"entropy":4.354174136039273,"entropy_diff":1.5187850976872141e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":417,"metadata":{"sampler_time":{"secs":0,"nanos":33503},"constraint_time":{"secs":0,"nanos":519083},"parser_time":{"secs":0,"nanos":634449},"transformer_time":{"secs":0,"nanos":493444667},"trie_time":{"secs":0,"nanos":4376836},"total_time":{"secs":0,"nanos":634904166}},"pass":false,"entropy":4.35417413603925,"entropy_diff":2.3092638912203256e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":418,"metadata":{"sampler_time":{"secs":0,"nanos":44045},"constraint_time":{"secs":0,"nanos":624588},"parser_time":{"secs":0,"nanos":848373},"transformer_time":{"secs":0,"nanos":585201492},"trie_time":{"secs":0,"nanos":4244915},"total_time":{"secs":0,"nanos":755008125}},"pass":false,"entropy":4.354174136038727,"entropy_diff":5.222489107836736e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (str.indexof col1 (str.replace col1 \" \" \",\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,7754]}
{"generation":419,"metadata":{"sampler_time":{"secs":0,"nanos":36621},"constraint_time":{"secs":0,"nanos":1112709},"parser_time":{"secs":0,"nanos":712041},"transformer_time":{"secs":0,"nanos":526683747},"trie_time":{"secs":0,"nanos":4319911},"total_time":{"secs":0,"nanos":684902459}},"pass":false,"entropy":4.354174136038176,"entropy_diff":5.515587986337778e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":420,"metadata":{"sampler_time":{"secs":0,"nanos":43247},"constraint_time":{"secs":0,"nanos":555372},"parser_time":{"secs":0,"nanos":795500},"transformer_time":{"secs":0,"nanos":586355995},"trie_time":{"secs":0,"nanos":4350125},"total_time":{"secs":0,"nanos":762844292}},"pass":false,"entropy":4.354174136037473,"entropy_diff":7.025491299827991e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col2 (str.replace col2 col2 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,476,20361,216,33,7754]}
{"generation":421,"metadata":{"sampler_time":{"secs":0,"nanos":47128},"constraint_time":{"secs":0,"nanos":648544},"parser_time":{"secs":0,"nanos":808750},"transformer_time":{"secs":0,"nanos":586000001},"trie_time":{"secs":0,"nanos":4345130},"total_time":{"secs":0,"nanos":761770542}},"pass":false,"entropy":4.354174136037297,"entropy_diff":1.758593271006248e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 col1 \" \") 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,7754]}
{"generation":422,"metadata":{"sampler_time":{"secs":0,"nanos":36334},"constraint_time":{"secs":0,"nanos":578459},"parser_time":{"secs":0,"nanos":844003},"transformer_time":{"secs":0,"nanos":588470210},"trie_time":{"secs":0,"nanos":4410668},"total_time":{"secs":0,"nanos":764013458}},"pass":false,"entropy":4.3541741360372725,"entropy_diff":2.4868995751603507e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 \" \" \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,7754]}
{"generation":423,"metadata":{"sampler_time":{"secs":0,"nanos":55872},"constraint_time":{"secs":0,"nanos":660040},"parser_time":{"secs":0,"nanos":836539},"transformer_time":{"secs":0,"nanos":617357288},"trie_time":{"secs":0,"nanos":4335616},"total_time":{"secs":0,"nanos":793710750}},"pass":false,"entropy":4.354174136037209,"entropy_diff":6.394884621840902e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"NY\") 1) (str.indexof col1 (str.replace col1 \"New York\" \"NY\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,30513,1715,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,30513,1715,216,33,7754]}
{"generation":424,"metadata":{"sampler_time":{"secs":0,"nanos":22754},"constraint_time":{"secs":0,"nanos":376086},"parser_time":{"secs":0,"nanos":420164},"transformer_time":{"secs":0,"nanos":382602791},"trie_time":{"secs":0,"nanos":3932044},"total_time":{"secs":0,"nanos":494452750}},"pass":false,"entropy":4.354174136036052,"entropy_diff":1.156408302449563e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 0) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,32,25,216,34,1292]}
{"generation":425,"metadata":{"sampler_time":{"secs":0,"nanos":37957},"constraint_time":{"secs":0,"nanos":429664},"parser_time":{"secs":0,"nanos":553584},"transformer_time":{"secs":0,"nanos":450502331},"trie_time":{"secs":0,"nanos":3779876},"total_time":{"secs":0,"nanos":581189416}},"pass":false,"entropy":4.354174135934906,"entropy_diff":1.0114575843545026e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) (str.indexof col2 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754]}
{"generation":426,"metadata":{"sampler_time":{"secs":0,"nanos":30080},"constraint_time":{"secs":0,"nanos":1012413},"parser_time":{"secs":0,"nanos":678914},"transformer_time":{"secs":0,"nanos":549939167},"trie_time":{"secs":0,"nanos":4102196},"total_time":{"secs":0,"nanos":703362083}},"pass":false,"entropy":4.354174135611763,"entropy_diff":3.2314328990423746e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \"New York\" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5529,2863,18,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":427,"metadata":{"sampler_time":{"secs":0,"nanos":70637},"constraint_time":{"secs":0,"nanos":760038},"parser_time":{"secs":0,"nanos":1026718},"transformer_time":{"secs":0,"nanos":771309626},"trie_time":{"secs":0,"nanos":4869668},"total_time":{"secs":0,"nanos":996285166}},"pass":false,"entropy":4.354174135571669,"entropy_diff":4.0094150222103053e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":428,"metadata":{"sampler_time":{"secs":0,"nanos":34336},"constraint_time":{"secs":0,"nanos":1182591},"parser_time":{"secs":0,"nanos":646869},"transformer_time":{"secs":0,"nanos":508474710},"trie_time":{"secs":0,"nanos":4483925},"total_time":{"secs":0,"nanos":659832167}},"pass":false,"entropy":4.354174135571327,"entropy_diff":3.419486915845482e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col2 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,34,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":429,"metadata":{"sampler_time":{"secs":0,"nanos":63424},"constraint_time":{"secs":0,"nanos":780748},"parser_time":{"secs":0,"nanos":983164},"transformer_time":{"secs":0,"nanos":815453499},"trie_time":{"secs":0,"nanos":4636290},"total_time":{"secs":1,"nanos":51849167}},"pass":false,"entropy":4.354174135563513,"entropy_diff":7.814193736521702e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) (str.indexof col1 (str.replace col1 col1 \" \") 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,38799]}
{"generation":430,"metadata":{"sampler_time":{"secs":0,"nanos":22750},"constraint_time":{"secs":0,"nanos":656962},"parser_time":{"secs":0,"nanos":783296},"transformer_time":{"secs":0,"nanos":600839706},"trie_time":{"secs":0,"nanos":4725335},"total_time":{"secs":0,"nanos":777057958}},"pass":false,"entropy":4.354174135563402,"entropy_diff":1.1102230246251565e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 0)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,7754]}
{"generation":431,"metadata":{"sampler_time":{"secs":0,"nanos":38589},"constraint_time":{"secs":0,"nanos":602293},"parser_time":{"secs":0,"nanos":764875},"transformer_time":{"secs":0,"nanos":601385751},"trie_time":{"secs":0,"nanos":4739138},"total_time":{"secs":0,"nanos":778892583}},"pass":false,"entropy":4.354174135563385,"entropy_diff":1.687538997430238e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,7754]}
{"generation":432,"metadata":{"sampler_time":{"secs":0,"nanos":26966},"constraint_time":{"secs":0,"nanos":505624},"parser_time":{"secs":0,"nanos":853629},"transformer_time":{"secs":0,"nanos":669749753},"trie_time":{"secs":0,"nanos":4740961},"total_time":{"secs":0,"nanos":869545250}},"pass":false,"entropy":4.3541741355633725,"entropy_diff":1.2434497875801753e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,7754]}
{"generation":433,"metadata":{"sampler_time":{"secs":0,"nanos":34953},"constraint_time":{"secs":0,"nanos":584670},"parser_time":{"secs":0,"nanos":806337},"transformer_time":{"secs":0,"nanos":661194705},"trie_time":{"secs":0,"nanos":4740126},"total_time":{"secs":0,"nanos":854362417}},"pass":false,"entropy":4.354174135563363,"entropy_diff":9.769962616701378e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 col2 (str.indexof col2 col2 (str.indexof col2 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,1292,7754]}
{"generation":434,"metadata":{"sampler_time":{"secs":0,"nanos":42119},"constraint_time":{"secs":0,"nanos":557207},"parser_time":{"secs":0,"nanos":723053},"transformer_time":{"secs":0,"nanos":585714418},"trie_time":{"secs":0,"nanos":4706452},"total_time":{"secs":0,"nanos":758343208}},"pass":false,"entropy":4.354174135563265,"entropy_diff":9.769962616701378e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col2 col2 (str.indexof col2 col2 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,38799]}
{"generation":435,"metadata":{"sampler_time":{"secs":0,"nanos":30916},"constraint_time":{"secs":0,"nanos":559917},"parser_time":{"secs":0,"nanos":737503},"transformer_time":{"secs":0,"nanos":593791960},"trie_time":{"secs":0,"nanos":4803447},"total_time":{"secs":0,"nanos":767111833}},"pass":false,"entropy":4.354174135563185,"entropy_diff":7.993605777301127e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col2 col2 (str.indexof col2 col2 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,38799]}
{"generation":436,"metadata":{"sampler_time":{"secs":0,"nanos":50506},"constraint_time":{"secs":0,"nanos":661249},"parser_time":{"secs":0,"nanos":756666},"transformer_time":{"secs":0,"nanos":586419040},"trie_time":{"secs":0,"nanos":4656612},"total_time":{"secs":0,"nanos":763832166}},"pass":false,"entropy":4.354174135563084,"entropy_diff":1.0125233984581428e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 0) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":437,"metadata":{"sampler_time":{"secs":0,"nanos":48205},"constraint_time":{"secs":0,"nanos":622337},"parser_time":{"secs":0,"nanos":762716},"transformer_time":{"secs":0,"nanos":550640750},"trie_time":{"secs":0,"nanos":4424505},"total_time":{"secs":0,"nanos":710993958}},"pass":false,"entropy":4.354174135562427,"entropy_diff":6.572520305780927e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (+ (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":438,"metadata":{"sampler_time":{"secs":0,"nanos":24630},"constraint_time":{"secs":0,"nanos":616625},"parser_time":{"secs":0,"nanos":802325},"transformer_time":{"secs":0,"nanos":670185959},"trie_time":{"secs":0,"nanos":4682248},"total_time":{"secs":0,"nanos":870034375}},"pass":false,"entropy":4.354174135561547,"entropy_diff":8.79296635503124e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col2 (str.replace col2 col1 col1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,365,1321,30,9630,664,34,664,33,664,33,1292,216,33,7754]}
{"generation":439,"metadata":{"sampler_time":{"secs":0,"nanos":37335},"constraint_time":{"secs":0,"nanos":643251},"parser_time":{"secs":0,"nanos":895490},"transformer_time":{"secs":0,"nanos":706346626},"trie_time":{"secs":0,"nanos":4680832},"total_time":{"secs":0,"nanos":912507041}},"pass":false,"entropy":4.354174135561534,"entropy_diff":1.3322676295501878e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) (- (str.indexof col1 col1 1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,38799]}
{"generation":440,"metadata":{"sampler_time":{"secs":0,"nanos":33419},"constraint_time":{"secs":0,"nanos":822085},"parser_time":{"secs":0,"nanos":826757},"transformer_time":{"secs":0,"nanos":588484415},"trie_time":{"secs":0,"nanos":5519416},"total_time":{"secs":0,"nanos":769249333}},"pass":false,"entropy":4.354174135561532,"entropy_diff":1.7763568394002505e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":441,"metadata":{"sampler_time":{"secs":0,"nanos":36465},"constraint_time":{"secs":0,"nanos":820329},"parser_time":{"secs":0,"nanos":1007631},"transformer_time":{"secs":0,"nanos":679376877},"trie_time":{"secs":0,"nanos":4718537},"total_time":{"secs":0,"nanos":890566375}},"pass":false,"entropy":4.354174135561529,"entropy_diff":3.552713678800501e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,7754]}
{"generation":442,"metadata":{"sampler_time":{"secs":0,"nanos":36872},"constraint_time":{"secs":0,"nanos":663757},"parser_time":{"secs":0,"nanos":805207},"transformer_time":{"secs":0,"nanos":603419332},"trie_time":{"secs":0,"nanos":4682966},"total_time":{"secs":0,"nanos":783286167}},"pass":false,"entropy":4.354174135561512,"entropy_diff":1.687538997430238e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col2 (str.replace col2 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,33,25,216,33,7754]}
{"generation":443,"metadata":{"sampler_time":{"secs":0,"nanos":43711},"constraint_time":{"secs":0,"nanos":594961},"parser_time":{"secs":0,"nanos":627576},"transformer_time":{"secs":0,"nanos":533538086},"trie_time":{"secs":0,"nanos":4577706},"total_time":{"secs":0,"nanos":691000708}},"pass":false,"entropy":4.354174135561487,"entropy_diff":2.4868995751603507e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":444,"metadata":{"sampler_time":{"secs":0,"nanos":47339},"constraint_time":{"secs":0,"nanos":647245},"parser_time":{"secs":0,"nanos":907209},"transformer_time":{"secs":0,"nanos":610839121},"trie_time":{"secs":0,"nanos":4743459},"total_time":{"secs":0,"nanos":790751334}},"pass":false,"entropy":4.354174135559561,"entropy_diff":1.9255708139098715e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") (+ 1 (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,30425,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":445,"metadata":{"sampler_time":{"secs":0,"nanos":30173},"constraint_time":{"secs":0,"nanos":629835},"parser_time":{"secs":0,"nanos":738835},"transformer_time":{"secs":0,"nanos":604492627},"trie_time":{"secs":0,"nanos":4896742},"total_time":{"secs":0,"nanos":782136458}},"pass":false,"entropy":4.354174135556099,"entropy_diff":3.462119479991088e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col2) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,7754]}
{"generation":446,"metadata":{"sampler_time":{"secs":0,"nanos":31165},"constraint_time":{"secs":0,"nanos":652043},"parser_time":{"secs":0,"nanos":991043},"transformer_time":{"secs":0,"nanos":746531498},"trie_time":{"secs":0,"nanos":4964623},"total_time":{"secs":0,"nanos":964913041}},"pass":false,"entropy":4.354174135556097,"entropy_diff":2.6645352591003757e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,38799]}
{"generation":447,"metadata":{"sampler_time":{"secs":0,"nanos":43796},"constraint_time":{"secs":0,"nanos":639167},"parser_time":{"secs":0,"nanos":949080},"transformer_time":{"secs":0,"nanos":738250583},"trie_time":{"secs":0,"nanos":4971667},"total_time":{"secs":0,"nanos":953801834}},"pass":false,"entropy":4.354174135556097,"entropy_diff":0.0,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":448,"metadata":{"sampler_time":{"secs":0,"nanos":42381},"constraint_time":{"secs":0,"nanos":592925},"parser_time":{"secs":0,"nanos":855247},"transformer_time":{"secs":0,"nanos":670401163},"trie_time":{"secs":0,"nanos":4940458},"total_time":{"secs":0,"nanos":866091125}},"pass":false,"entropy":4.354174135556096,"entropy_diff":8.881784197001252e-16,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,38799]}
{"generation":449,"metadata":{"sampler_time":{"secs":0,"nanos":37213},"constraint_time":{"secs":0,"nanos":643168},"parser_time":{"secs":0,"nanos":913627},"transformer_time":{"secs":0,"nanos":696072254},"trie_time":{"secs":0,"nanos":4946962},"total_time":{"secs":0,"nanos":902475834}},"pass":false,"entropy":4.354174135556096,"entropy_diff":0.0,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) (+ 1 (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":450,"metadata":{"sampler_time":{"secs":0,"nanos":70707},"constraint_time":{"secs":0,"nanos":745498},"parser_time":{"secs":0,"nanos":1010919},"transformer_time":{"secs":0,"nanos":746775710},"trie_time":{"secs":0,"nanos":4977835},"total_time":{"secs":0,"nanos":968415834}},"pass":false,"entropy":4.354174135556095,"entropy_diff":8.881784197001252e-16,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col2 col2) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,216,33,38799]}
{"generation":451,"metadata":{"sampler_time":{"secs":0,"nanos":38334},"constraint_time":{"secs":0,"nanos":647995},"parser_time":{"secs":0,"nanos":919254},"transformer_time":{"secs":0,"nanos":679562208},"trie_time":{"secs":0,"nanos":4960036},"total_time":{"secs":0,"nanos":879106792}},"pass":false,"entropy":4.354174135556093,"entropy_diff":1.7763568394002505e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 (str.substr col1 1 1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,7754]}
{"generation":452,"metadata":{"sampler_time":{"secs":0,"nanos":36797},"constraint_time":{"secs":0,"nanos":598124},"parser_time":{"secs":0,"nanos":879386},"transformer_time":{"secs":0,"nanos":595153250},"trie_time":{"secs":0,"nanos":4964156},"total_time":{"secs":0,"nanos":773785250}},"pass":false,"entropy":4.354174135556092,"entropy_diff":8.881784197001252e-16,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 \" \" \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,7754]}
{"generation":453,"metadata":{"sampler_time":{"secs":0,"nanos":59124},"constraint_time":{"secs":0,"nanos":563834},"parser_time":{"secs":0,"nanos":839834},"transformer_time":{"secs":0,"nanos":663745161},"trie_time":{"secs":0,"nanos":5021966},"total_time":{"secs":0,"nanos":856904541}},"pass":false,"entropy":4.354174135556082,"entropy_diff":9.769962616701378e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col2 col1 (str.indexof col2 col1 (str.indexof col2 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,1292,7754]}
{"generation":454,"metadata":{"sampler_time":{"secs":0,"nanos":24537},"constraint_time":{"secs":0,"nanos":702123},"parser_time":{"secs":0,"nanos":777282},"transformer_time":{"secs":0,"nanos":636801080},"trie_time":{"secs":0,"nanos":4905841},"total_time":{"secs":0,"nanos":823825666}},"pass":false,"entropy":4.354174135556021,"entropy_diff":6.128431095930864e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (- (str.indexof col1 (str.replace col1 col1 col1) 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,17481,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,33,7754]}
{"generation":455,"metadata":{"sampler_time":{"secs":0,"nanos":32293},"constraint_time":{"secs":0,"nanos":639376},"parser_time":{"secs":0,"nanos":752751},"transformer_time":{"secs":0,"nanos":597211497},"trie_time":{"secs":0,"nanos":5060639},"total_time":{"secs":0,"nanos":775598834}},"pass":false,"entropy":4.354174135555585,"entropy_diff":4.360956040727615e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,1292,216,33,1292]}
{"generation":456,"metadata":{"sampler_time":{"secs":0,"nanos":20461},"constraint_time":{"secs":0,"nanos":541416},"parser_time":{"secs":0,"nanos":653120},"transformer_time":{"secs":0,"nanos":518933246},"trie_time":{"secs":0,"nanos":4912834},"total_time":{"secs":0,"nanos":673218792}},"pass":false,"entropy":4.3541741355555414,"entropy_diff":4.3520742565306136e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 col1 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,664,33,216,33,1292,216,33,1292]}
{"generation":457,"metadata":{"sampler_time":{"secs":0,"nanos":33214},"constraint_time":{"secs":0,"nanos":680748},"parser_time":{"secs":0,"nanos":860025},"transformer_time":{"secs":0,"nanos":672016211},"trie_time":{"secs":0,"nanos":5010123},"total_time":{"secs":0,"nanos":867308542}},"pass":false,"entropy":4.354174135554949,"entropy_diff":5.924150059399835e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":458,"metadata":{"sampler_time":{"secs":0,"nanos":41162},"constraint_time":{"secs":0,"nanos":684788},"parser_time":{"secs":0,"nanos":888153},"transformer_time":{"secs":0,"nanos":698485706},"trie_time":{"secs":0,"nanos":5069845},"total_time":{"secs":0,"nanos":902653583}},"pass":false,"entropy":4.3541741355549375,"entropy_diff":1.1546319456101628e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col2 col2 \" \") (str.indexof col2 col2 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,34,476,20361,365,1321,30,3888,1714,664,34,664,34,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":459,"metadata":{"sampler_time":{"secs":0,"nanos":26459},"constraint_time":{"secs":0,"nanos":562457},"parser_time":{"secs":0,"nanos":597915},"transformer_time":{"secs":0,"nanos":527214918},"trie_time":{"secs":0,"nanos":5061244},"total_time":{"secs":0,"nanos":684099708}},"pass":false,"entropy":4.354174135554873,"entropy_diff":6.483702463810914e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,216,33,1292]}
{"generation":460,"metadata":{"sampler_time":{"secs":0,"nanos":35331},"constraint_time":{"secs":0,"nanos":584165},"parser_time":{"secs":0,"nanos":770912},"transformer_time":{"secs":0,"nanos":670834083},"trie_time":{"secs":0,"nanos":4936254},"total_time":{"secs":0,"nanos":867459417}},"pass":false,"entropy":4.354174135554747,"entropy_diff":1.2523315717771766e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 (str.replace col2 col1 col1) (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":461,"metadata":{"sampler_time":{"secs":0,"nanos":52460},"constraint_time":{"secs":0,"nanos":564542},"parser_time":{"secs":0,"nanos":859250},"transformer_time":{"secs":0,"nanos":607627419},"trie_time":{"secs":0,"nanos":6744654},"total_time":{"secs":0,"nanos":915743917}},"pass":false,"entropy":4.354174135554554,"entropy_diff":1.936228954946273e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 (str.replace col2 col1 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,34,25,216,33,7754]}
{"generation":462,"metadata":{"sampler_time":{"secs":0,"nanos":36589},"constraint_time":{"secs":0,"nanos":726090},"parser_time":{"secs":0,"nanos":907336},"transformer_time":{"secs":0,"nanos":673664003},"trie_time":{"secs":0,"nanos":5312961},"total_time":{"secs":0,"nanos":870256167}},"pass":false,"entropy":4.3541741355544845,"entropy_diff":6.927791673660977e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col2 col1) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":463,"metadata":{"sampler_time":{"secs":0,"nanos":35040},"constraint_time":{"secs":0,"nanos":1002464},"parser_time":{"secs":0,"nanos":1063629},"transformer_time":{"secs":0,"nanos":655379085},"trie_time":{"secs":0,"nanos":4977550},"total_time":{"secs":0,"nanos":856361542}},"pass":false,"entropy":4.354174135554137,"entropy_diff":3.4727776210274897e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,476,20361,476,20361,216,33,7754]}
{"generation":464,"metadata":{"sampler_time":{"secs":0,"nanos":32204},"constraint_time":{"secs":0,"nanos":654330},"parser_time":{"secs":0,"nanos":896671},"transformer_time":{"secs":0,"nanos":601393667},"trie_time":{"secs":0,"nanos":5030167},"total_time":{"secs":0,"nanos":777680792}},"pass":false,"entropy":4.354174135554099,"entropy_diff":3.8191672047105385e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 (str.substr col1 1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":465,"metadata":{"sampler_time":{"secs":0,"nanos":36413},"constraint_time":{"secs":0,"nanos":579122},"parser_time":{"secs":0,"nanos":758871},"transformer_time":{"secs":0,"nanos":603126791},"trie_time":{"secs":0,"nanos":5080968},"total_time":{"secs":0,"nanos":780436459}},"pass":false,"entropy":4.354174135553905,"entropy_diff":1.936228954946273e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.indexof col1 (str.replace col1 col1 col1) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,7754]}
{"generation":466,"metadata":{"sampler_time":{"secs":0,"nanos":25081},"constraint_time":{"secs":0,"nanos":569586},"parser_time":{"secs":0,"nanos":641124},"transformer_time":{"secs":0,"nanos":460583960},"trie_time":{"secs":0,"nanos":4986758},"total_time":{"secs":0,"nanos":595075166}},"pass":false,"entropy":4.354174135553877,"entropy_diff":2.842170943040401e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \"New York\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,5529,2863,1715,216,32,25,216,33,1292]}
{"generation":467,"metadata":{"sampler_time":{"secs":0,"nanos":52709},"constraint_time":{"secs":0,"nanos":675796},"parser_time":{"secs":0,"nanos":913832},"transformer_time":{"secs":0,"nanos":622251834},"trie_time":{"secs":0,"nanos":4861761},"total_time":{"secs":0,"nanos":800181333}},"pass":false,"entropy":4.354174135552844,"entropy_diff":1.0329515021112456e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"New York\") 1) (str.indexof col1 (str.replace col1 \"New York\" \"New York\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,5529,2863,1715,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,5529,2863,1715,216,33,7754]}
{"generation":468,"metadata":{"sampler_time":{"secs":0,"nanos":53912},"constraint_time":{"secs":0,"nanos":800915},"parser_time":{"secs":0,"nanos":1010328},"transformer_time":{"secs":0,"nanos":747977582},"trie_time":{"secs":0,"nanos":5033215},"total_time":{"secs":0,"nanos":970027166}},"pass":false,"entropy":4.354174135551745,"entropy_diff":1.098676705169055e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,7754]}
{"generation":469,"metadata":{"sampler_time":{"secs":0,"nanos":43121},"constraint_time":{"secs":0,"nanos":579342},"parser_time":{"secs":0,"nanos":810254},"transformer_time":{"secs":0,"nanos":629645624},"trie_time":{"secs":0,"nanos":5090174},"total_time":{"secs":0,"nanos":815640792}},"pass":false,"entropy":4.354174135551718,"entropy_diff":2.7533531010703882e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (+ 1 (str.indexof col1 (str.replace col1 col1 col1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,30425,216,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,38799]}
{"generation":470,"metadata":{"sampler_time":{"secs":0,"nanos":23251},"constraint_time":{"secs":0,"nanos":590540},"parser_time":{"secs":0,"nanos":612458},"transformer_time":{"secs":0,"nanos":465989501},"trie_time":{"secs":0,"nanos":4980501},"total_time":{"secs":0,"nanos":627795084}},"pass":false,"entropy":4.354174135551331,"entropy_diff":3.872457909892546e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"New York\" \"NY\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,5529,2863,18,476,30513,1715,216,33,25,216,34,1292]}
{"generation":471,"metadata":{"sampler_time":{"secs":0,"nanos":66667},"constraint_time":{"secs":0,"nanos":608540},"parser_time":{"secs":0,"nanos":863714},"transformer_time":{"secs":0,"nanos":662687121},"trie_time":{"secs":0,"nanos":5744537},"total_time":{"secs":0,"nanos":906734000}},"pass":false,"entropy":4.354174135550482,"entropy_diff":8.482103908136196e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col1 col2 (str.indexof col2 col1 (str.indexof col1 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,1292,7754]}
{"generation":472,"metadata":{"sampler_time":{"secs":0,"nanos":39418},"constraint_time":{"secs":0,"nanos":573001},"parser_time":{"secs":0,"nanos":815429},"transformer_time":{"secs":0,"nanos":663408288},"trie_time":{"secs":0,"nanos":5065528},"total_time":{"secs":0,"nanos":857309916}},"pass":false,"entropy":4.354174135550399,"entropy_diff":8.348877145181177e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 col1 (str.indexof col2 col1 (str.indexof col2 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,34,216,33,1292,7754]}
{"generation":473,"metadata":{"sampler_time":{"secs":0,"nanos":44246},"constraint_time":{"secs":0,"nanos":579955},"parser_time":{"secs":0,"nanos":902162},"transformer_time":{"secs":0,"nanos":622980545},"trie_time":{"secs":0,"nanos":5210383},"total_time":{"secs":0,"nanos":807177750}},"pass":false,"entropy":4.3541741355503385,"entropy_diff":6.039613253960852e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (+ 1 (str.indexof col1 col2 (str.indexof col2 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,30425,216,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,1292,7754]}
{"average_metadata":{"sampler_time":{"secs":0,"nanos":48372},"constraint_time":{"secs":0,"nanos":587812},"parser_time":{"secs":0,"nanos":623387},"transformer_time":{"secs":0,"nanos":484246066},"trie_time":{"secs":0,"nanos":2234445},"total_time":{"secs":0,"nanos":629548646}},"average_entropy":4.338266656748303,"average_entropy_diff":2.120519046669701,"average_tokenization_error":0.0,"average_tokens_after_first_token_error":0.0,"total_duration":{"secs":301,"nanos":556869625},"average_token_count":0.0}
