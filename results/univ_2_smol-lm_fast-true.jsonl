[2m2025-09-10T01:41:24.734144Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:41:24.734196Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:41:25.368399Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:41:25.368434Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:41:25.599524Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:41:25.599635Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
{"generation":0,"metadata":{"sampler_time":{"secs":0,"nanos":128044},"constraint_time":{"secs":0,"nanos":466500},"parser_time":{"secs":0,"nanos":467915},"transformer_time":{"secs":0,"nanos":382851920},"trie_time":{"secs":0,"nanos":30632},"total_time":{"secs":0,"nanos":501043167}},"pass":false,"entropy":0.0,"entropy_diff":1000.0,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":1,"metadata":{"sampler_time":{"secs":0,"nanos":39837},"constraint_time":{"secs":0,"nanos":83961},"parser_time":{"secs":0,"nanos":158917},"transformer_time":{"secs":0,"nanos":156234372},"trie_time":{"secs":0,"nanos":18124},"total_time":{"secs":0,"nanos":204088417}},"pass":false,"entropy":1.9750385219293527,"entropy_diff":-1.9750385219293527,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \"USA\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,476,24842,1715]}
{"generation":2,"metadata":{"sampler_time":{"secs":0,"nanos":43124},"constraint_time":{"secs":0,"nanos":115959},"parser_time":{"secs":0,"nanos":192957},"transformer_time":{"secs":0,"nanos":180349918},"trie_time":{"secs":0,"nanos":25292},"total_time":{"secs":0,"nanos":235439417}},"pass":false,"entropy":2.3106112583753093,"entropy_diff":-0.33557273644595664,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 1) \"USA\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,24842,1715]}
{"generation":3,"metadata":{"sampler_time":{"secs":0,"nanos":28920},"constraint_time":{"secs":0,"nanos":33255},"parser_time":{"secs":0,"nanos":79836},"transformer_time":{"secs":0,"nanos":98183917},"trie_time":{"secs":0,"nanos":18911},"total_time":{"secs":0,"nanos":129190250}},"pass":false,"entropy":2.55256513474362,"entropy_diff":-0.24195387636831045,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ col1 col2)","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,664,33,664,34,25]}
{"generation":4,"metadata":{"sampler_time":{"secs":0,"nanos":81041},"constraint_time":{"secs":0,"nanos":89541},"parser_time":{"secs":0,"nanos":246462},"transformer_time":{"secs":0,"nanos":222774333},"trie_time":{"secs":0,"nanos":46002},"total_time":{"secs":0,"nanos":296808000}},"pass":false,"entropy":4.273481964856422,"entropy_diff":-1.720916830112802,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,34,1292]}
{"generation":5,"metadata":{"sampler_time":{"secs":0,"nanos":133086},"constraint_time":{"secs":0,"nanos":1584127},"parser_time":{"secs":0,"nanos":541297},"transformer_time":{"secs":0,"nanos":464595957},"trie_time":{"secs":0,"nanos":50822},"total_time":{"secs":0,"nanos":608012167}},"pass":false,"entropy":4.641204045033405,"entropy_diff":-0.36772208017698294,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col1 \" \" 1) 1) \"USA\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,24842,1715,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":6,"metadata":{"sampler_time":{"secs":0,"nanos":62460},"constraint_time":{"secs":0,"nanos":151999},"parser_time":{"secs":0,"nanos":305876},"transformer_time":{"secs":0,"nanos":298517916},"trie_time":{"secs":0,"nanos":51291},"total_time":{"secs":0,"nanos":393805083}},"pass":false,"entropy":4.6572935747299535,"entropy_diff":-0.016089529696548865,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col2 \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,34,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":7,"metadata":{"sampler_time":{"secs":0,"nanos":126044},"constraint_time":{"secs":0,"nanos":392080},"parser_time":{"secs":0,"nanos":393127},"transformer_time":{"secs":0,"nanos":398353873},"trie_time":{"secs":0,"nanos":69666},"total_time":{"secs":0,"nanos":517738958}},"pass":false,"entropy":4.88583063846728,"entropy_diff":-0.22853706373732674,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 1 1) \"USA\") (str.substr col1 (str.indexof col1 \"USA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,24842,1715,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,24842,18,216,33,25,216,33,1292]}
{"generation":8,"metadata":{"sampler_time":{"secs":0,"nanos":213127},"constraint_time":{"secs":0,"nanos":7334040},"parser_time":{"secs":0,"nanos":967670},"transformer_time":{"secs":0,"nanos":691163877},"trie_time":{"secs":0,"nanos":102873},"total_time":{"secs":0,"nanos":905434417}},"pass":false,"entropy":4.8788657413678225,"entropy_diff":0.006964897099457801,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr (str.substr col1 (str.indexof col1 \" \" 1) 1) 1 2) \"USA\") (str.++ (str.substr (str.substr col2 (str.indexof col2 \" \" 1) 1) 1 2) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,216,34,25,476,24842,1715,365,1321,30,11444,365,1321,30,4103,1321,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,216,34,25,476,24842,11121]}
{"generation":9,"metadata":{"sampler_time":{"secs":0,"nanos":55503},"constraint_time":{"secs":0,"nanos":93876},"parser_time":{"secs":0,"nanos":244627},"transformer_time":{"secs":0,"nanos":223069501},"trie_time":{"secs":0,"nanos":75325},"total_time":{"secs":0,"nanos":295876333}},"pass":false,"entropy":4.971506349445471,"entropy_diff":-0.09264060807764896,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,34,1292]}
{"generation":10,"metadata":{"sampler_time":{"secs":0,"nanos":95749},"constraint_time":{"secs":0,"nanos":162496},"parser_time":{"secs":0,"nanos":308459},"transformer_time":{"secs":0,"nanos":306128372},"trie_time":{"secs":0,"nanos":78877},"total_time":{"secs":0,"nanos":399690791}},"pass":false,"entropy":4.974504391848744,"entropy_diff":-0.002998042403272727,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":11,"metadata":{"sampler_time":{"secs":0,"nanos":71916},"constraint_time":{"secs":0,"nanos":405543},"parser_time":{"secs":0,"nanos":353040},"transformer_time":{"secs":0,"nanos":299863795},"trie_time":{"secs":0,"nanos":128335},"total_time":{"secs":0,"nanos":399951542}},"pass":false,"entropy":4.980565574364115,"entropy_diff":-0.006061182515370689,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col2 0 1) \" \") (str.replace col2 col2 \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,34,476,24842,11121]}
{"generation":12,"metadata":{"sampler_time":{"secs":0,"nanos":61583},"constraint_time":{"secs":0,"nanos":85629},"parser_time":{"secs":0,"nanos":207789},"transformer_time":{"secs":0,"nanos":222964043},"trie_time":{"secs":0,"nanos":126502},"total_time":{"secs":0,"nanos":296056917}},"pass":false,"entropy":4.973465966636896,"entropy_diff":0.0070996077272189595,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,33,1292]}
{"generation":13,"metadata":{"sampler_time":{"secs":0,"nanos":67664},"constraint_time":{"secs":0,"nanos":182128},"parser_time":{"secs":0,"nanos":390699},"transformer_time":{"secs":0,"nanos":304961124},"trie_time":{"secs":0,"nanos":119133},"total_time":{"secs":0,"nanos":402956125}},"pass":false,"entropy":4.936996964931396,"entropy_diff":0.03646900170550005,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.substr col1 0 1) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,24842,11121]}
{"generation":14,"metadata":{"sampler_time":{"secs":0,"nanos":58375},"constraint_time":{"secs":0,"nanos":93039},"parser_time":{"secs":0,"nanos":240257},"transformer_time":{"secs":0,"nanos":223205876},"trie_time":{"secs":0,"nanos":129744},"total_time":{"secs":0,"nanos":296527333}},"pass":false,"entropy":4.911943162345243,"entropy_diff":0.025053802586152862,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,476,24842,11121]}
{"generation":15,"metadata":{"sampler_time":{"secs":0,"nanos":45920},"constraint_time":{"secs":0,"nanos":83709},"parser_time":{"secs":0,"nanos":244296},"transformer_time":{"secs":0,"nanos":222589502},"trie_time":{"secs":0,"nanos":131793},"total_time":{"secs":0,"nanos":294843000}},"pass":false,"entropy":4.884032131269427,"entropy_diff":0.02791103107581616,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col2 \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,34,476,24842,11121]}
{"generation":16,"metadata":{"sampler_time":{"secs":0,"nanos":110630},"constraint_time":{"secs":0,"nanos":285456},"parser_time":{"secs":0,"nanos":466300},"transformer_time":{"secs":0,"nanos":381666291},"trie_time":{"secs":0,"nanos":151832},"total_time":{"secs":0,"nanos":498329000}},"pass":false,"entropy":4.8705615416124415,"entropy_diff":0.013470589656985332,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 (str.substr col1 (str.indexof col2 \" \" 1) 1) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,476,24842,11121]}
{"generation":17,"metadata":{"sampler_time":{"secs":0,"nanos":94292},"constraint_time":{"secs":0,"nanos":335168},"parser_time":{"secs":0,"nanos":396833},"transformer_time":{"secs":0,"nanos":379695293},"trie_time":{"secs":0,"nanos":143659},"total_time":{"secs":0,"nanos":490567583}},"pass":false,"entropy":4.858057999732224,"entropy_diff":0.012503541880217739,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":18,"metadata":{"sampler_time":{"secs":0,"nanos":63210},"constraint_time":{"secs":0,"nanos":108583},"parser_time":{"secs":0,"nanos":285173},"transformer_time":{"secs":0,"nanos":272581547},"trie_time":{"secs":0,"nanos":153998},"total_time":{"secs":0,"nanos":359424666}},"pass":false,"entropy":4.840812377876896,"entropy_diff":0.017245621855328075,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 (str.at col2 0)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,365,1321,30,261,664,34,216,32,7754]}
{"generation":19,"metadata":{"sampler_time":{"secs":0,"nanos":22289},"constraint_time":{"secs":0,"nanos":103790},"parser_time":{"secs":0,"nanos":218740},"transformer_time":{"secs":0,"nanos":222164208},"trie_time":{"secs":0,"nanos":172087},"total_time":{"secs":0,"nanos":293559916}},"pass":false,"entropy":4.831878839028503,"entropy_diff":0.00893353884839243,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,33,1292]}
{"generation":20,"metadata":{"sampler_time":{"secs":0,"nanos":50666},"constraint_time":{"secs":0,"nanos":171748},"parser_time":{"secs":0,"nanos":464705},"transformer_time":{"secs":0,"nanos":347865833},"trie_time":{"secs":0,"nanos":167951},"total_time":{"secs":0,"nanos":456300541}},"pass":false,"entropy":4.817034295052518,"entropy_diff":0.014844543975985225,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.at col1 (str.indexof col1 \" \" 1)) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,476,24842,11121]}
{"generation":21,"metadata":{"sampler_time":{"secs":0,"nanos":40919},"constraint_time":{"secs":0,"nanos":110042},"parser_time":{"secs":0,"nanos":247794},"transformer_time":{"secs":0,"nanos":213981832},"trie_time":{"secs":0,"nanos":150793},"total_time":{"secs":0,"nanos":282764542}},"pass":false,"entropy":4.814756364489303,"entropy_diff":0.002277930563215236,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 \" \" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,476,476,42934,1292]}
{"generation":22,"metadata":{"sampler_time":{"secs":0,"nanos":37332},"constraint_time":{"secs":0,"nanos":86499},"parser_time":{"secs":0,"nanos":224454},"transformer_time":{"secs":0,"nanos":230450247},"trie_time":{"secs":0,"nanos":162918},"total_time":{"secs":0,"nanos":303260416}},"pass":false,"entropy":4.80676164592586,"entropy_diff":0.007994718563442582,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,216,32,216,33,1292]}
{"generation":23,"metadata":{"sampler_time":{"secs":0,"nanos":57751},"constraint_time":{"secs":0,"nanos":196004},"parser_time":{"secs":0,"nanos":360462},"transformer_time":{"secs":0,"nanos":305750747},"trie_time":{"secs":0,"nanos":185631},"total_time":{"secs":0,"nanos":400703375}},"pass":false,"entropy":4.8015145534171815,"entropy_diff":0.005247092508678719,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.substr col2 1 1) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,24842,11121]}
{"generation":24,"metadata":{"sampler_time":{"secs":0,"nanos":34956},"constraint_time":{"secs":0,"nanos":345959},"parser_time":{"secs":0,"nanos":260961},"transformer_time":{"secs":0,"nanos":230581875},"trie_time":{"secs":0,"nanos":151836},"total_time":{"secs":0,"nanos":301227083}},"pass":false,"entropy":4.798697930395733,"entropy_diff":0.0028166230214488053,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") \"USA\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,476,24842,1715]}
{"generation":25,"metadata":{"sampler_time":{"secs":0,"nanos":82042},"constraint_time":{"secs":0,"nanos":142168},"parser_time":{"secs":0,"nanos":355577},"transformer_time":{"secs":0,"nanos":298689957},"trie_time":{"secs":0,"nanos":186467},"total_time":{"secs":0,"nanos":401574458}},"pass":false,"entropy":4.78964627958538,"entropy_diff":0.00905165081035264,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.replace col2 col1 col2) col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,9630,664,34,664,33,664,34,25,664,34,1292]}
{"generation":26,"metadata":{"sampler_time":{"secs":0,"nanos":62661},"constraint_time":{"secs":0,"nanos":161006},"parser_time":{"secs":0,"nanos":328379},"transformer_time":{"secs":0,"nanos":305746291},"trie_time":{"secs":0,"nanos":175880},"total_time":{"secs":0,"nanos":405583584}},"pass":false,"entropy":4.787947061333252,"entropy_diff":0.001699218252127821,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,1292]}
{"generation":27,"metadata":{"sampler_time":{"secs":0,"nanos":113585},"constraint_time":{"secs":0,"nanos":429295},"parser_time":{"secs":0,"nanos":499498},"transformer_time":{"secs":0,"nanos":398821081},"trie_time":{"secs":0,"nanos":179252},"total_time":{"secs":0,"nanos":523975750}},"pass":false,"entropy":4.776645658252055,"entropy_diff":0.011301403081197314,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 2 1) \"USA\") (str.substr col1 (str.indexof col1 \"USA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,24842,1715,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,24842,18,216,33,25,216,33,1292]}
{"generation":28,"metadata":{"sampler_time":{"secs":0,"nanos":62293},"constraint_time":{"secs":0,"nanos":101209},"parser_time":{"secs":0,"nanos":270787},"transformer_time":{"secs":0,"nanos":223401209},"trie_time":{"secs":0,"nanos":189378},"total_time":{"secs":0,"nanos":301079792}},"pass":false,"entropy":4.749832598616558,"entropy_diff":0.026813059635497183,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,33,664,34,1292]}
{"generation":29,"metadata":{"sampler_time":{"secs":0,"nanos":117791},"constraint_time":{"secs":0,"nanos":148792},"parser_time":{"secs":0,"nanos":488875},"transformer_time":{"secs":0,"nanos":340873918},"trie_time":{"secs":0,"nanos":191782},"total_time":{"secs":0,"nanos":458302583}},"pass":false,"entropy":4.7457123267122014,"entropy_diff":0.004120271904356265,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 (str.at col2 (str.indexof col2 \" \" 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,365,1321,30,261,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,38799]}
{"generation":30,"metadata":{"sampler_time":{"secs":0,"nanos":78253},"constraint_time":{"secs":0,"nanos":302170},"parser_time":{"secs":0,"nanos":537035},"transformer_time":{"secs":0,"nanos":388482125},"trie_time":{"secs":0,"nanos":212667},"total_time":{"secs":0,"nanos":513603833}},"pass":false,"entropy":4.743538849155518,"entropy_diff":0.0021734775566830677,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace (str.substr col1 (str.indexof col1 \" \" 1) 1) \"USA\" \"PA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,24842,18,476,4442,11121]}
{"generation":31,"metadata":{"sampler_time":{"secs":0,"nanos":30753},"constraint_time":{"secs":0,"nanos":83455},"parser_time":{"secs":0,"nanos":131788},"transformer_time":{"secs":0,"nanos":148093167},"trie_time":{"secs":0,"nanos":181380},"total_time":{"secs":0,"nanos":194592625}},"pass":false,"entropy":4.73150491637239,"entropy_diff":0.012033932783128698,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,42934,25]}
{"generation":32,"metadata":{"sampler_time":{"secs":0,"nanos":78252},"constraint_time":{"secs":0,"nanos":367167},"parser_time":{"secs":0,"nanos":301662},"transformer_time":{"secs":0,"nanos":306110001},"trie_time":{"secs":0,"nanos":210163},"total_time":{"secs":0,"nanos":410119000}},"pass":false,"entropy":4.695186563328029,"entropy_diff":0.036318353044360485,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,33,216,34,1292]}
{"generation":33,"metadata":{"sampler_time":{"secs":0,"nanos":105370},"constraint_time":{"secs":0,"nanos":450500},"parser_time":{"secs":0,"nanos":389084},"transformer_time":{"secs":0,"nanos":329683623},"trie_time":{"secs":0,"nanos":178705},"total_time":{"secs":0,"nanos":434236750}},"pass":false,"entropy":4.694373419210028,"entropy_diff":0.0008131441180010412,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr \"USA\" 0 1) \"USA\") (str.substr \"USA\" 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,476,24842,18,216,32,216,33,25,476,24842,1715,365,1321,30,4103,1321,476,24842,18,216,33,216,33,1292]}
{"generation":34,"metadata":{"sampler_time":{"secs":0,"nanos":30663},"constraint_time":{"secs":0,"nanos":72248},"parser_time":{"secs":0,"nanos":183959},"transformer_time":{"secs":0,"nanos":156303792},"trie_time":{"secs":0,"nanos":165999},"total_time":{"secs":0,"nanos":207635125}},"pass":false,"entropy":4.654919909959693,"entropy_diff":0.039453509250335195,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col2 col1) \"USA\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,34,664,33,25,476,24842,1715]}
{"generation":35,"metadata":{"sampler_time":{"secs":0,"nanos":97918},"constraint_time":{"secs":0,"nanos":361377},"parser_time":{"secs":0,"nanos":338168},"transformer_time":{"secs":0,"nanos":305654166},"trie_time":{"secs":0,"nanos":216750},"total_time":{"secs":0,"nanos":408701583}},"pass":false,"entropy":4.627784614234794,"entropy_diff":0.027135295724899144,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,34,1292]}
{"generation":36,"metadata":{"sampler_time":{"secs":0,"nanos":109001},"constraint_time":{"secs":0,"nanos":337041},"parser_time":{"secs":0,"nanos":479963},"transformer_time":{"secs":0,"nanos":381068419},"trie_time":{"secs":0,"nanos":238995},"total_time":{"secs":0,"nanos":507629833}},"pass":false,"entropy":4.626395749603413,"entropy_diff":0.0013888646313811037,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,1292]}
{"generation":37,"metadata":{"sampler_time":{"secs":0,"nanos":96797},"constraint_time":{"secs":0,"nanos":354668},"parser_time":{"secs":0,"nanos":367587},"transformer_time":{"secs":0,"nanos":307787707},"trie_time":{"secs":0,"nanos":244959},"total_time":{"secs":0,"nanos":411125584}},"pass":false,"entropy":4.6260443011380215,"entropy_diff":0.0003514484653912575,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,32,216,33,1292]}
{"generation":38,"metadata":{"sampler_time":{"secs":0,"nanos":80959},"constraint_time":{"secs":0,"nanos":362414},"parser_time":{"secs":0,"nanos":371338},"transformer_time":{"secs":0,"nanos":297903712},"trie_time":{"secs":0,"nanos":236749},"total_time":{"secs":0,"nanos":402231625}},"pass":false,"entropy":4.625445967531092,"entropy_diff":0.0005983336069297351,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,476,24842,11121]}
{"generation":39,"metadata":{"sampler_time":{"secs":0,"nanos":92161},"constraint_time":{"secs":0,"nanos":370460},"parser_time":{"secs":0,"nanos":323455},"transformer_time":{"secs":0,"nanos":305348002},"trie_time":{"secs":0,"nanos":253080},"total_time":{"secs":0,"nanos":409127500}},"pass":false,"entropy":4.624913777310112,"entropy_diff":0.0005321902209800555,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,216,33,1292]}
{"generation":40,"metadata":{"sampler_time":{"secs":0,"nanos":100164},"constraint_time":{"secs":0,"nanos":329749},"parser_time":{"secs":0,"nanos":468337},"transformer_time":{"secs":0,"nanos":381191374},"trie_time":{"secs":0,"nanos":257757},"total_time":{"secs":0,"nanos":507771333}},"pass":false,"entropy":4.624636353068471,"entropy_diff":0.000277424241640567,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":41,"metadata":{"sampler_time":{"secs":0,"nanos":118622},"constraint_time":{"secs":0,"nanos":388000},"parser_time":{"secs":0,"nanos":449045},"transformer_time":{"secs":0,"nanos":380553208},"trie_time":{"secs":0,"nanos":269041},"total_time":{"secs":0,"nanos":510601542}},"pass":false,"entropy":4.624245746949977,"entropy_diff":0.0003906061184943965,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,1292]}
{"generation":42,"metadata":{"sampler_time":{"secs":0,"nanos":105170},"constraint_time":{"secs":0,"nanos":322079},"parser_time":{"secs":0,"nanos":504872},"transformer_time":{"secs":0,"nanos":382366251},"trie_time":{"secs":0,"nanos":266329},"total_time":{"secs":0,"nanos":511146500}},"pass":false,"entropy":4.624168629697117,"entropy_diff":0.00007711725285997062,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 1 1) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,24842,11121]}
{"generation":43,"metadata":{"sampler_time":{"secs":0,"nanos":141047},"constraint_time":{"secs":0,"nanos":599539},"parser_time":{"secs":0,"nanos":639001},"transformer_time":{"secs":0,"nanos":465090080},"trie_time":{"secs":0,"nanos":344747},"total_time":{"secs":0,"nanos":610369750}},"pass":false,"entropy":4.624056930372404,"entropy_diff":0.00011169932471233324,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 1 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":44,"metadata":{"sampler_time":{"secs":0,"nanos":90914},"constraint_time":{"secs":0,"nanos":358960},"parser_time":{"secs":0,"nanos":321743},"transformer_time":{"secs":0,"nanos":306319459},"trie_time":{"secs":0,"nanos":329873},"total_time":{"secs":0,"nanos":401539000}},"pass":false,"entropy":4.6240031213335335,"entropy_diff":0.00005380903887086674,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,34,216,33,1292]}
{"generation":45,"metadata":{"sampler_time":{"secs":0,"nanos":111917},"constraint_time":{"secs":0,"nanos":532417},"parser_time":{"secs":0,"nanos":592008},"transformer_time":{"secs":0,"nanos":449488627},"trie_time":{"secs":0,"nanos":340918},"total_time":{"secs":0,"nanos":589761625}},"pass":false,"entropy":4.623967884837775,"entropy_diff":0.00003523649575853938,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":46,"metadata":{"sampler_time":{"secs":0,"nanos":51583},"constraint_time":{"secs":0,"nanos":336542},"parser_time":{"secs":0,"nanos":347871},"transformer_time":{"secs":0,"nanos":297006207},"trie_time":{"secs":0,"nanos":351343},"total_time":{"secs":0,"nanos":393532750}},"pass":false,"entropy":4.623948382954918,"entropy_diff":0.000019501882857042574,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,664,34,1292]}
{"generation":47,"metadata":{"sampler_time":{"secs":0,"nanos":42038},"constraint_time":{"secs":0,"nanos":335961},"parser_time":{"secs":0,"nanos":405961},"transformer_time":{"secs":0,"nanos":371196586},"trie_time":{"secs":0,"nanos":383123},"total_time":{"secs":0,"nanos":518845709}},"pass":false,"entropy":4.623910507340693,"entropy_diff":0.00003787561422452512,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,1292]}
{"generation":48,"metadata":{"sampler_time":{"secs":0,"nanos":86249},"constraint_time":{"secs":0,"nanos":582580},"parser_time":{"secs":0,"nanos":541904},"transformer_time":{"secs":0,"nanos":414010916},"trie_time":{"secs":0,"nanos":352045},"total_time":{"secs":0,"nanos":541213542}},"pass":false,"entropy":4.623897312270886,"entropy_diff":0.000013195069807458992,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (+ (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,1292]}
{"generation":49,"metadata":{"sampler_time":{"secs":0,"nanos":35006},"constraint_time":{"secs":0,"nanos":276625},"parser_time":{"secs":0,"nanos":311829},"transformer_time":{"secs":0,"nanos":231071707},"trie_time":{"secs":0,"nanos":329957},"total_time":{"secs":0,"nanos":331614958}},"pass":false,"entropy":4.623872872478579,"entropy_diff":0.000024439792307262564,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") \"USA\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,476,24842,1715]}
{"generation":50,"metadata":{"sampler_time":{"secs":0,"nanos":56215},"constraint_time":{"secs":0,"nanos":353916},"parser_time":{"secs":0,"nanos":377370},"transformer_time":{"secs":0,"nanos":297323000},"trie_time":{"secs":0,"nanos":378715},"total_time":{"secs":0,"nanos":392974958}},"pass":false,"entropy":4.623594196484425,"entropy_diff":0.0002786759941537653,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,42934,1292]}
{"generation":51,"metadata":{"sampler_time":{"secs":0,"nanos":62210},"constraint_time":{"secs":0,"nanos":421962},"parser_time":{"secs":0,"nanos":412833},"transformer_time":{"secs":0,"nanos":380866539},"trie_time":{"secs":0,"nanos":388446},"total_time":{"secs":0,"nanos":505005875}},"pass":false,"entropy":4.62356793432784,"entropy_diff":0.000026262156584522245,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292]}
{"generation":52,"metadata":{"sampler_time":{"secs":0,"nanos":93874},"constraint_time":{"secs":0,"nanos":280671},"parser_time":{"secs":0,"nanos":474332},"transformer_time":{"secs":0,"nanos":374348707},"trie_time":{"secs":0,"nanos":363205},"total_time":{"secs":0,"nanos":497521750}},"pass":false,"entropy":4.623562755105539,"entropy_diff":5.1792223016988714e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":53,"metadata":{"sampler_time":{"secs":0,"nanos":78168},"constraint_time":{"secs":0,"nanos":409415},"parser_time":{"secs":0,"nanos":473873},"transformer_time":{"secs":0,"nanos":380293708},"trie_time":{"secs":0,"nanos":389174},"total_time":{"secs":0,"nanos":500944375}},"pass":false,"entropy":4.62355463690408,"entropy_diff":8.11820145862896e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,33,25,216,33,1292]}
{"generation":54,"metadata":{"sampler_time":{"secs":0,"nanos":57423},"constraint_time":{"secs":0,"nanos":356751},"parser_time":{"secs":0,"nanos":380042},"transformer_time":{"secs":0,"nanos":305885001},"trie_time":{"secs":0,"nanos":375710},"total_time":{"secs":0,"nanos":407796000}},"pass":false,"entropy":4.623544201653477,"entropy_diff":0.00001043525060318018,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,34,216,33,1292]}
{"generation":55,"metadata":{"sampler_time":{"secs":0,"nanos":68124},"constraint_time":{"secs":0,"nanos":355784},"parser_time":{"secs":0,"nanos":383508},"transformer_time":{"secs":0,"nanos":289905668},"trie_time":{"secs":0,"nanos":384623},"total_time":{"secs":0,"nanos":385763375}},"pass":false,"entropy":4.623522204438894,"entropy_diff":0.00002199721458318038,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 \" \" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,476,476,42934,1292]}
{"generation":56,"metadata":{"sampler_time":{"secs":0,"nanos":70169},"constraint_time":{"secs":0,"nanos":276170},"parser_time":{"secs":0,"nanos":355920},"transformer_time":{"secs":0,"nanos":310444292},"trie_time":{"secs":0,"nanos":416210},"total_time":{"secs":0,"nanos":409290583}},"pass":false,"entropy":4.623499316725391,"entropy_diff":0.000022887713503116913,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,33,1292]}
{"generation":57,"metadata":{"sampler_time":{"secs":0,"nanos":105880},"constraint_time":{"secs":0,"nanos":503915},"parser_time":{"secs":0,"nanos":548541},"transformer_time":{"secs":0,"nanos":414355913},"trie_time":{"secs":0,"nanos":379460},"total_time":{"secs":0,"nanos":549198375}},"pass":false,"entropy":4.623491907254568,"entropy_diff":7.409470822672404e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (- (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,1292]}
{"generation":58,"metadata":{"sampler_time":{"secs":0,"nanos":59712},"constraint_time":{"secs":0,"nanos":349171},"parser_time":{"secs":0,"nanos":346755},"transformer_time":{"secs":0,"nanos":298142750},"trie_time":{"secs":0,"nanos":371704},"total_time":{"secs":0,"nanos":400145750}},"pass":false,"entropy":4.62347857780762,"entropy_diff":0.000013329446947984991,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,664,34,1292]}
{"generation":59,"metadata":{"sampler_time":{"secs":0,"nanos":84879},"constraint_time":{"secs":0,"nanos":320501},"parser_time":{"secs":0,"nanos":421757},"transformer_time":{"secs":0,"nanos":381643755},"trie_time":{"secs":0,"nanos":374750},"total_time":{"secs":0,"nanos":506009875}},"pass":false,"entropy":4.623467513348663,"entropy_diff":0.00001106445895704411,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292]}
{"generation":60,"metadata":{"sampler_time":{"secs":0,"nanos":60125},"constraint_time":{"secs":0,"nanos":365414},"parser_time":{"secs":0,"nanos":359080},"transformer_time":{"secs":0,"nanos":297351709},"trie_time":{"secs":0,"nanos":364044},"total_time":{"secs":0,"nanos":399818208}},"pass":false,"entropy":4.623458413043464,"entropy_diff":9.100305199183367e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col2 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,33,664,34,1292]}
{"generation":61,"metadata":{"sampler_time":{"secs":0,"nanos":74916},"constraint_time":{"secs":0,"nanos":351458},"parser_time":{"secs":0,"nanos":382242},"transformer_time":{"secs":0,"nanos":347729249},"trie_time":{"secs":0,"nanos":416581},"total_time":{"secs":0,"nanos":460224792}},"pass":false,"entropy":4.623440181092574,"entropy_diff":0.00001823195088945795,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,216]}
{"generation":62,"metadata":{"sampler_time":{"secs":0,"nanos":56798},"constraint_time":{"secs":0,"nanos":370708},"parser_time":{"secs":0,"nanos":308081},"transformer_time":{"secs":0,"nanos":306381789},"trie_time":{"secs":0,"nanos":410670},"total_time":{"secs":0,"nanos":408006791}},"pass":false,"entropy":4.623435842746272,"entropy_diff":4.338346302645846e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,216,34,1292]}
{"generation":63,"metadata":{"sampler_time":{"secs":0,"nanos":75338},"constraint_time":{"secs":0,"nanos":346082},"parser_time":{"secs":0,"nanos":378746},"transformer_time":{"secs":0,"nanos":364174543},"trie_time":{"secs":0,"nanos":384463},"total_time":{"secs":0,"nanos":483938208}},"pass":false,"entropy":4.62342918050254,"entropy_diff":6.66224373180313e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr (str.at col1 0) 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,365,1321,30,261,664,33,216,32,25,216,33,216,33,1292]}
{"generation":64,"metadata":{"sampler_time":{"secs":0,"nanos":83331},"constraint_time":{"secs":0,"nanos":386791},"parser_time":{"secs":0,"nanos":420333},"transformer_time":{"secs":0,"nanos":356310545},"trie_time":{"secs":0,"nanos":386246},"total_time":{"secs":0,"nanos":476972833}},"pass":false,"entropy":4.62339539482598,"entropy_diff":0.00003378567655953901,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.at col1 0) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,24842,11121]}
{"generation":65,"metadata":{"sampler_time":{"secs":0,"nanos":98837},"constraint_time":{"secs":0,"nanos":479871},"parser_time":{"secs":0,"nanos":423077},"transformer_time":{"secs":0,"nanos":348118084},"trie_time":{"secs":0,"nanos":380463},"total_time":{"secs":0,"nanos":464617208}},"pass":false,"entropy":4.623390757508302,"entropy_diff":4.637317678302111e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.at col1 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":66,"metadata":{"sampler_time":{"secs":0,"nanos":80991},"constraint_time":{"secs":0,"nanos":360258},"parser_time":{"secs":0,"nanos":418746},"transformer_time":{"secs":0,"nanos":372815662},"trie_time":{"secs":0,"nanos":406336},"total_time":{"secs":0,"nanos":499183750}},"pass":false,"entropy":4.623350288542788,"entropy_diff":0.00004046896551379575,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 (str.substr col2 1 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,365,1321,30,4103,1321,664,34,216,33,216,33,7754]}
{"generation":67,"metadata":{"sampler_time":{"secs":0,"nanos":85085},"constraint_time":{"secs":0,"nanos":409126},"parser_time":{"secs":0,"nanos":446715},"transformer_time":{"secs":0,"nanos":381807079},"trie_time":{"secs":0,"nanos":416703},"total_time":{"secs":0,"nanos":508018333}},"pass":false,"entropy":4.62334510730304,"entropy_diff":5.18123974835305e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 0 1) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,24842,11121]}
{"generation":68,"metadata":{"sampler_time":{"secs":0,"nanos":75003},"constraint_time":{"secs":0,"nanos":307620},"parser_time":{"secs":0,"nanos":493041},"transformer_time":{"secs":0,"nanos":385764916},"trie_time":{"secs":0,"nanos":421332},"total_time":{"secs":0,"nanos":510515792}},"pass":false,"entropy":4.623343777740242,"entropy_diff":1.3295627976361857e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 1 2) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,24842,11121]}
{"generation":69,"metadata":{"sampler_time":{"secs":0,"nanos":59713},"constraint_time":{"secs":0,"nanos":379834},"parser_time":{"secs":0,"nanos":391125},"transformer_time":{"secs":0,"nanos":297697002},"trie_time":{"secs":0,"nanos":414663},"total_time":{"secs":0,"nanos":396961625}},"pass":false,"entropy":4.623343141818136,"entropy_diff":6.359221060847631e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,476,24842,11121]}
{"generation":70,"metadata":{"sampler_time":{"secs":0,"nanos":101336},"constraint_time":{"secs":0,"nanos":405079},"parser_time":{"secs":0,"nanos":505828},"transformer_time":{"secs":0,"nanos":372739250},"trie_time":{"secs":0,"nanos":458914},"total_time":{"secs":0,"nanos":489145709}},"pass":false,"entropy":4.623340393473157,"entropy_diff":2.7483449791532166e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace (str.substr col1 0 1) \" \" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,42934,1292]}
{"generation":71,"metadata":{"sampler_time":{"secs":0,"nanos":111045},"constraint_time":{"secs":0,"nanos":739257},"parser_time":{"secs":0,"nanos":599667},"transformer_time":{"secs":0,"nanos":448672125},"trie_time":{"secs":0,"nanos":421805},"total_time":{"secs":0,"nanos":584902125}},"pass":false,"entropy":4.623319790808527,"entropy_diff":0.000020602664630331446,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":72,"metadata":{"sampler_time":{"secs":0,"nanos":110298},"constraint_time":{"secs":0,"nanos":523418},"parser_time":{"secs":0,"nanos":579045},"transformer_time":{"secs":0,"nanos":463903249},"trie_time":{"secs":0,"nanos":448754},"total_time":{"secs":0,"nanos":598613041}},"pass":false,"entropy":4.623317236372417,"entropy_diff":2.554436109747371e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":73,"metadata":{"sampler_time":{"secs":0,"nanos":117251},"constraint_time":{"secs":0,"nanos":571667},"parser_time":{"secs":0,"nanos":675497},"transformer_time":{"secs":0,"nanos":449206997},"trie_time":{"secs":0,"nanos":438241},"total_time":{"secs":0,"nanos":586322042}},"pass":false,"entropy":4.623316705882349,"entropy_diff":5.304900678737567e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof (str.replace col2 \" \" \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,365,1321,30,9630,664,34,476,476,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":74,"metadata":{"sampler_time":{"secs":0,"nanos":64045},"constraint_time":{"secs":0,"nanos":403998},"parser_time":{"secs":0,"nanos":471536},"transformer_time":{"secs":0,"nanos":381303166},"trie_time":{"secs":0,"nanos":467000},"total_time":{"secs":0,"nanos":493029125}},"pass":false,"entropy":4.6233122399781745,"entropy_diff":4.465904174466573e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,33,1292]}
{"generation":75,"metadata":{"sampler_time":{"secs":0,"nanos":99664},"constraint_time":{"secs":0,"nanos":536540},"parser_time":{"secs":0,"nanos":543743},"transformer_time":{"secs":0,"nanos":464714627},"trie_time":{"secs":0,"nanos":485426},"total_time":{"secs":0,"nanos":606206708}},"pass":false,"entropy":4.623311968853407,"entropy_diff":2.7112476796986584e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":76,"metadata":{"sampler_time":{"secs":0,"nanos":67411},"constraint_time":{"secs":0,"nanos":336206},"parser_time":{"secs":0,"nanos":479088},"transformer_time":{"secs":0,"nanos":383669211},"trie_time":{"secs":0,"nanos":489906},"total_time":{"secs":0,"nanos":504141042}},"pass":false,"entropy":4.62331177390107,"entropy_diff":1.94952336940446e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,216,33,1292]}
{"generation":77,"metadata":{"sampler_time":{"secs":0,"nanos":94544},"constraint_time":{"secs":0,"nanos":516792},"parser_time":{"secs":0,"nanos":586953},"transformer_time":{"secs":0,"nanos":456337290},"trie_time":{"secs":0,"nanos":496999},"total_time":{"secs":0,"nanos":599103042}},"pass":false,"entropy":4.623311594944068,"entropy_diff":1.7895700121783875e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,33,1292]}
{"generation":78,"metadata":{"sampler_time":{"secs":0,"nanos":104700},"constraint_time":{"secs":0,"nanos":565167},"parser_time":{"secs":0,"nanos":734670},"transformer_time":{"secs":0,"nanos":515274666},"trie_time":{"secs":0,"nanos":499418},"total_time":{"secs":0,"nanos":675572291}},"pass":false,"entropy":4.6233114463333616,"entropy_diff":1.4861070685157074e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col1 \" \" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":79,"metadata":{"sampler_time":{"secs":0,"nanos":105286},"constraint_time":{"secs":0,"nanos":684917},"parser_time":{"secs":0,"nanos":525163},"transformer_time":{"secs":0,"nanos":439803669},"trie_time":{"secs":0,"nanos":513464},"total_time":{"secs":0,"nanos":575322416}},"pass":false,"entropy":4.6233112522485955,"entropy_diff":1.9408476603643976e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,216,33,25,216,33,1292]}
{"generation":80,"metadata":{"sampler_time":{"secs":0,"nanos":83789},"constraint_time":{"secs":0,"nanos":306167},"parser_time":{"secs":0,"nanos":467874},"transformer_time":{"secs":0,"nanos":390747128},"trie_time":{"secs":0,"nanos":512005},"total_time":{"secs":0,"nanos":509053542}},"pass":false,"entropy":4.623310981017794,"entropy_diff":2.712308013741449e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"USA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,24842,18,216,33,25,216,33,1292]}
{"generation":81,"metadata":{"sampler_time":{"secs":0,"nanos":130963},"constraint_time":{"secs":0,"nanos":1347878},"parser_time":{"secs":0,"nanos":695630},"transformer_time":{"secs":0,"nanos":540522580},"trie_time":{"secs":0,"nanos":555892},"total_time":{"secs":0,"nanos":705970958}},"pass":false,"entropy":4.623310721533657,"entropy_diff":2.5948413728826836e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":82,"metadata":{"sampler_time":{"secs":0,"nanos":72132},"constraint_time":{"secs":0,"nanos":319663},"parser_time":{"secs":0,"nanos":417291},"transformer_time":{"secs":0,"nanos":381745998},"trie_time":{"secs":0,"nanos":626543},"total_time":{"secs":0,"nanos":502045209}},"pass":false,"entropy":4.623310617524777,"entropy_diff":1.0400887973105455e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292]}
{"generation":83,"metadata":{"sampler_time":{"secs":0,"nanos":131092},"constraint_time":{"secs":0,"nanos":1396249},"parser_time":{"secs":0,"nanos":713658},"transformer_time":{"secs":0,"nanos":515403123},"trie_time":{"secs":0,"nanos":593542},"total_time":{"secs":0,"nanos":689353042}},"pass":false,"entropy":4.623310232019474,"entropy_diff":3.8550530323533394e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":84,"metadata":{"sampler_time":{"secs":0,"nanos":100166},"constraint_time":{"secs":0,"nanos":355253},"parser_time":{"secs":0,"nanos":534500},"transformer_time":{"secs":0,"nanos":440156044},"trie_time":{"secs":0,"nanos":599660},"total_time":{"secs":0,"nanos":582640750}},"pass":false,"entropy":4.623310145232407,"entropy_diff":8.678706731046759e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":85,"metadata":{"sampler_time":{"secs":0,"nanos":70711},"constraint_time":{"secs":0,"nanos":401455},"parser_time":{"secs":0,"nanos":486879},"transformer_time":{"secs":0,"nanos":389015249},"trie_time":{"secs":0,"nanos":623127},"total_time":{"secs":0,"nanos":511368958}},"pass":false,"entropy":4.623309833057966,"entropy_diff":3.1217444096398594e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"PA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,4442,18,216,33,25,216,33,1292]}
{"generation":86,"metadata":{"sampler_time":{"secs":0,"nanos":51416},"constraint_time":{"secs":0,"nanos":317165},"parser_time":{"secs":0,"nanos":442543},"transformer_time":{"secs":0,"nanos":380916210},"trie_time":{"secs":0,"nanos":599787},"total_time":{"secs":0,"nanos":503377708}},"pass":false,"entropy":4.623309613455009,"entropy_diff":2.1960295626399784e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,25,216,33,1292]}
{"generation":87,"metadata":{"sampler_time":{"secs":0,"nanos":103909},"constraint_time":{"secs":0,"nanos":604666},"parser_time":{"secs":0,"nanos":572998},"transformer_time":{"secs":0,"nanos":466785002},"trie_time":{"secs":0,"nanos":622099},"total_time":{"secs":0,"nanos":617296625}},"pass":false,"entropy":4.62330921978986,"entropy_diff":3.9366514936745034e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":88,"metadata":{"sampler_time":{"secs":0,"nanos":99461},"constraint_time":{"secs":0,"nanos":561999},"parser_time":{"secs":0,"nanos":541992},"transformer_time":{"secs":0,"nanos":447987170},"trie_time":{"secs":0,"nanos":642002},"total_time":{"secs":0,"nanos":596083417}},"pass":false,"entropy":4.62330912257802,"entropy_diff":9.72118403552713e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":89,"metadata":{"sampler_time":{"secs":0,"nanos":104002},"constraint_time":{"secs":0,"nanos":521250},"parser_time":{"secs":0,"nanos":579834},"transformer_time":{"secs":0,"nanos":448476417},"trie_time":{"secs":0,"nanos":630210},"total_time":{"secs":0,"nanos":593041000}},"pass":false,"entropy":4.623309089814429,"entropy_diff":3.276359095139014e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,33,1292]}
{"generation":90,"metadata":{"sampler_time":{"secs":0,"nanos":67038},"constraint_time":{"secs":0,"nanos":526500},"parser_time":{"secs":0,"nanos":517455},"transformer_time":{"secs":0,"nanos":465447582},"trie_time":{"secs":0,"nanos":671583},"total_time":{"secs":0,"nanos":607908792}},"pass":false,"entropy":4.623309051110413,"entropy_diff":3.870401599215256e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":91,"metadata":{"sampler_time":{"secs":0,"nanos":119453},"constraint_time":{"secs":0,"nanos":441962},"parser_time":{"secs":0,"nanos":576869},"transformer_time":{"secs":0,"nanos":450683795},"trie_time":{"secs":0,"nanos":646380},"total_time":{"secs":0,"nanos":590077333}},"pass":false,"entropy":4.623308986634411,"entropy_diff":6.447600142678311e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":92,"metadata":{"sampler_time":{"secs":0,"nanos":129458},"constraint_time":{"secs":0,"nanos":601788},"parser_time":{"secs":0,"nanos":629159},"transformer_time":{"secs":0,"nanos":452018289},"trie_time":{"secs":0,"nanos":644639},"total_time":{"secs":0,"nanos":592587083}},"pass":false,"entropy":4.623308899808946,"entropy_diff":8.682546503990807e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":93,"metadata":{"sampler_time":{"secs":0,"nanos":77174},"constraint_time":{"secs":0,"nanos":418452},"parser_time":{"secs":0,"nanos":463207},"transformer_time":{"secs":0,"nanos":396234126},"trie_time":{"secs":0,"nanos":714542},"total_time":{"secs":0,"nanos":511855875}},"pass":false,"entropy":4.623308571948378,"entropy_diff":3.2786056802791563e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"USA\" \"PA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,24842,18,476,4442,18,216,33,25,216,33,1292]}
{"generation":94,"metadata":{"sampler_time":{"secs":0,"nanos":92292},"constraint_time":{"secs":0,"nanos":510590},"parser_time":{"secs":0,"nanos":558841},"transformer_time":{"secs":0,"nanos":439330711},"trie_time":{"secs":0,"nanos":669915},"total_time":{"secs":0,"nanos":575859208}},"pass":false,"entropy":4.6233082549456554,"entropy_diff":3.170027227383798e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.at col1 0) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,261,664,33,216,32,25,476,476,216,33,25,216,33,1292]}
{"generation":95,"metadata":{"sampler_time":{"secs":0,"nanos":113951},"constraint_time":{"secs":0,"nanos":441626},"parser_time":{"secs":0,"nanos":561796},"transformer_time":{"secs":0,"nanos":457026873},"trie_time":{"secs":0,"nanos":699792},"total_time":{"secs":0,"nanos":605140792}},"pass":false,"entropy":4.623308026737977,"entropy_diff":2.2820767853204416e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,33,1292]}
{"generation":96,"metadata":{"sampler_time":{"secs":0,"nanos":112536},"constraint_time":{"secs":0,"nanos":988624},"parser_time":{"secs":0,"nanos":643543},"transformer_time":{"secs":0,"nanos":507487705},"trie_time":{"secs":0,"nanos":734426},"total_time":{"secs":0,"nanos":669717208}},"pass":false,"entropy":4.623308013514238,"entropy_diff":1.3223738548617803e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":97,"metadata":{"sampler_time":{"secs":0,"nanos":91590},"constraint_time":{"secs":0,"nanos":635253},"parser_time":{"secs":0,"nanos":568331},"transformer_time":{"secs":0,"nanos":458492291},"trie_time":{"secs":0,"nanos":750671},"total_time":{"secs":0,"nanos":603532167}},"pass":false,"entropy":4.623308004058294,"entropy_diff":9.45594447188114e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,33,1292]}
{"generation":98,"metadata":{"sampler_time":{"secs":0,"nanos":90787},"constraint_time":{"secs":0,"nanos":659586},"parser_time":{"secs":0,"nanos":572087},"transformer_time":{"secs":0,"nanos":456027419},"trie_time":{"secs":0,"nanos":753791},"total_time":{"secs":0,"nanos":600897666}},"pass":false,"entropy":4.623308001752685,"entropy_diff":2.3056090370232596e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,33,1292]}
{"generation":99,"metadata":{"sampler_time":{"secs":0,"nanos":121458},"constraint_time":{"secs":0,"nanos":603297},"parser_time":{"secs":0,"nanos":701174},"transformer_time":{"secs":0,"nanos":524425039},"trie_time":{"secs":0,"nanos":754544},"total_time":{"secs":0,"nanos":698845542}},"pass":false,"entropy":4.6233079999412725,"entropy_diff":1.8114123534473947e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,216,33,1292]}
{"generation":100,"metadata":{"sampler_time":{"secs":0,"nanos":101914},"constraint_time":{"secs":0,"nanos":591756},"parser_time":{"secs":0,"nanos":596921},"transformer_time":{"secs":0,"nanos":450981122},"trie_time":{"secs":0,"nanos":782292},"total_time":{"secs":0,"nanos":594476875}},"pass":false,"entropy":4.623307994458906,"entropy_diff":5.482366560727314e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,33,1292]}
{"generation":101,"metadata":{"sampler_time":{"secs":0,"nanos":120081},"constraint_time":{"secs":0,"nanos":1143913},"parser_time":{"secs":0,"nanos":719289},"transformer_time":{"secs":0,"nanos":532259211},"trie_time":{"secs":0,"nanos":787005},"total_time":{"secs":0,"nanos":710077834}},"pass":false,"entropy":4.623307983271466,"entropy_diff":1.1187440307480756e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":102,"metadata":{"sampler_time":{"secs":0,"nanos":70993},"constraint_time":{"secs":0,"nanos":337330},"parser_time":{"secs":0,"nanos":511793},"transformer_time":{"secs":0,"nanos":383475000},"trie_time":{"secs":0,"nanos":753874},"total_time":{"secs":0,"nanos":504134625}},"pass":false,"entropy":4.623307975463142,"entropy_diff":7.808323765345904e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,34,1292]}
{"generation":103,"metadata":{"sampler_time":{"secs":0,"nanos":109122},"constraint_time":{"secs":0,"nanos":510627},"parser_time":{"secs":0,"nanos":560255},"transformer_time":{"secs":0,"nanos":433218333},"trie_time":{"secs":0,"nanos":972215},"total_time":{"secs":0,"nanos":572260625}},"pass":false,"entropy":4.623307929792089,"entropy_diff":4.567105271746641e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,33,25,216,33,25,216,33,1292]}
{"generation":104,"metadata":{"sampler_time":{"secs":0,"nanos":101333},"constraint_time":{"secs":0,"nanos":392458},"parser_time":{"secs":0,"nanos":394829},"transformer_time":{"secs":0,"nanos":373291627},"trie_time":{"secs":0,"nanos":760955},"total_time":{"secs":0,"nanos":492148709}},"pass":false,"entropy":4.623307903951004,"entropy_diff":2.58410848275048e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,32,25,216,33,1292]}
{"generation":105,"metadata":{"sampler_time":{"secs":0,"nanos":104872},"constraint_time":{"secs":0,"nanos":528619},"parser_time":{"secs":0,"nanos":595873},"transformer_time":{"secs":0,"nanos":464389751},"trie_time":{"secs":0,"nanos":739623},"total_time":{"secs":0,"nanos":612816292}},"pass":false,"entropy":4.623307862181864,"entropy_diff":4.176914014664135e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,216,33,25,216,33,1292]}
{"generation":106,"metadata":{"sampler_time":{"secs":0,"nanos":132464},"constraint_time":{"secs":0,"nanos":611753},"parser_time":{"secs":0,"nanos":769951},"transformer_time":{"secs":0,"nanos":592781329},"trie_time":{"secs":0,"nanos":797830},"total_time":{"secs":0,"nanos":784757667}},"pass":false,"entropy":4.623307853023072,"entropy_diff":9.158791947072586e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":107,"metadata":{"sampler_time":{"secs":0,"nanos":101715},"constraint_time":{"secs":0,"nanos":694462},"parser_time":{"secs":0,"nanos":596960},"transformer_time":{"secs":0,"nanos":440423418},"trie_time":{"secs":0,"nanos":817791},"total_time":{"secs":0,"nanos":583670833}},"pass":false,"entropy":4.623307851072555,"entropy_diff":1.950517081183989e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,476,20361,216,33,25,216,33,1292]}
{"generation":108,"metadata":{"sampler_time":{"secs":0,"nanos":95423},"constraint_time":{"secs":0,"nanos":419581},"parser_time":{"secs":0,"nanos":454289},"transformer_time":{"secs":0,"nanos":383162542},"trie_time":{"secs":0,"nanos":787078},"total_time":{"secs":0,"nanos":502302625}},"pass":false,"entropy":4.623307843635369,"entropy_diff":7.4371859781763305e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,32,1292]}
{"generation":109,"metadata":{"sampler_time":{"secs":0,"nanos":125379},"constraint_time":{"secs":0,"nanos":449083},"parser_time":{"secs":0,"nanos":529587},"transformer_time":{"secs":0,"nanos":464253331},"trie_time":{"secs":0,"nanos":807704},"total_time":{"secs":0,"nanos":606195375}},"pass":false,"entropy":4.6233078237240885,"entropy_diff":1.9911280624285155e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":110,"metadata":{"sampler_time":{"secs":0,"nanos":97707},"constraint_time":{"secs":0,"nanos":416380},"parser_time":{"secs":0,"nanos":518372},"transformer_time":{"secs":0,"nanos":380408379},"trie_time":{"secs":0,"nanos":748713},"total_time":{"secs":0,"nanos":496549209}},"pass":false,"entropy":4.623307814500307,"entropy_diff":9.223781738398884e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,33,25,216,33,1292]}
{"generation":111,"metadata":{"sampler_time":{"secs":0,"nanos":90454},"constraint_time":{"secs":0,"nanos":385962},"parser_time":{"secs":0,"nanos":422967},"transformer_time":{"secs":0,"nanos":381278207},"trie_time":{"secs":0,"nanos":758204},"total_time":{"secs":0,"nanos":498210958}},"pass":false,"entropy":4.623307652988271,"entropy_diff":1.6151203574565898e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,32,25,216,33,1292]}
{"generation":112,"metadata":{"sampler_time":{"secs":0,"nanos":150500},"constraint_time":{"secs":0,"nanos":582625},"parser_time":{"secs":0,"nanos":643202},"transformer_time":{"secs":0,"nanos":448792999},"trie_time":{"secs":0,"nanos":742370},"total_time":{"secs":0,"nanos":590265125}},"pass":false,"entropy":4.623307608447226,"entropy_diff":4.454104463036401e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 \" \" \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,476,476,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":113,"metadata":{"sampler_time":{"secs":0,"nanos":83499},"constraint_time":{"secs":0,"nanos":819750},"parser_time":{"secs":0,"nanos":528374},"transformer_time":{"secs":0,"nanos":456346750},"trie_time":{"secs":0,"nanos":848624},"total_time":{"secs":0,"nanos":601124416}},"pass":false,"entropy":4.6233074080558225,"entropy_diff":2.0039140391503452e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,33,1292]}
{"generation":114,"metadata":{"sampler_time":{"secs":0,"nanos":83294},"constraint_time":{"secs":0,"nanos":544463},"parser_time":{"secs":0,"nanos":561752},"transformer_time":{"secs":0,"nanos":445291875},"trie_time":{"secs":0,"nanos":932378},"total_time":{"secs":0,"nanos":592616084}},"pass":false,"entropy":4.623307407329969,"entropy_diff":7.258531553588909e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,216,33,1292]}
{"generation":115,"metadata":{"sampler_time":{"secs":0,"nanos":92040},"constraint_time":{"secs":0,"nanos":534792},"parser_time":{"secs":0,"nanos":571043},"transformer_time":{"secs":0,"nanos":458270123},"trie_time":{"secs":0,"nanos":901917},"total_time":{"secs":0,"nanos":613802750}},"pass":false,"entropy":4.623307405287282,"entropy_diff":2.0426877966883694e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,216,33,1292]}
{"generation":116,"metadata":{"sampler_time":{"secs":0,"nanos":104924},"constraint_time":{"secs":0,"nanos":636668},"parser_time":{"secs":0,"nanos":800166},"transformer_time":{"secs":0,"nanos":600759958},"trie_time":{"secs":0,"nanos":880037},"total_time":{"secs":0,"nanos":801230500}},"pass":false,"entropy":4.623307404736879,"entropy_diff":5.504023903313282e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":117,"metadata":{"sampler_time":{"secs":0,"nanos":60961},"constraint_time":{"secs":0,"nanos":625875},"parser_time":{"secs":0,"nanos":594793},"transformer_time":{"secs":0,"nanos":458029332},"trie_time":{"secs":0,"nanos":930211},"total_time":{"secs":0,"nanos":608931709}},"pass":false,"entropy":4.623307404392213,"entropy_diff":3.446665175488306e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,32,1292]}
{"generation":118,"metadata":{"sampler_time":{"secs":0,"nanos":124207},"constraint_time":{"secs":0,"nanos":537211},"parser_time":{"secs":0,"nanos":790096},"transformer_time":{"secs":0,"nanos":592742501},"trie_time":{"secs":0,"nanos":911954},"total_time":{"secs":0,"nanos":786847208}},"pass":false,"entropy":4.6233074042394104,"entropy_diff":1.5280221532520954e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col1 (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":119,"metadata":{"sampler_time":{"secs":0,"nanos":65581},"constraint_time":{"secs":0,"nanos":531743},"parser_time":{"secs":0,"nanos":580538},"transformer_time":{"secs":0,"nanos":456867994},"trie_time":{"secs":0,"nanos":946838},"total_time":{"secs":0,"nanos":606212000}},"pass":false,"entropy":4.623307403868019,"entropy_diff":3.7139180619760737e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,34,1292]}
{"generation":120,"metadata":{"sampler_time":{"secs":0,"nanos":146251},"constraint_time":{"secs":0,"nanos":729748},"parser_time":{"secs":0,"nanos":885836},"transformer_time":{"secs":0,"nanos":667871245},"trie_time":{"secs":0,"nanos":915618},"total_time":{"secs":0,"nanos":891469792}},"pass":false,"entropy":4.623307403717984,"entropy_diff":1.5003465136942395e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":121,"metadata":{"sampler_time":{"secs":0,"nanos":113296},"constraint_time":{"secs":0,"nanos":657830},"parser_time":{"secs":0,"nanos":695338},"transformer_time":{"secs":0,"nanos":524780459},"trie_time":{"secs":0,"nanos":982243},"total_time":{"secs":0,"nanos":697585167}},"pass":false,"entropy":4.623307403620555,"entropy_diff":9.742873174900524e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":122,"metadata":{"sampler_time":{"secs":0,"nanos":140371},"constraint_time":{"secs":0,"nanos":1171252},"parser_time":{"secs":0,"nanos":741584},"transformer_time":{"secs":0,"nanos":533978710},"trie_time":{"secs":0,"nanos":956208},"total_time":{"secs":0,"nanos":709245292}},"pass":false,"entropy":4.623307403525645,"entropy_diff":9.490985775073568e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,33,25,216,33,1292]}
{"generation":123,"metadata":{"sampler_time":{"secs":0,"nanos":120380},"constraint_time":{"secs":0,"nanos":619045},"parser_time":{"secs":0,"nanos":589118},"transformer_time":{"secs":0,"nanos":465345205},"trie_time":{"secs":0,"nanos":990711},"total_time":{"secs":0,"nanos":612406042}},"pass":false,"entropy":4.623307402939027,"entropy_diff":5.866187535730205e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":124,"metadata":{"sampler_time":{"secs":0,"nanos":139418},"constraint_time":{"secs":0,"nanos":586294},"parser_time":{"secs":0,"nanos":654576},"transformer_time":{"secs":0,"nanos":507446540},"trie_time":{"secs":0,"nanos":938046},"total_time":{"secs":0,"nanos":671345000}},"pass":false,"entropy":4.6233073992281035,"entropy_diff":3.710923124344845e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.at col1 0)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,261,664,33,216,32,1292,216,33,25,216,33,1292]}
{"generation":125,"metadata":{"sampler_time":{"secs":0,"nanos":74955},"constraint_time":{"secs":0,"nanos":598869},"parser_time":{"secs":0,"nanos":607121},"transformer_time":{"secs":0,"nanos":448231790},"trie_time":{"secs":0,"nanos":947915},"total_time":{"secs":0,"nanos":587852875}},"pass":false,"entropy":4.623307398874673,"entropy_diff":3.5343017401601173e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,32,25,216,33,1292]}
{"generation":126,"metadata":{"sampler_time":{"secs":0,"nanos":148663},"constraint_time":{"secs":0,"nanos":610673},"parser_time":{"secs":0,"nanos":649506},"transformer_time":{"secs":0,"nanos":599038622},"trie_time":{"secs":0,"nanos":956712},"total_time":{"secs":0,"nanos":784374625}},"pass":false,"entropy":4.623307398387553,"entropy_diff":4.87120566106114e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":127,"metadata":{"sampler_time":{"secs":0,"nanos":193041},"constraint_time":{"secs":0,"nanos":634865},"parser_time":{"secs":0,"nanos":741744},"transformer_time":{"secs":0,"nanos":583951419},"trie_time":{"secs":0,"nanos":959829},"total_time":{"secs":0,"nanos":767182792}},"pass":false,"entropy":4.623307398316529,"entropy_diff":7.102407550974021e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":128,"metadata":{"sampler_time":{"secs":0,"nanos":118962},"constraint_time":{"secs":0,"nanos":573046},"parser_time":{"secs":0,"nanos":667792},"transformer_time":{"secs":0,"nanos":601054625},"trie_time":{"secs":0,"nanos":1003964},"total_time":{"secs":0,"nanos":784907167}},"pass":false,"entropy":4.6233073981608035,"entropy_diff":1.5572521050444266e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 (str.replace col2 col2 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,33,7754]}
{"generation":129,"metadata":{"sampler_time":{"secs":0,"nanos":86041},"constraint_time":{"secs":0,"nanos":1137210},"parser_time":{"secs":0,"nanos":634373},"transformer_time":{"secs":0,"nanos":532772875},"trie_time":{"secs":0,"nanos":1016833},"total_time":{"secs":0,"nanos":696639458}},"pass":false,"entropy":4.623307398041927,"entropy_diff":1.1887646422792386e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":130,"metadata":{"sampler_time":{"secs":0,"nanos":54050},"constraint_time":{"secs":0,"nanos":733748},"parser_time":{"secs":0,"nanos":483217},"transformer_time":{"secs":0,"nanos":445586871},"trie_time":{"secs":0,"nanos":1022967},"total_time":{"secs":0,"nanos":593576833}},"pass":false,"entropy":4.623307397197791,"entropy_diff":8.441363164024551e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,216,33,1292]}
{"generation":131,"metadata":{"sampler_time":{"secs":0,"nanos":68840},"constraint_time":{"secs":0,"nanos":583664},"parser_time":{"secs":0,"nanos":534848},"transformer_time":{"secs":0,"nanos":448448127},"trie_time":{"secs":0,"nanos":1001580},"total_time":{"secs":0,"nanos":599977833}},"pass":false,"entropy":4.62330739699968,"entropy_diff":1.9811086104937203e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,216,33,1292]}
{"generation":132,"metadata":{"sampler_time":{"secs":0,"nanos":164952},"constraint_time":{"secs":0,"nanos":611878},"parser_time":{"secs":0,"nanos":1048340},"transformer_time":{"secs":0,"nanos":651127338},"trie_time":{"secs":0,"nanos":979380},"total_time":{"secs":0,"nanos":864367166}},"pass":false,"entropy":4.623307396627822,"entropy_diff":3.7185809986794993e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.indexof col1 \" \" 1) 1)) (str.indexof col1 \" \" (+ (str.indexof col1 \" \" 1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,38799]}
{"generation":133,"metadata":{"sampler_time":{"secs":0,"nanos":103583},"constraint_time":{"secs":0,"nanos":550032},"parser_time":{"secs":0,"nanos":701790},"transformer_time":{"secs":0,"nanos":524151789},"trie_time":{"secs":0,"nanos":1115073},"total_time":{"secs":0,"nanos":694178208}},"pass":false,"entropy":4.623307371061383,"entropy_diff":2.556643874385145e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,1292,216,33,1292]}
{"generation":134,"metadata":{"sampler_time":{"secs":0,"nanos":113835},"constraint_time":{"secs":0,"nanos":654125},"parser_time":{"secs":0,"nanos":678674},"transformer_time":{"secs":0,"nanos":524345501},"trie_time":{"secs":0,"nanos":1104326},"total_time":{"secs":0,"nanos":695980500}},"pass":false,"entropy":4.623307371037141,"entropy_diff":2.4241941787295218e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col2 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,34,216,33,1292,216,33,1292]}
{"generation":135,"metadata":{"sampler_time":{"secs":0,"nanos":106918},"constraint_time":{"secs":0,"nanos":526001},"parser_time":{"secs":0,"nanos":629249},"transformer_time":{"secs":0,"nanos":463281001},"trie_time":{"secs":0,"nanos":1131160},"total_time":{"secs":0,"nanos":614431750}},"pass":false,"entropy":4.623307371022675,"entropy_diff":1.446576192165594e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,34,1292]}
{"generation":136,"metadata":{"sampler_time":{"secs":0,"nanos":130836},"constraint_time":{"secs":0,"nanos":701287},"parser_time":{"secs":0,"nanos":987669},"transformer_time":{"secs":0,"nanos":675196665},"trie_time":{"secs":0,"nanos":1146327},"total_time":{"secs":0,"nanos":893521250}},"pass":false,"entropy":4.623307370986082,"entropy_diff":3.659295089164516e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":137,"metadata":{"sampler_time":{"secs":0,"nanos":108124},"constraint_time":{"secs":0,"nanos":741996},"parser_time":{"secs":0,"nanos":718632},"transformer_time":{"secs":0,"nanos":557958871},"trie_time":{"secs":0,"nanos":1140669},"total_time":{"secs":0,"nanos":740648875}},"pass":false,"entropy":4.623307370978004,"entropy_diff":8.077982727172639e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (- (str.indexof col1 col1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":138,"metadata":{"sampler_time":{"secs":0,"nanos":111381},"constraint_time":{"secs":0,"nanos":626548},"parser_time":{"secs":0,"nanos":692584},"transformer_time":{"secs":0,"nanos":534495250},"trie_time":{"secs":0,"nanos":1149664},"total_time":{"secs":0,"nanos":708978458}},"pass":false,"entropy":4.623307370900099,"entropy_diff":7.790568190557678e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,1292,216,33,25,216,33,1292]}
{"generation":139,"metadata":{"sampler_time":{"secs":0,"nanos":104916},"constraint_time":{"secs":0,"nanos":721418},"parser_time":{"secs":0,"nanos":651624},"transformer_time":{"secs":0,"nanos":464742625},"trie_time":{"secs":0,"nanos":1156459},"total_time":{"secs":0,"nanos":614592334}},"pass":false,"entropy":4.623307370592698,"entropy_diff":3.0740032741505274e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"PA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,4442,1715,216,33,25,216,33,1292]}
{"generation":140,"metadata":{"sampler_time":{"secs":0,"nanos":82467},"constraint_time":{"secs":0,"nanos":1023380},"parser_time":{"secs":0,"nanos":664577},"transformer_time":{"secs":0,"nanos":539361870},"trie_time":{"secs":0,"nanos":1089542},"total_time":{"secs":0,"nanos":709564875}},"pass":false,"entropy":4.623307369923911,"entropy_diff":6.687876918931579e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":141,"metadata":{"sampler_time":{"secs":0,"nanos":127250},"constraint_time":{"secs":0,"nanos":599754},"parser_time":{"secs":0,"nanos":826035},"transformer_time":{"secs":0,"nanos":588207038},"trie_time":{"secs":0,"nanos":1274337},"total_time":{"secs":0,"nanos":779414583}},"pass":false,"entropy":4.623307364058907,"entropy_diff":5.865003593896745e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) (str.indexof col2 (str.replace col2 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,216,33,7754]}
{"generation":142,"metadata":{"sampler_time":{"secs":0,"nanos":131199},"constraint_time":{"secs":0,"nanos":1259249},"parser_time":{"secs":0,"nanos":689911},"transformer_time":{"secs":0,"nanos":514817210},"trie_time":{"secs":0,"nanos":1188710},"total_time":{"secs":0,"nanos":675613709}},"pass":false,"entropy":4.62330736390043,"entropy_diff":1.5847678724867365e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace (str.at col1 0) \" \" \"USA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,365,1321,30,261,664,33,216,32,25,476,476,476,24842,1715,216,33,25,216,33,1292]}
{"generation":143,"metadata":{"sampler_time":{"secs":0,"nanos":97792},"constraint_time":{"secs":0,"nanos":376039},"parser_time":{"secs":0,"nanos":432052},"transformer_time":{"secs":0,"nanos":372936960},"trie_time":{"secs":0,"nanos":1055242},"total_time":{"secs":0,"nanos":485247250}},"pass":false,"entropy":4.623307354352501,"entropy_diff":9.547929558095802e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,33,216,33,25,216,33,1292]}
{"generation":144,"metadata":{"sampler_time":{"secs":0,"nanos":111998},"constraint_time":{"secs":0,"nanos":436998},"parser_time":{"secs":0,"nanos":624206},"transformer_time":{"secs":0,"nanos":460271707},"trie_time":{"secs":0,"nanos":949748},"total_time":{"secs":0,"nanos":599881500}},"pass":false,"entropy":4.623307148518292,"entropy_diff":2.0583420834441313e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,24842,11121]}
{"generation":145,"metadata":{"sampler_time":{"secs":0,"nanos":83290},"constraint_time":{"secs":0,"nanos":312413},"parser_time":{"secs":0,"nanos":307041},"transformer_time":{"secs":0,"nanos":304349210},"trie_time":{"secs":0,"nanos":1062957},"total_time":{"secs":0,"nanos":399198542}},"pass":false,"entropy":4.623306100566227,"entropy_diff":1.0479520655692909e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,32,1292]}
{"generation":146,"metadata":{"sampler_time":{"secs":0,"nanos":67331},"constraint_time":{"secs":0,"nanos":261461},"parser_time":{"secs":0,"nanos":398632},"transformer_time":{"secs":0,"nanos":295653543},"trie_time":{"secs":0,"nanos":960786},"total_time":{"secs":0,"nanos":390335000}},"pass":false,"entropy":4.623304261947593,"entropy_diff":1.8386186342311817e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col2 col1 \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,33,476,24842,11121]}
{"generation":147,"metadata":{"sampler_time":{"secs":0,"nanos":99956},"constraint_time":{"secs":0,"nanos":256749},"parser_time":{"secs":0,"nanos":337376},"transformer_time":{"secs":0,"nanos":303838125},"trie_time":{"secs":0,"nanos":1019752},"total_time":{"secs":0,"nanos":398781833}},"pass":false,"entropy":4.623301537289725,"entropy_diff":2.724657867325675e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 0 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,32,216,34,1292]}
{"generation":148,"metadata":{"sampler_time":{"secs":0,"nanos":109706},"constraint_time":{"secs":0,"nanos":350123},"parser_time":{"secs":0,"nanos":325327},"transformer_time":{"secs":0,"nanos":370260212},"trie_time":{"secs":0,"nanos":1178871},"total_time":{"secs":0,"nanos":482976209}},"pass":false,"entropy":4.623299316060747,"entropy_diff":2.2212289785272787e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,34,25,216,33,1292]}
{"generation":149,"metadata":{"sampler_time":{"secs":0,"nanos":139329},"constraint_time":{"secs":0,"nanos":586296},"parser_time":{"secs":0,"nanos":583950},"transformer_time":{"secs":0,"nanos":504600583},"trie_time":{"secs":0,"nanos":1236798},"total_time":{"secs":0,"nanos":670095750}},"pass":false,"entropy":4.623299286001736,"entropy_diff":3.005901039188075e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":150,"metadata":{"sampler_time":{"secs":0,"nanos":123334},"constraint_time":{"secs":0,"nanos":374332},"parser_time":{"secs":0,"nanos":426252},"transformer_time":{"secs":0,"nanos":386961625},"trie_time":{"secs":0,"nanos":1192917},"total_time":{"secs":0,"nanos":510543292}},"pass":false,"entropy":4.623299271311984,"entropy_diff":1.4689752525498534e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"CA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,8970,18,216,33,25,216,33,1292]}
{"generation":151,"metadata":{"sampler_time":{"secs":0,"nanos":120878},"constraint_time":{"secs":0,"nanos":390209},"parser_time":{"secs":0,"nanos":458008},"transformer_time":{"secs":0,"nanos":363916458},"trie_time":{"secs":0,"nanos":996945},"total_time":{"secs":0,"nanos":491313166}},"pass":false,"entropy":4.623299249277093,"entropy_diff":2.2034891244970822e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.replace col1 col2 \" \") \"PA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,20361,476,4442,11121]}
{"generation":152,"metadata":{"sampler_time":{"secs":0,"nanos":107240},"constraint_time":{"secs":0,"nanos":318628},"parser_time":{"secs":0,"nanos":386661},"transformer_time":{"secs":0,"nanos":382334667},"trie_time":{"secs":0,"nanos":1180752},"total_time":{"secs":0,"nanos":503992917}},"pass":false,"entropy":4.623298230734531,"entropy_diff":1.01854256140399e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,34,216,33,25,216,33,1292]}
{"generation":153,"metadata":{"sampler_time":{"secs":0,"nanos":66293},"constraint_time":{"secs":0,"nanos":585756},"parser_time":{"secs":0,"nanos":451040},"transformer_time":{"secs":0,"nanos":387204705},"trie_time":{"secs":0,"nanos":1259709},"total_time":{"secs":0,"nanos":510762542}},"pass":false,"entropy":4.62329816993189,"entropy_diff":6.080264114416423e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"USA\" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,24842,18,664,34,216,33,25,216,33,1292]}
{"generation":154,"metadata":{"sampler_time":{"secs":0,"nanos":135963},"constraint_time":{"secs":0,"nanos":326830},"parser_time":{"secs":0,"nanos":531244},"transformer_time":{"secs":0,"nanos":446330417},"trie_time":{"secs":0,"nanos":1236884},"total_time":{"secs":0,"nanos":594245542}},"pass":false,"entropy":4.623298095474144,"entropy_diff":7.445774574676989e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":155,"metadata":{"sampler_time":{"secs":0,"nanos":103754},"constraint_time":{"secs":0,"nanos":1030171},"parser_time":{"secs":0,"nanos":650834},"transformer_time":{"secs":0,"nanos":539571711},"trie_time":{"secs":0,"nanos":1257257},"total_time":{"secs":0,"nanos":713600083}},"pass":false,"entropy":4.62329807093135,"entropy_diff":2.454279446340024e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":156,"metadata":{"sampler_time":{"secs":0,"nanos":103464},"constraint_time":{"secs":0,"nanos":632707},"parser_time":{"secs":0,"nanos":589457},"transformer_time":{"secs":0,"nanos":463886334},"trie_time":{"secs":0,"nanos":1298878},"total_time":{"secs":0,"nanos":614497083}},"pass":false,"entropy":4.623298067833995,"entropy_diff":3.0973543729828634e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,216,33,25,216,33,1292]}
{"generation":157,"metadata":{"sampler_time":{"secs":0,"nanos":98960},"constraint_time":{"secs":0,"nanos":1419037},"parser_time":{"secs":0,"nanos":715714},"transformer_time":{"secs":0,"nanos":539684414},"trie_time":{"secs":0,"nanos":1299459},"total_time":{"secs":0,"nanos":713010750}},"pass":false,"entropy":4.6232980669842005,"entropy_diff":8.497949011143646e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof \" \" \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":158,"metadata":{"sampler_time":{"secs":0,"nanos":80293},"constraint_time":{"secs":0,"nanos":886954},"parser_time":{"secs":0,"nanos":516829},"transformer_time":{"secs":0,"nanos":465301914},"trie_time":{"secs":0,"nanos":1277415},"total_time":{"secs":0,"nanos":615451417}},"pass":false,"entropy":4.623298065342135,"entropy_diff":1.6420651505200112e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,216,33,25,216,33,1292]}
{"generation":159,"metadata":{"sampler_time":{"secs":0,"nanos":78084},"constraint_time":{"secs":0,"nanos":1133667},"parser_time":{"secs":0,"nanos":752375},"transformer_time":{"secs":0,"nanos":515937960},"trie_time":{"secs":0,"nanos":1337709},"total_time":{"secs":0,"nanos":693234416}},"pass":false,"entropy":4.62329806456433,"entropy_diff":7.778053756624104e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":160,"metadata":{"sampler_time":{"secs":0,"nanos":77082},"constraint_time":{"secs":0,"nanos":589129},"parser_time":{"secs":0,"nanos":596119},"transformer_time":{"secs":0,"nanos":464286881},"trie_time":{"secs":0,"nanos":2073913},"total_time":{"secs":0,"nanos":620493709}},"pass":false,"entropy":4.623298064327345,"entropy_diff":2.369846541228071e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,34,1292]}
{"generation":161,"metadata":{"sampler_time":{"secs":0,"nanos":57709},"constraint_time":{"secs":0,"nanos":582463},"parser_time":{"secs":0,"nanos":575763},"transformer_time":{"secs":0,"nanos":465028669},"trie_time":{"secs":0,"nanos":1377088},"total_time":{"secs":0,"nanos":614251292}},"pass":false,"entropy":4.623298064281522,"entropy_diff":4.582378920758856e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,32,25,216,33,1292]}
{"generation":162,"metadata":{"sampler_time":{"secs":0,"nanos":55585},"constraint_time":{"secs":0,"nanos":570117},"parser_time":{"secs":0,"nanos":587168},"transformer_time":{"secs":0,"nanos":479526667},"trie_time":{"secs":0,"nanos":1349669},"total_time":{"secs":0,"nanos":627169083}},"pass":false,"entropy":4.623298064111291,"entropy_diff":1.702309404549851e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,34,216,33,25,216,33,25,216,33,1292]}
{"generation":163,"metadata":{"sampler_time":{"secs":0,"nanos":50083},"constraint_time":{"secs":0,"nanos":541454},"parser_time":{"secs":0,"nanos":504866},"transformer_time":{"secs":0,"nanos":454538792},"trie_time":{"secs":0,"nanos":1521083},"total_time":{"secs":0,"nanos":599497459}},"pass":false,"entropy":4.623298061389752,"entropy_diff":2.7215385500767297e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,34,25,216,33,1292]}
{"generation":164,"metadata":{"sampler_time":{"secs":0,"nanos":138883},"constraint_time":{"secs":0,"nanos":2408572},"parser_time":{"secs":0,"nanos":1202997},"transformer_time":{"secs":0,"nanos":798709790},"trie_time":{"secs":0,"nanos":1481007},"total_time":{"secs":1,"nanos":32855791}},"pass":false,"entropy":4.623298061229186,"entropy_diff":1.6056578289180834e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace \"USA\" \"PA\" \"CT\") \"CA\") 1) (str.indexof col1 (str.replace col1 (str.replace \"USA\" \"PA\" \"MD\") \"NY\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,476,24842,18,476,4442,18,476,5335,1715,476,8970,1715,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,476,24842,18,476,4442,18,476,9815,1715,476,30513,1715,216,33,7754]}
{"generation":165,"metadata":{"sampler_time":{"secs":0,"nanos":68035},"constraint_time":{"secs":0,"nanos":692674},"parser_time":{"secs":0,"nanos":530922},"transformer_time":{"secs":0,"nanos":455483211},"trie_time":{"secs":0,"nanos":1439920},"total_time":{"secs":0,"nanos":593029542}},"pass":false,"entropy":4.623298060767442,"entropy_diff":4.617444204768617e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":166,"metadata":{"sampler_time":{"secs":0,"nanos":107664},"constraint_time":{"secs":0,"nanos":645289},"parser_time":{"secs":0,"nanos":584921},"transformer_time":{"secs":0,"nanos":473861999},"trie_time":{"secs":0,"nanos":1324294},"total_time":{"secs":0,"nanos":616253542}},"pass":false,"entropy":4.623298057402646,"entropy_diff":3.3647955532956075e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":167,"metadata":{"sampler_time":{"secs":0,"nanos":105623},"constraint_time":{"secs":0,"nanos":736996},"parser_time":{"secs":0,"nanos":792589},"transformer_time":{"secs":0,"nanos":561266292},"trie_time":{"secs":0,"nanos":1512991},"total_time":{"secs":0,"nanos":766400000}},"pass":false,"entropy":4.623298005343318,"entropy_diff":5.205932840368632e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":168,"metadata":{"sampler_time":{"secs":0,"nanos":107668},"constraint_time":{"secs":0,"nanos":742791},"parser_time":{"secs":0,"nanos":584663},"transformer_time":{"secs":0,"nanos":495930299},"trie_time":{"secs":0,"nanos":1771457},"total_time":{"secs":0,"nanos":657597542}},"pass":false,"entropy":4.623298004715959,"entropy_diff":6.273586095062456e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (+ 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,30425,216,33,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":169,"metadata":{"sampler_time":{"secs":0,"nanos":98961},"constraint_time":{"secs":0,"nanos":750875},"parser_time":{"secs":0,"nanos":613884},"transformer_time":{"secs":0,"nanos":509824211},"trie_time":{"secs":0,"nanos":1494247},"total_time":{"secs":0,"nanos":660175083}},"pass":false,"entropy":4.623298003378174,"entropy_diff":1.337784993893365e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":170,"metadata":{"sampler_time":{"secs":0,"nanos":165630},"constraint_time":{"secs":0,"nanos":799960},"parser_time":{"secs":0,"nanos":735418},"transformer_time":{"secs":0,"nanos":590944958},"trie_time":{"secs":0,"nanos":1675159},"total_time":{"secs":0,"nanos":787714583}},"pass":false,"entropy":4.623298002813451,"entropy_diff":5.64723379170573e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) (str.indexof col2 (str.replace col2 col2 col1) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,34,7754]}
{"generation":171,"metadata":{"sampler_time":{"secs":0,"nanos":115458},"constraint_time":{"secs":0,"nanos":615501},"parser_time":{"secs":0,"nanos":524757},"transformer_time":{"secs":0,"nanos":458694084},"trie_time":{"secs":0,"nanos":1634415},"total_time":{"secs":0,"nanos":605311709}},"pass":false,"entropy":4.623298002775966,"entropy_diff":3.7484682025024085e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"USA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,24842,1715,216,33,25,216,33,1292]}
{"generation":172,"metadata":{"sampler_time":{"secs":0,"nanos":93375},"constraint_time":{"secs":0,"nanos":416710},"parser_time":{"secs":0,"nanos":585203},"transformer_time":{"secs":0,"nanos":438335292},"trie_time":{"secs":0,"nanos":1467710},"total_time":{"secs":0,"nanos":582965292}},"pass":false,"entropy":4.62329800228031,"entropy_diff":4.956559607194322e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":173,"metadata":{"sampler_time":{"secs":0,"nanos":85706},"constraint_time":{"secs":0,"nanos":531004},"parser_time":{"secs":0,"nanos":588702},"transformer_time":{"secs":0,"nanos":464365458},"trie_time":{"secs":0,"nanos":1576580},"total_time":{"secs":0,"nanos":613239083}},"pass":false,"entropy":4.623297992527727,"entropy_diff":9.752583629563105e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,32,25,216,33,25,216,33,1292]}
{"generation":174,"metadata":{"sampler_time":{"secs":0,"nanos":101668},"constraint_time":{"secs":0,"nanos":563752},"parser_time":{"secs":0,"nanos":652543},"transformer_time":{"secs":0,"nanos":482166751},"trie_time":{"secs":0,"nanos":1442005},"total_time":{"secs":0,"nanos":637453958}},"pass":false,"entropy":4.6232979908501175,"entropy_diff":1.6776091626979905e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (int.to.str (str.indexof col1 \" \" 1)) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,591,30,1141,30,1321,365,1321,30,3888,1714,664,33,476,476,216,33,1292,476,476,216,33,25,216,33,1292]}
{"generation":175,"metadata":{"sampler_time":{"secs":0,"nanos":105582},"constraint_time":{"secs":0,"nanos":723493},"parser_time":{"secs":0,"nanos":879382},"transformer_time":{"secs":0,"nanos":664697581},"trie_time":{"secs":0,"nanos":1695122},"total_time":{"secs":0,"nanos":888463666}},"pass":false,"entropy":4.623297868577792,"entropy_diff":1.2227232559780532e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":176,"metadata":{"sampler_time":{"secs":0,"nanos":111751},"constraint_time":{"secs":0,"nanos":745413},"parser_time":{"secs":0,"nanos":821579},"transformer_time":{"secs":0,"nanos":634836583},"trie_time":{"secs":0,"nanos":1674038},"total_time":{"secs":0,"nanos":841201666}},"pass":false,"entropy":4.623297868574229,"entropy_diff":3.5624836414172023e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":177,"metadata":{"sampler_time":{"secs":0,"nanos":158879},"constraint_time":{"secs":0,"nanos":897247},"parser_time":{"secs":0,"nanos":935408},"transformer_time":{"secs":0,"nanos":693901118},"trie_time":{"secs":0,"nanos":1631952},"total_time":{"secs":0,"nanos":919078000}},"pass":false,"entropy":4.623297868572801,"entropy_diff":1.4281908988778014e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col2 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,3888,1714,664,34,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":178,"metadata":{"sampler_time":{"secs":0,"nanos":117793},"constraint_time":{"secs":0,"nanos":629414},"parser_time":{"secs":0,"nanos":769258},"transformer_time":{"secs":0,"nanos":589345543},"trie_time":{"secs":0,"nanos":1678078},"total_time":{"secs":0,"nanos":781886750}},"pass":false,"entropy":4.623297868571322,"entropy_diff":1.4788170688007085e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":179,"metadata":{"sampler_time":{"secs":0,"nanos":163167},"constraint_time":{"secs":0,"nanos":838161},"parser_time":{"secs":0,"nanos":1023874},"transformer_time":{"secs":0,"nanos":778796744},"trie_time":{"secs":0,"nanos":1737704},"total_time":{"secs":1,"nanos":21923500}},"pass":false,"entropy":4.623297868566093,"entropy_diff":5.229594535194337e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof (str.replace col1 col1 col1) (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":180,"metadata":{"sampler_time":{"secs":0,"nanos":101457},"constraint_time":{"secs":0,"nanos":449503},"parser_time":{"secs":0,"nanos":479077},"transformer_time":{"secs":0,"nanos":457490209},"trie_time":{"secs":0,"nanos":1700542},"total_time":{"secs":0,"nanos":592767375}},"pass":false,"entropy":4.623297868549695,"entropy_diff":1.6397549984503712e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,32,1292]}
{"generation":181,"metadata":{"sampler_time":{"secs":0,"nanos":96288},"constraint_time":{"secs":0,"nanos":542128},"parser_time":{"secs":0,"nanos":589293},"transformer_time":{"secs":0,"nanos":448537457},"trie_time":{"secs":0,"nanos":1771422},"total_time":{"secs":0,"nanos":586632375}},"pass":false,"entropy":4.623297868504432,"entropy_diff":4.526334862475778e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,32,25,216,33,1292]}
{"generation":182,"metadata":{"sampler_time":{"secs":0,"nanos":148710},"constraint_time":{"secs":0,"nanos":637457},"parser_time":{"secs":0,"nanos":767669},"transformer_time":{"secs":0,"nanos":601007213},"trie_time":{"secs":0,"nanos":1671571},"total_time":{"secs":0,"nanos":795107542}},"pass":false,"entropy":4.623297868370801,"entropy_diff":1.3363088413598234e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":183,"metadata":{"sampler_time":{"secs":0,"nanos":125332},"constraint_time":{"secs":0,"nanos":537589},"parser_time":{"secs":0,"nanos":558044},"transformer_time":{"secs":0,"nanos":491371832},"trie_time":{"secs":0,"nanos":1749042},"total_time":{"secs":0,"nanos":649457709}},"pass":false,"entropy":4.62329786835522,"entropy_diff":1.5581314016799297e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":184,"metadata":{"sampler_time":{"secs":0,"nanos":143624},"constraint_time":{"secs":0,"nanos":536333},"parser_time":{"secs":0,"nanos":568750},"transformer_time":{"secs":0,"nanos":492370500},"trie_time":{"secs":0,"nanos":1742787},"total_time":{"secs":0,"nanos":639894250}},"pass":false,"entropy":4.623297868327725,"entropy_diff":2.7494451160237077e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":185,"metadata":{"sampler_time":{"secs":0,"nanos":210252},"constraint_time":{"secs":0,"nanos":712162},"parser_time":{"secs":0,"nanos":822626},"transformer_time":{"secs":0,"nanos":669674419},"trie_time":{"secs":0,"nanos":1741589},"total_time":{"secs":0,"nanos":883944875}},"pass":false,"entropy":4.62329786831895,"entropy_diff":8.775202786637237e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col1 col2) (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":186,"metadata":{"sampler_time":{"secs":0,"nanos":95582},"constraint_time":{"secs":0,"nanos":542622},"parser_time":{"secs":0,"nanos":602571},"transformer_time":{"secs":0,"nanos":457660087},"trie_time":{"secs":0,"nanos":1823381},"total_time":{"secs":0,"nanos":604892708}},"pass":false,"entropy":4.623297868308749,"entropy_diff":1.0200729150255938e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,32,1292]}
{"generation":187,"metadata":{"sampler_time":{"secs":0,"nanos":138371},"constraint_time":{"secs":0,"nanos":524001},"parser_time":{"secs":0,"nanos":585413},"transformer_time":{"secs":0,"nanos":449471504},"trie_time":{"secs":0,"nanos":1728588},"total_time":{"secs":0,"nanos":596132250}},"pass":false,"entropy":4.623297868292647,"entropy_diff":1.610267474916327e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,34,1292]}
{"generation":188,"metadata":{"sampler_time":{"secs":0,"nanos":157792},"constraint_time":{"secs":0,"nanos":1196418},"parser_time":{"secs":0,"nanos":693620},"transformer_time":{"secs":0,"nanos":533463127},"trie_time":{"secs":0,"nanos":1744496},"total_time":{"secs":0,"nanos":706335708}},"pass":false,"entropy":4.623297868250258,"entropy_diff":4.2388315080188477e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":189,"metadata":{"sampler_time":{"secs":0,"nanos":127536},"constraint_time":{"secs":0,"nanos":734707},"parser_time":{"secs":0,"nanos":737205},"transformer_time":{"secs":0,"nanos":519145916},"trie_time":{"secs":0,"nanos":1746627},"total_time":{"secs":0,"nanos":697246000}},"pass":false,"entropy":4.623297867999105,"entropy_diff":2.511537644522832e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":190,"metadata":{"sampler_time":{"secs":0,"nanos":118832},"constraint_time":{"secs":0,"nanos":624091},"parser_time":{"secs":0,"nanos":800584},"transformer_time":{"secs":0,"nanos":516422959},"trie_time":{"secs":0,"nanos":1817956},"total_time":{"secs":0,"nanos":689047167}},"pass":false,"entropy":4.623297867792214,"entropy_diff":2.0689050472810777e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":191,"metadata":{"sampler_time":{"secs":0,"nanos":79916},"constraint_time":{"secs":0,"nanos":620788},"parser_time":{"secs":0,"nanos":595035},"transformer_time":{"secs":0,"nanos":456399168},"trie_time":{"secs":0,"nanos":1815121},"total_time":{"secs":0,"nanos":608689833}},"pass":false,"entropy":4.623297867657045,"entropy_diff":1.3516920915890296e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,34,1292]}
{"generation":192,"metadata":{"sampler_time":{"secs":0,"nanos":106753},"constraint_time":{"secs":0,"nanos":521914},"parser_time":{"secs":0,"nanos":558253},"transformer_time":{"secs":0,"nanos":449032920},"trie_time":{"secs":0,"nanos":1792701},"total_time":{"secs":0,"nanos":598276583}},"pass":false,"entropy":4.623297867637223,"entropy_diff":1.9821477792447695e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,34,25,216,33,1292]}
{"generation":193,"metadata":{"sampler_time":{"secs":0,"nanos":133875},"constraint_time":{"secs":0,"nanos":1082663},"parser_time":{"secs":0,"nanos":719113},"transformer_time":{"secs":0,"nanos":510770459},"trie_time":{"secs":0,"nanos":1753763},"total_time":{"secs":0,"nanos":679474208}},"pass":false,"entropy":4.623297867576511,"entropy_diff":6.071232405702176e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":194,"metadata":{"sampler_time":{"secs":0,"nanos":143713},"constraint_time":{"secs":0,"nanos":585792},"parser_time":{"secs":0,"nanos":735907},"transformer_time":{"secs":0,"nanos":542370497},"trie_time":{"secs":0,"nanos":2097299},"total_time":{"secs":0,"nanos":725671833}},"pass":false,"entropy":4.623297867262076,"entropy_diff":3.1443470049907774e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (+ 1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":195,"metadata":{"sampler_time":{"secs":0,"nanos":116755},"constraint_time":{"secs":0,"nanos":606416},"parser_time":{"secs":0,"nanos":708711},"transformer_time":{"secs":0,"nanos":517801748},"trie_time":{"secs":0,"nanos":1784958},"total_time":{"secs":0,"nanos":686755916}},"pass":false,"entropy":4.623297867221878,"entropy_diff":4.019806709720797e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":196,"metadata":{"sampler_time":{"secs":0,"nanos":154290},"constraint_time":{"secs":0,"nanos":682663},"parser_time":{"secs":0,"nanos":764255},"transformer_time":{"secs":0,"nanos":516980578},"trie_time":{"secs":0,"nanos":2911830},"total_time":{"secs":0,"nanos":694878250}},"pass":false,"entropy":4.623297867027348,"entropy_diff":1.9453061383956083e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":197,"metadata":{"sampler_time":{"secs":0,"nanos":142878},"constraint_time":{"secs":0,"nanos":675748},"parser_time":{"secs":0,"nanos":665045},"transformer_time":{"secs":0,"nanos":516039042},"trie_time":{"secs":0,"nanos":1966591},"total_time":{"secs":0,"nanos":676601709}},"pass":false,"entropy":4.6232978669563005,"entropy_diff":7.104716814865242e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 \" \" \",\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,476,476,42934,1292,216,33,25,216,33,1292]}
{"generation":198,"metadata":{"sampler_time":{"secs":0,"nanos":135750},"constraint_time":{"secs":0,"nanos":701830},"parser_time":{"secs":0,"nanos":589866},"transformer_time":{"secs":0,"nanos":498178630},"trie_time":{"secs":0,"nanos":1732793},"total_time":{"secs":0,"nanos":642174709}},"pass":false,"entropy":4.623297866910885,"entropy_diff":4.5415227134526504e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (- 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,17481,216,33,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":199,"metadata":{"sampler_time":{"secs":0,"nanos":97121},"constraint_time":{"secs":0,"nanos":316082},"parser_time":{"secs":0,"nanos":345879},"transformer_time":{"secs":0,"nanos":348037793},"trie_time":{"secs":0,"nanos":1612617},"total_time":{"secs":0,"nanos":448718584}},"pass":false,"entropy":4.623297865770763,"entropy_diff":1.1401226629459416e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,216]}
{"generation":200,"metadata":{"sampler_time":{"secs":0,"nanos":112251},"constraint_time":{"secs":0,"nanos":428832},"parser_time":{"secs":0,"nanos":468745},"transformer_time":{"secs":0,"nanos":380362628},"trie_time":{"secs":0,"nanos":1576881},"total_time":{"secs":0,"nanos":491339750}},"pass":false,"entropy":4.623297816658372,"entropy_diff":4.9112390598793354e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,25,216,33,1292]}
{"generation":201,"metadata":{"sampler_time":{"secs":0,"nanos":97535},"constraint_time":{"secs":0,"nanos":443159},"parser_time":{"secs":0,"nanos":553841},"transformer_time":{"secs":0,"nanos":444688749},"trie_time":{"secs":0,"nanos":1806532},"total_time":{"secs":0,"nanos":577980416}},"pass":false,"entropy":4.623297766746515,"entropy_diff":4.991185686975541e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":202,"metadata":{"sampler_time":{"secs":0,"nanos":116326},"constraint_time":{"secs":0,"nanos":525332},"parser_time":{"secs":0,"nanos":616212},"transformer_time":{"secs":0,"nanos":448472503},"trie_time":{"secs":0,"nanos":1881749},"total_time":{"secs":0,"nanos":578839125}},"pass":false,"entropy":4.623297758138388,"entropy_diff":8.608127544107447e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,42934,25,216,33,25,216,33,1292]}
{"generation":203,"metadata":{"sampler_time":{"secs":0,"nanos":142960},"constraint_time":{"secs":0,"nanos":508083},"parser_time":{"secs":0,"nanos":604575},"transformer_time":{"secs":0,"nanos":462353374},"trie_time":{"secs":0,"nanos":1907330},"total_time":{"secs":0,"nanos":598436416}},"pass":false,"entropy":4.62329775795796,"entropy_diff":1.8042722871314254e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"CA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,8970,1715,216,33,25,216,33,1292]}
{"generation":204,"metadata":{"sampler_time":{"secs":0,"nanos":167583},"constraint_time":{"secs":0,"nanos":1262878},"parser_time":{"secs":0,"nanos":669208},"transformer_time":{"secs":0,"nanos":526720581},"trie_time":{"secs":0,"nanos":1876922},"total_time":{"secs":0,"nanos":685112292}},"pass":false,"entropy":4.623297757818188,"entropy_diff":1.397726379082087e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":205,"metadata":{"sampler_time":{"secs":0,"nanos":149377},"constraint_time":{"secs":0,"nanos":1404248},"parser_time":{"secs":0,"nanos":614000},"transformer_time":{"secs":0,"nanos":531706043},"trie_time":{"secs":0,"nanos":1889588},"total_time":{"secs":0,"nanos":690702834}},"pass":false,"entropy":4.623297757802417,"entropy_diff":1.5770496020195424e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,664,34,25,216,33,25,216,33,1292]}
{"generation":206,"metadata":{"sampler_time":{"secs":0,"nanos":164370},"constraint_time":{"secs":0,"nanos":1407462},"parser_time":{"secs":0,"nanos":698825},"transformer_time":{"secs":0,"nanos":517993417},"trie_time":{"secs":0,"nanos":1877415},"total_time":{"secs":0,"nanos":677166833}},"pass":false,"entropy":4.623297757782988,"entropy_diff":1.942890293094024e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":207,"metadata":{"sampler_time":{"secs":0,"nanos":197331},"constraint_time":{"secs":0,"nanos":560330},"parser_time":{"secs":0,"nanos":752539},"transformer_time":{"secs":0,"nanos":593768998},"trie_time":{"secs":0,"nanos":1942755},"total_time":{"secs":0,"nanos":768129250}},"pass":false,"entropy":4.623297757726214,"entropy_diff":5.6774140944071405e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":208,"metadata":{"sampler_time":{"secs":0,"nanos":107047},"constraint_time":{"secs":0,"nanos":640752},"parser_time":{"secs":0,"nanos":782541},"transformer_time":{"secs":0,"nanos":588772252},"trie_time":{"secs":0,"nanos":2194968},"total_time":{"secs":0,"nanos":764434000}},"pass":false,"entropy":4.623297757712661,"entropy_diff":1.3553602684623911e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":209,"metadata":{"sampler_time":{"secs":0,"nanos":108466},"constraint_time":{"secs":0,"nanos":536167},"parser_time":{"secs":0,"nanos":528050},"transformer_time":{"secs":0,"nanos":448300125},"trie_time":{"secs":0,"nanos":2006869},"total_time":{"secs":0,"nanos":579830917}},"pass":false,"entropy":4.623297757702616,"entropy_diff":1.0044409748388716e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,32,25,216,33,1292]}
{"generation":210,"metadata":{"sampler_time":{"secs":0,"nanos":89076},"constraint_time":{"secs":0,"nanos":695212},"parser_time":{"secs":0,"nanos":605756},"transformer_time":{"secs":0,"nanos":447609333},"trie_time":{"secs":0,"nanos":1953760},"total_time":{"secs":0,"nanos":579699958}},"pass":false,"entropy":4.623297757641019,"entropy_diff":6.159694976304309e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,34,1292]}
{"generation":211,"metadata":{"sampler_time":{"secs":0,"nanos":170918},"constraint_time":{"secs":0,"nanos":1457506},"parser_time":{"secs":0,"nanos":718701},"transformer_time":{"secs":0,"nanos":515856084},"trie_time":{"secs":0,"nanos":1990378},"total_time":{"secs":0,"nanos":674841458}},"pass":false,"entropy":4.623297757570122,"entropy_diff":7.08970659957231e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col2 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,34,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":212,"metadata":{"sampler_time":{"secs":0,"nanos":165375},"constraint_time":{"secs":0,"nanos":559583},"parser_time":{"secs":0,"nanos":551340},"transformer_time":{"secs":0,"nanos":492469958},"trie_time":{"secs":0,"nanos":2077248},"total_time":{"secs":0,"nanos":634459375}},"pass":false,"entropy":4.623297757426821,"entropy_diff":1.433013707696773e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":213,"metadata":{"sampler_time":{"secs":0,"nanos":166953},"constraint_time":{"secs":0,"nanos":640706},"parser_time":{"secs":0,"nanos":770922},"transformer_time":{"secs":0,"nanos":601036001},"trie_time":{"secs":0,"nanos":2069665},"total_time":{"secs":0,"nanos":780789417}},"pass":false,"entropy":4.623297757424545,"entropy_diff":2.275513111271721e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) (str.indexof col2 (str.replace col2 col2 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,33,7754]}
{"generation":214,"metadata":{"sampler_time":{"secs":0,"nanos":124335},"constraint_time":{"secs":0,"nanos":677386},"parser_time":{"secs":0,"nanos":773541},"transformer_time":{"secs":0,"nanos":589148085},"trie_time":{"secs":0,"nanos":2061745},"total_time":{"secs":0,"nanos":769643291}},"pass":false,"entropy":4.623297757418212,"entropy_diff":6.333600310881593e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 (str.replace col1 col2 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,1292,216,33,1292]}
{"generation":215,"metadata":{"sampler_time":{"secs":0,"nanos":146166},"constraint_time":{"secs":0,"nanos":768914},"parser_time":{"secs":0,"nanos":820045},"transformer_time":{"secs":0,"nanos":621028750},"trie_time":{"secs":0,"nanos":2415161},"total_time":{"secs":0,"nanos":818582792}},"pass":false,"entropy":4.623297757414063,"entropy_diff":4.148681398419285e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (+ (str.indexof col1 (str.replace col1 col1 col1) 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,30425,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,33,7754]}
{"generation":216,"metadata":{"sampler_time":{"secs":0,"nanos":126755},"constraint_time":{"secs":0,"nanos":610296},"parser_time":{"secs":0,"nanos":600163},"transformer_time":{"secs":0,"nanos":464603958},"trie_time":{"secs":0,"nanos":2060832},"total_time":{"secs":0,"nanos":600108875}},"pass":false,"entropy":4.623297757405025,"entropy_diff":9.038103598868474e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"USA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,24842,1715,216,33,25,216,33,1292]}
{"generation":217,"metadata":{"sampler_time":{"secs":0,"nanos":108088},"constraint_time":{"secs":0,"nanos":544208},"parser_time":{"secs":0,"nanos":573700},"transformer_time":{"secs":0,"nanos":457604417},"trie_time":{"secs":0,"nanos":2239879},"total_time":{"secs":0,"nanos":593014500}},"pass":false,"entropy":4.623297757249738,"entropy_diff":1.552873385435305e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,32,1292]}
{"generation":218,"metadata":{"sampler_time":{"secs":0,"nanos":141416},"constraint_time":{"secs":0,"nanos":658246},"parser_time":{"secs":0,"nanos":650176},"transformer_time":{"secs":0,"nanos":472918085},"trie_time":{"secs":0,"nanos":1902248},"total_time":{"secs":0,"nanos":607446250}},"pass":false,"entropy":4.6232977572430185,"entropy_diff":6.719069745031447e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace \"USA\" \"USA\" \"PA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,476,24842,18,476,24842,18,476,4442,1715,216,33,25,216,33,1292]}
{"generation":219,"metadata":{"sampler_time":{"secs":0,"nanos":134825},"constraint_time":{"secs":0,"nanos":536747},"parser_time":{"secs":0,"nanos":625584},"transformer_time":{"secs":0,"nanos":464663167},"trie_time":{"secs":0,"nanos":1927875},"total_time":{"secs":0,"nanos":598666709}},"pass":false,"entropy":4.623297753536791,"entropy_diff":3.7062273250398903e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,34,25,216,33,1292]}
{"generation":220,"metadata":{"sampler_time":{"secs":0,"nanos":175249},"constraint_time":{"secs":0,"nanos":619006},"parser_time":{"secs":0,"nanos":702339},"transformer_time":{"secs":0,"nanos":532890456},"trie_time":{"secs":0,"nanos":1923073},"total_time":{"secs":0,"nanos":687539416}},"pass":false,"entropy":4.623297753461893,"entropy_diff":7.489830977647216e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":221,"metadata":{"sampler_time":{"secs":0,"nanos":96752},"constraint_time":{"secs":0,"nanos":382209},"parser_time":{"secs":0,"nanos":416919},"transformer_time":{"secs":0,"nanos":381961959},"trie_time":{"secs":0,"nanos":1858626},"total_time":{"secs":0,"nanos":492771041}},"pass":false,"entropy":4.623297753166192,"entropy_diff":2.957012412707627e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,34,25,216,33,1292]}
{"generation":222,"metadata":{"sampler_time":{"secs":0,"nanos":144253},"constraint_time":{"secs":0,"nanos":1240797},"parser_time":{"secs":0,"nanos":649325},"transformer_time":{"secs":0,"nanos":549293874},"trie_time":{"secs":0,"nanos":1915540},"total_time":{"secs":0,"nanos":706588917}},"pass":false,"entropy":4.623297741179532,"entropy_diff":1.1986659664842136e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr (str.substr col1 1 1) 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":223,"metadata":{"sampler_time":{"secs":0,"nanos":178955},"constraint_time":{"secs":0,"nanos":592834},"parser_time":{"secs":0,"nanos":729872},"transformer_time":{"secs":0,"nanos":542751461},"trie_time":{"secs":0,"nanos":1865010},"total_time":{"secs":0,"nanos":701189458}},"pass":false,"entropy":4.623297737622972,"entropy_diff":3.556560379536222e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ (str.indexof col1 \" \" 1) 1)) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":224,"metadata":{"sampler_time":{"secs":0,"nanos":113957},"constraint_time":{"secs":0,"nanos":318712},"parser_time":{"secs":0,"nanos":466831},"transformer_time":{"secs":0,"nanos":383570295},"trie_time":{"secs":0,"nanos":1936795},"total_time":{"secs":0,"nanos":495139916}},"pass":false,"entropy":4.623297726486282,"entropy_diff":1.1136689792579091e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,34,1292]}
{"generation":225,"metadata":{"sampler_time":{"secs":0,"nanos":102584},"constraint_time":{"secs":0,"nanos":389378},"parser_time":{"secs":0,"nanos":449380},"transformer_time":{"secs":0,"nanos":389880878},"trie_time":{"secs":0,"nanos":1790782},"total_time":{"secs":0,"nanos":502070041}},"pass":false,"entropy":4.623297724143751,"entropy_diff":2.342530613930194e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"USA\" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,24842,18,664,33,216,33,25,216,33,1292]}
{"generation":226,"metadata":{"sampler_time":{"secs":0,"nanos":111127},"constraint_time":{"secs":0,"nanos":708626},"parser_time":{"secs":0,"nanos":541074},"transformer_time":{"secs":0,"nanos":439920000},"trie_time":{"secs":0,"nanos":2554171},"total_time":{"secs":0,"nanos":570451417}},"pass":false,"entropy":4.623297689360786,"entropy_diff":3.47829649527398e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,34,216,32,25,216,33,25,216,33,1292]}
{"generation":227,"metadata":{"sampler_time":{"secs":0,"nanos":113584},"constraint_time":{"secs":0,"nanos":377002},"parser_time":{"secs":0,"nanos":675331},"transformer_time":{"secs":0,"nanos":481965497},"trie_time":{"secs":0,"nanos":1936409},"total_time":{"secs":0,"nanos":623966958}},"pass":false,"entropy":4.623297686417285,"entropy_diff":2.9435014425871486e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (+ (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":228,"metadata":{"sampler_time":{"secs":0,"nanos":100039},"constraint_time":{"secs":0,"nanos":520961},"parser_time":{"secs":0,"nanos":538466},"transformer_time":{"secs":0,"nanos":464513082},"trie_time":{"secs":0,"nanos":2050704},"total_time":{"secs":0,"nanos":600203625}},"pass":false,"entropy":4.623297684740745,"entropy_diff":1.6765397958806716e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,34,25,216,33,1292]}
{"generation":229,"metadata":{"sampler_time":{"secs":0,"nanos":88499},"constraint_time":{"secs":0,"nanos":545919},"parser_time":{"secs":0,"nanos":574164},"transformer_time":{"secs":0,"nanos":448640999},"trie_time":{"secs":0,"nanos":2337261},"total_time":{"secs":0,"nanos":584118083}},"pass":false,"entropy":4.6232976846410985,"entropy_diff":9.964651326299645e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,32,1292]}
{"generation":230,"metadata":{"sampler_time":{"secs":0,"nanos":115923},"constraint_time":{"secs":0,"nanos":698668},"parser_time":{"secs":0,"nanos":739829},"transformer_time":{"secs":0,"nanos":516115128},"trie_time":{"secs":0,"nanos":2212997},"total_time":{"secs":0,"nanos":674799334}},"pass":false,"entropy":4.623297684609478,"entropy_diff":3.162003991974416e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,476,49088,216,33,25,216,33,1292]}
{"generation":231,"metadata":{"sampler_time":{"secs":0,"nanos":109583},"constraint_time":{"secs":0,"nanos":660785},"parser_time":{"secs":0,"nanos":696964},"transformer_time":{"secs":0,"nanos":601830584},"trie_time":{"secs":0,"nanos":2248159},"total_time":{"secs":0,"nanos":778392375}},"pass":false,"entropy":4.623297684593277,"entropy_diff":1.6201262553749984e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,216,33,1292]}
{"generation":232,"metadata":{"sampler_time":{"secs":0,"nanos":128416},"constraint_time":{"secs":0,"nanos":741289},"parser_time":{"secs":0,"nanos":824747},"transformer_time":{"secs":0,"nanos":623620169},"trie_time":{"secs":0,"nanos":2362788},"total_time":{"secs":0,"nanos":813207917}},"pass":false,"entropy":4.623297684593026,"entropy_diff":2.5135449277513544e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (- 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,216,33,216,33,7754,216,33,1292]}
{"generation":233,"metadata":{"sampler_time":{"secs":0,"nanos":139544},"constraint_time":{"secs":0,"nanos":716373},"parser_time":{"secs":0,"nanos":886628},"transformer_time":{"secs":0,"nanos":597221377},"trie_time":{"secs":0,"nanos":2291404},"total_time":{"secs":0,"nanos":776100250}},"pass":false,"entropy":4.62329768459276,"entropy_diff":2.6556534749033744e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 0)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,1292,216,33,1292]}
{"generation":234,"metadata":{"sampler_time":{"secs":0,"nanos":178542},"constraint_time":{"secs":0,"nanos":784250},"parser_time":{"secs":0,"nanos":771670},"transformer_time":{"secs":0,"nanos":625150752},"trie_time":{"secs":0,"nanos":2268784},"total_time":{"secs":0,"nanos":813260334}},"pass":false,"entropy":4.623297684592638,"entropy_diff":1.2256862191861728e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (+ 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,216,33,7754,216,33,1292]}
{"generation":235,"metadata":{"sampler_time":{"secs":0,"nanos":163495},"constraint_time":{"secs":0,"nanos":761001},"parser_time":{"secs":0,"nanos":830170},"transformer_time":{"secs":0,"nanos":672361461},"trie_time":{"secs":0,"nanos":2215588},"total_time":{"secs":0,"nanos":868229333}},"pass":false,"entropy":4.623297684592453,"entropy_diff":1.8474111129762605e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col2 col1) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":236,"metadata":{"sampler_time":{"secs":0,"nanos":88333},"constraint_time":{"secs":0,"nanos":974618},"parser_time":{"secs":0,"nanos":931043},"transformer_time":{"secs":0,"nanos":666316498},"trie_time":{"secs":0,"nanos":2316539},"total_time":{"secs":0,"nanos":863814125}},"pass":false,"entropy":4.623297684588207,"entropy_diff":4.246381024586299e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":237,"metadata":{"sampler_time":{"secs":0,"nanos":86959},"constraint_time":{"secs":0,"nanos":724917},"parser_time":{"secs":0,"nanos":925629},"transformer_time":{"secs":0,"nanos":669916792},"trie_time":{"secs":0,"nanos":2329700},"total_time":{"secs":0,"nanos":867625667}},"pass":false,"entropy":4.623297684587922,"entropy_diff":2.8421709430404007e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":238,"metadata":{"sampler_time":{"secs":0,"nanos":185419},"constraint_time":{"secs":0,"nanos":840466},"parser_time":{"secs":0,"nanos":1285345},"transformer_time":{"secs":0,"nanos":862069747},"trie_time":{"secs":0,"nanos":2373275},"total_time":{"secs":1,"nanos":116796250}},"pass":false,"entropy":4.623297684587864,"entropy_diff":5.861977570020827e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1))) (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,38799]}
{"generation":239,"metadata":{"sampler_time":{"secs":0,"nanos":142004},"constraint_time":{"secs":0,"nanos":676873},"parser_time":{"secs":0,"nanos":826044},"transformer_time":{"secs":0,"nanos":596366625},"trie_time":{"secs":0,"nanos":2364502},"total_time":{"secs":0,"nanos":776503791}},"pass":false,"entropy":4.623297684587038,"entropy_diff":8.260059303211165e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,1292,216,33,1292]}
{"generation":240,"metadata":{"sampler_time":{"secs":0,"nanos":111867},"constraint_time":{"secs":0,"nanos":682247},"parser_time":{"secs":0,"nanos":774625},"transformer_time":{"secs":0,"nanos":593162415},"trie_time":{"secs":0,"nanos":2292999},"total_time":{"secs":0,"nanos":770410666}},"pass":false,"entropy":4.6232976845867615,"entropy_diff":2.7622348852673895e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col2 col2 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,34,476,20361,216,33,1292,216,33,1292]}
{"generation":241,"metadata":{"sampler_time":{"secs":0,"nanos":163544},"constraint_time":{"secs":0,"nanos":702294},"parser_time":{"secs":0,"nanos":845082},"transformer_time":{"secs":0,"nanos":649843001},"trie_time":{"secs":0,"nanos":2376290},"total_time":{"secs":0,"nanos":841201708}},"pass":false,"entropy":4.623297684586258,"entropy_diff":5.03597163969971e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.at col1 0) (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":242,"metadata":{"sampler_time":{"secs":0,"nanos":123741},"constraint_time":{"secs":0,"nanos":746418},"parser_time":{"secs":0,"nanos":649208},"transformer_time":{"secs":0,"nanos":523699167},"trie_time":{"secs":0,"nanos":2425254},"total_time":{"secs":0,"nanos":678923875}},"pass":false,"entropy":4.623297684585117,"entropy_diff":1.141309269314661e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,216,33,1292]}
{"generation":243,"metadata":{"sampler_time":{"secs":0,"nanos":158082},"constraint_time":{"secs":0,"nanos":604832},"parser_time":{"secs":0,"nanos":762210},"transformer_time":{"secs":0,"nanos":577506170},"trie_time":{"secs":0,"nanos":2394658},"total_time":{"secs":0,"nanos":745196125}},"pass":false,"entropy":4.623297684584416,"entropy_diff":7.007727731433988e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \",\" (str.indexof col1 \",\" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,42934,216,33,7754,216,33,1292]}
{"generation":244,"metadata":{"sampler_time":{"secs":0,"nanos":166503},"constraint_time":{"secs":0,"nanos":722873},"parser_time":{"secs":0,"nanos":781738},"transformer_time":{"secs":0,"nanos":557817081},"trie_time":{"secs":0,"nanos":2400252},"total_time":{"secs":0,"nanos":723244625}},"pass":false,"entropy":4.623297684582622,"entropy_diff":1.794120407794253e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (- (str.indexof col1 col2 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,17481,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292,216,33,1292]}
{"generation":245,"metadata":{"sampler_time":{"secs":0,"nanos":118713},"constraint_time":{"secs":0,"nanos":511874},"parser_time":{"secs":0,"nanos":534958},"transformer_time":{"secs":0,"nanos":457928001},"trie_time":{"secs":0,"nanos":2301468},"total_time":{"secs":0,"nanos":593420375}},"pass":false,"entropy":4.623297684564882,"entropy_diff":1.77395875766706e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,664,33,25,216,33,25,216,33,1292]}
{"generation":246,"metadata":{"sampler_time":{"secs":0,"nanos":139334},"constraint_time":{"secs":0,"nanos":585996},"parser_time":{"secs":0,"nanos":604414},"transformer_time":{"secs":0,"nanos":497675165},"trie_time":{"secs":0,"nanos":2196294},"total_time":{"secs":0,"nanos":639493750}},"pass":false,"entropy":4.623297684422034,"entropy_diff":1.4284839977563024e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":247,"metadata":{"sampler_time":{"secs":0,"nanos":125503},"constraint_time":{"secs":0,"nanos":538542},"parser_time":{"secs":0,"nanos":573753},"transformer_time":{"secs":0,"nanos":468651752},"trie_time":{"secs":0,"nanos":2203576},"total_time":{"secs":0,"nanos":603417000}},"pass":false,"entropy":4.623297684360956,"entropy_diff":6.107736538751851e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,34,25,216,33,25,216,33,1292]}
{"generation":248,"metadata":{"sampler_time":{"secs":0,"nanos":120962},"constraint_time":{"secs":0,"nanos":435037},"parser_time":{"secs":0,"nanos":595296},"transformer_time":{"secs":0,"nanos":449464500},"trie_time":{"secs":0,"nanos":2113841},"total_time":{"secs":0,"nanos":579530459}},"pass":false,"entropy":4.623297684113039,"entropy_diff":2.4791724229089596e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":249,"metadata":{"sampler_time":{"secs":0,"nanos":152838},"constraint_time":{"secs":0,"nanos":1194215},"parser_time":{"secs":0,"nanos":675528},"transformer_time":{"secs":0,"nanos":534714497},"trie_time":{"secs":0,"nanos":2656629},"total_time":{"secs":0,"nanos":694288000}},"pass":false,"entropy":4.62329768287672,"entropy_diff":1.2363194912268227e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":250,"metadata":{"sampler_time":{"secs":0,"nanos":121878},"constraint_time":{"secs":0,"nanos":607333},"parser_time":{"secs":0,"nanos":574460},"transformer_time":{"secs":0,"nanos":456413498},"trie_time":{"secs":0,"nanos":2327713},"total_time":{"secs":0,"nanos":591992375}},"pass":false,"entropy":4.6232976827870145,"entropy_diff":8.970513221129295e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"PA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,4442,1715,216,33,25,216,33,1292]}
{"generation":251,"metadata":{"sampler_time":{"secs":0,"nanos":90502},"constraint_time":{"secs":0,"nanos":1143874},"parser_time":{"secs":0,"nanos":727739},"transformer_time":{"secs":0,"nanos":530048331},"trie_time":{"secs":0,"nanos":2326211},"total_time":{"secs":0,"nanos":688776750}},"pass":false,"entropy":4.623297682732251,"entropy_diff":5.476330500187032e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":252,"metadata":{"sampler_time":{"secs":0,"nanos":96756},"constraint_time":{"secs":0,"nanos":518502},"parser_time":{"secs":0,"nanos":520622},"transformer_time":{"secs":0,"nanos":464674167},"trie_time":{"secs":0,"nanos":2285006},"total_time":{"secs":0,"nanos":598880834}},"pass":false,"entropy":4.623297682638077,"entropy_diff":9.417444601922398e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,216,33,25,216,33,1292]}
{"generation":253,"metadata":{"sampler_time":{"secs":0,"nanos":89546},"constraint_time":{"secs":0,"nanos":669289},"parser_time":{"secs":0,"nanos":608545},"transformer_time":{"secs":0,"nanos":456754584},"trie_time":{"secs":0,"nanos":2321823},"total_time":{"secs":0,"nanos":591250417}},"pass":false,"entropy":4.62329768243176,"entropy_diff":2.063167414689815e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"USA\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,24842,1715,216,32,25,216,33,1292]}
{"generation":254,"metadata":{"sampler_time":{"secs":0,"nanos":130461},"constraint_time":{"secs":0,"nanos":657667},"parser_time":{"secs":0,"nanos":761037},"transformer_time":{"secs":0,"nanos":522993123},"trie_time":{"secs":0,"nanos":2835044},"total_time":{"secs":0,"nanos":685065167}},"pass":false,"entropy":4.623297682412046,"entropy_diff":1.971400820366398e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":255,"metadata":{"sampler_time":{"secs":0,"nanos":128662},"constraint_time":{"secs":0,"nanos":637580},"parser_time":{"secs":0,"nanos":579364},"transformer_time":{"secs":0,"nanos":452255127},"trie_time":{"secs":0,"nanos":2674218},"total_time":{"secs":0,"nanos":585627958}},"pass":false,"entropy":4.623297682400147,"entropy_diff":1.1898926288722578e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,32,1292]}
{"generation":256,"metadata":{"sampler_time":{"secs":0,"nanos":123668},"constraint_time":{"secs":0,"nanos":754417},"parser_time":{"secs":0,"nanos":662967},"transformer_time":{"secs":0,"nanos":529077913},"trie_time":{"secs":0,"nanos":3178543},"total_time":{"secs":0,"nanos":696613500}},"pass":false,"entropy":4.623297682354124,"entropy_diff":4.602274117360139e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col2 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,1292,216,33,25,216,33,1292]}
{"generation":257,"metadata":{"sampler_time":{"secs":0,"nanos":125955},"constraint_time":{"secs":0,"nanos":558540},"parser_time":{"secs":0,"nanos":584588},"transformer_time":{"secs":0,"nanos":460554418},"trie_time":{"secs":0,"nanos":2562213},"total_time":{"secs":0,"nanos":596655166}},"pass":false,"entropy":4.623297682339243,"entropy_diff":1.4881429422075598e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \"USA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,24842,1715,216,33,25,216,33,1292]}
{"generation":258,"metadata":{"sampler_time":{"secs":0,"nanos":124617},"constraint_time":{"secs":0,"nanos":512577},"parser_time":{"secs":0,"nanos":579792},"transformer_time":{"secs":0,"nanos":465986961},"trie_time":{"secs":0,"nanos":2350089},"total_time":{"secs":0,"nanos":600478666}},"pass":false,"entropy":4.623297682291399,"entropy_diff":4.7843506933986646e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,34,25,216,33,1292]}
{"generation":259,"metadata":{"sampler_time":{"secs":0,"nanos":143917},"constraint_time":{"secs":0,"nanos":1428209},"parser_time":{"secs":0,"nanos":790086},"transformer_time":{"secs":0,"nanos":522148625},"trie_time":{"secs":0,"nanos":2518464},"total_time":{"secs":0,"nanos":682704625}},"pass":false,"entropy":4.623297682194583,"entropy_diff":9.681677681783185e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":260,"metadata":{"sampler_time":{"secs":0,"nanos":120003},"constraint_time":{"secs":0,"nanos":807375},"parser_time":{"secs":0,"nanos":678666},"transformer_time":{"secs":0,"nanos":440857253},"trie_time":{"secs":0,"nanos":4515745},"total_time":{"secs":0,"nanos":594559292}},"pass":false,"entropy":4.623297682154842,"entropy_diff":3.9740655211062403e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":261,"metadata":{"sampler_time":{"secs":0,"nanos":112414},"constraint_time":{"secs":0,"nanos":434257},"parser_time":{"secs":0,"nanos":494339},"transformer_time":{"secs":0,"nanos":412937583},"trie_time":{"secs":0,"nanos":2402256},"total_time":{"secs":0,"nanos":535035500}},"pass":false,"entropy":4.6232976811356385,"entropy_diff":1.0192033883527074e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":262,"metadata":{"sampler_time":{"secs":0,"nanos":117084},"constraint_time":{"secs":0,"nanos":569790},"parser_time":{"secs":0,"nanos":670748},"transformer_time":{"secs":0,"nanos":483311293},"trie_time":{"secs":0,"nanos":2372210},"total_time":{"secs":0,"nanos":622843000}},"pass":false,"entropy":4.623297679195534,"entropy_diff":1.9401049655698444e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (int.to.str (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,591,30,1141,30,1321,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":263,"metadata":{"sampler_time":{"secs":0,"nanos":87878},"constraint_time":{"secs":0,"nanos":306747},"parser_time":{"secs":0,"nanos":443124},"transformer_time":{"secs":0,"nanos":379145163},"trie_time":{"secs":0,"nanos":2165206},"total_time":{"secs":0,"nanos":487206375}},"pass":false,"entropy":4.623297666304846,"entropy_diff":1.289068762844181e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,34,216,33,25,216,33,1292]}
{"generation":264,"metadata":{"sampler_time":{"secs":0,"nanos":49840},"constraint_time":{"secs":0,"nanos":379497},"parser_time":{"secs":0,"nanos":395915},"transformer_time":{"secs":0,"nanos":299273875},"trie_time":{"secs":0,"nanos":2169162},"total_time":{"secs":0,"nanos":413430375}},"pass":false,"entropy":4.623297574235472,"entropy_diff":9.206937434669271e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,33,216,33,1292]}
{"generation":265,"metadata":{"sampler_time":{"secs":0,"nanos":61582},"constraint_time":{"secs":0,"nanos":442872},"parser_time":{"secs":0,"nanos":542661},"transformer_time":{"secs":0,"nanos":378072957},"trie_time":{"secs":0,"nanos":1961212},"total_time":{"secs":0,"nanos":494648042}},"pass":false,"entropy":4.6232955346373155,"entropy_diff":2.0395981561449616e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col2 1 1) \"USA\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,24842,11121]}
{"generation":266,"metadata":{"sampler_time":{"secs":0,"nanos":77171},"constraint_time":{"secs":0,"nanos":431499},"parser_time":{"secs":0,"nanos":409790},"transformer_time":{"secs":0,"nanos":297302749},"trie_time":{"secs":0,"nanos":1950081},"total_time":{"secs":0,"nanos":391479917}},"pass":false,"entropy":4.623294856471709,"entropy_diff":6.781656063381547e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,664,33,1292]}
{"generation":267,"metadata":{"sampler_time":{"secs":0,"nanos":112374},"constraint_time":{"secs":0,"nanos":520043},"parser_time":{"secs":0,"nanos":576789},"transformer_time":{"secs":0,"nanos":459997956},"trie_time":{"secs":0,"nanos":2696956},"total_time":{"secs":0,"nanos":599118583}},"pass":false,"entropy":4.623292497411511,"entropy_diff":2.359060197854035e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":268,"metadata":{"sampler_time":{"secs":0,"nanos":117916},"constraint_time":{"secs":0,"nanos":355253},"parser_time":{"secs":0,"nanos":460750},"transformer_time":{"secs":0,"nanos":372262752},"trie_time":{"secs":0,"nanos":2207459},"total_time":{"secs":0,"nanos":480673417}},"pass":false,"entropy":4.623292490831057,"entropy_diff":6.580454403604108e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,42934,216,33,25,216,33,1292]}
{"generation":269,"metadata":{"sampler_time":{"secs":0,"nanos":71505},"constraint_time":{"secs":0,"nanos":453293},"parser_time":{"secs":0,"nanos":494285},"transformer_time":{"secs":0,"nanos":335143544},"trie_time":{"secs":0,"nanos":3201288},"total_time":{"secs":0,"nanos":440832166}},"pass":false,"entropy":4.623292468519675,"entropy_diff":2.231138207520189e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,216]}
{"generation":270,"metadata":{"sampler_time":{"secs":0,"nanos":107169},"constraint_time":{"secs":0,"nanos":597880},"parser_time":{"secs":0,"nanos":658208},"transformer_time":{"secs":0,"nanos":446954172},"trie_time":{"secs":0,"nanos":3260090},"total_time":{"secs":0,"nanos":597977667}},"pass":false,"entropy":4.623292429828301,"entropy_diff":3.869137366052655e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 0 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":271,"metadata":{"sampler_time":{"secs":0,"nanos":65380},"constraint_time":{"secs":0,"nanos":431923},"parser_time":{"secs":0,"nanos":546381},"transformer_time":{"secs":0,"nanos":406880958},"trie_time":{"secs":0,"nanos":2688456},"total_time":{"secs":0,"nanos":528325500}},"pass":false,"entropy":4.6232923948137925,"entropy_diff":3.501450862586353e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":272,"metadata":{"sampler_time":{"secs":0,"nanos":82665},"constraint_time":{"secs":0,"nanos":423703},"parser_time":{"secs":0,"nanos":518708},"transformer_time":{"secs":0,"nanos":378027796},"trie_time":{"secs":0,"nanos":2606165},"total_time":{"secs":0,"nanos":491760125}},"pass":false,"entropy":4.62329239397893,"entropy_diff":8.348628455223661e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,32,1292]}
{"generation":273,"metadata":{"sampler_time":{"secs":0,"nanos":98793},"constraint_time":{"secs":0,"nanos":545876},"parser_time":{"secs":0,"nanos":783539},"transformer_time":{"secs":0,"nanos":511797166},"trie_time":{"secs":0,"nanos":3450797},"total_time":{"secs":0,"nanos":671065625}},"pass":false,"entropy":4.623292392778754,"entropy_diff":1.2001759586155458e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col2 \" \" (str.indexof col2 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,34,476,476,365,1321,30,3888,1714,664,34,476,476,216,33,7754,216,33,1292]}
{"generation":274,"metadata":{"sampler_time":{"secs":0,"nanos":92503},"constraint_time":{"secs":0,"nanos":783786},"parser_time":{"secs":0,"nanos":683703},"transformer_time":{"secs":0,"nanos":431694458},"trie_time":{"secs":0,"nanos":4541168},"total_time":{"secs":0,"nanos":584061709}},"pass":false,"entropy":4.623292391219244,"entropy_diff":1.5595098545873043e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":275,"metadata":{"sampler_time":{"secs":0,"nanos":135126},"constraint_time":{"secs":0,"nanos":721667},"parser_time":{"secs":0,"nanos":899505},"transformer_time":{"secs":0,"nanos":524890663},"trie_time":{"secs":0,"nanos":3559657},"total_time":{"secs":0,"nanos":701647708}},"pass":false,"entropy":4.623292379596833,"entropy_diff":1.1622410589495757e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (- (str.indexof col1 \" \" 1) 1)) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":276,"metadata":{"sampler_time":{"secs":0,"nanos":90663},"constraint_time":{"secs":0,"nanos":479876},"parser_time":{"secs":0,"nanos":572503},"transformer_time":{"secs":0,"nanos":358893707},"trie_time":{"secs":0,"nanos":7490539},"total_time":{"secs":0,"nanos":511791834}},"pass":false,"entropy":4.623292377947357,"entropy_diff":1.649476111253989e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,34,1292]}
{"generation":277,"metadata":{"sampler_time":{"secs":0,"nanos":125912},"constraint_time":{"secs":0,"nanos":599081},"parser_time":{"secs":0,"nanos":698461},"transformer_time":{"secs":0,"nanos":429404917},"trie_time":{"secs":0,"nanos":3885249},"total_time":{"secs":0,"nanos":582941958}},"pass":false,"entropy":4.623292371800102,"entropy_diff":6.1472551493579886e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col2 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":278,"metadata":{"sampler_time":{"secs":0,"nanos":125288},"constraint_time":{"secs":0,"nanos":858040},"parser_time":{"secs":0,"nanos":962336},"transformer_time":{"secs":0,"nanos":465790664},"trie_time":{"secs":0,"nanos":5370455},"total_time":{"secs":0,"nanos":653477375}},"pass":false,"entropy":4.62329236565892,"entropy_diff":6.141181785324079e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"USA\" (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,24842,18,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":279,"metadata":{"sampler_time":{"secs":0,"nanos":88620},"constraint_time":{"secs":0,"nanos":914084},"parser_time":{"secs":0,"nanos":689201},"transformer_time":{"secs":0,"nanos":469222751},"trie_time":{"secs":0,"nanos":4405843},"total_time":{"secs":0,"nanos":615115958}},"pass":false,"entropy":4.623292336616898,"entropy_diff":2.9042022120506772e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 col2 \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,34,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":280,"metadata":{"sampler_time":{"secs":0,"nanos":80250},"constraint_time":{"secs":0,"nanos":538246},"parser_time":{"secs":0,"nanos":543795},"transformer_time":{"secs":0,"nanos":421010912},"trie_time":{"secs":0,"nanos":7554880},"total_time":{"secs":0,"nanos":554165458}},"pass":false,"entropy":4.623292323292837,"entropy_diff":1.3324060965658191e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"MD\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,9815,18,216,33,25,216,33,1292]}
{"generation":281,"metadata":{"sampler_time":{"secs":0,"nanos":134293},"constraint_time":{"secs":0,"nanos":639090},"parser_time":{"secs":0,"nanos":821693},"transformer_time":{"secs":0,"nanos":556651872},"trie_time":{"secs":0,"nanos":7222924},"total_time":{"secs":0,"nanos":735725791}},"pass":false,"entropy":4.623292318029983,"entropy_diff":5.262854152476848e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":282,"metadata":{"sampler_time":{"secs":0,"nanos":103375},"constraint_time":{"secs":0,"nanos":584707},"parser_time":{"secs":0,"nanos":550755},"transformer_time":{"secs":0,"nanos":495019624},"trie_time":{"secs":0,"nanos":3044828},"total_time":{"secs":0,"nanos":634073583}},"pass":false,"entropy":4.623292305022942,"entropy_diff":1.3007040777779366e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col2 0 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":283,"metadata":{"sampler_time":{"secs":0,"nanos":49126},"constraint_time":{"secs":0,"nanos":458167},"parser_time":{"secs":0,"nanos":486707},"transformer_time":{"secs":0,"nanos":412662792},"trie_time":{"secs":0,"nanos":2929832},"total_time":{"secs":0,"nanos":527653500}},"pass":false,"entropy":4.623292281055624,"entropy_diff":2.396731790810236e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"NY\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,30513,18,216,33,25,216,33,1292]}
{"generation":284,"metadata":{"sampler_time":{"secs":0,"nanos":82085},"constraint_time":{"secs":0,"nanos":403041},"parser_time":{"secs":0,"nanos":455458},"transformer_time":{"secs":0,"nanos":421402957},"trie_time":{"secs":0,"nanos":2412795},"total_time":{"secs":0,"nanos":538395292}},"pass":false,"entropy":4.62329227642514,"entropy_diff":4.630484440326654e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":285,"metadata":{"sampler_time":{"secs":0,"nanos":102041},"constraint_time":{"secs":0,"nanos":1075584},"parser_time":{"secs":0,"nanos":636824},"transformer_time":{"secs":0,"nanos":548838707},"trie_time":{"secs":0,"nanos":2601000},"total_time":{"secs":0,"nanos":708282834}},"pass":false,"entropy":4.623292272361505,"entropy_diff":4.063634762019319e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \"USA\" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,24842,18,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":286,"metadata":{"sampler_time":{"secs":0,"nanos":104491},"constraint_time":{"secs":0,"nanos":787544},"parser_time":{"secs":0,"nanos":877875},"transformer_time":{"secs":0,"nanos":739793496},"trie_time":{"secs":0,"nanos":3113835},"total_time":{"secs":0,"nanos":949994834}},"pass":false,"entropy":4.623292272128361,"entropy_diff":2.3314417063602377e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) (str.indexof col2 (str.substr col2 0 1) (str.indexof col2 \" \" 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":287,"metadata":{"sampler_time":{"secs":0,"nanos":77292},"constraint_time":{"secs":0,"nanos":478289},"parser_time":{"secs":0,"nanos":588165},"transformer_time":{"secs":0,"nanos":461579416},"trie_time":{"secs":0,"nanos":3061831},"total_time":{"secs":0,"nanos":599626959}},"pass":false,"entropy":4.623292271997155,"entropy_diff":1.31206157050201e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":288,"metadata":{"sampler_time":{"secs":0,"nanos":78915},"constraint_time":{"secs":0,"nanos":538416},"parser_time":{"secs":0,"nanos":520833},"transformer_time":{"secs":0,"nanos":465916290},"trie_time":{"secs":0,"nanos":2640287},"total_time":{"secs":0,"nanos":603291000}},"pass":false,"entropy":4.62329225952507,"entropy_diff":1.2472084698345043e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,32,25,216,33,1292]}
{"generation":289,"metadata":{"sampler_time":{"secs":0,"nanos":82080},"constraint_time":{"secs":0,"nanos":701121},"parser_time":{"secs":0,"nanos":519627},"transformer_time":{"secs":0,"nanos":445980497},"trie_time":{"secs":0,"nanos":2644954},"total_time":{"secs":0,"nanos":575746500}},"pass":false,"entropy":4.6232922594479176,"entropy_diff":7.715250660567108e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,34,25,216,33,25,216,33,1292]}
{"generation":290,"metadata":{"sampler_time":{"secs":0,"nanos":114583},"constraint_time":{"secs":0,"nanos":515663},"parser_time":{"secs":0,"nanos":529084},"transformer_time":{"secs":0,"nanos":466026625},"trie_time":{"secs":0,"nanos":2633460},"total_time":{"secs":0,"nanos":601326583}},"pass":false,"entropy":4.62329225782853,"entropy_diff":1.619387290929808e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,34,25,216,33,25,216,33,1292]}
{"generation":291,"metadata":{"sampler_time":{"secs":0,"nanos":88756},"constraint_time":{"secs":0,"nanos":507746},"parser_time":{"secs":0,"nanos":576497},"transformer_time":{"secs":0,"nanos":468139291},"trie_time":{"secs":0,"nanos":2665988},"total_time":{"secs":0,"nanos":604759458}},"pass":false,"entropy":4.623292257620563,"entropy_diff":2.0796697697278432e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,32,25,216,33,1292]}
{"generation":292,"metadata":{"sampler_time":{"secs":0,"nanos":78329},"constraint_time":{"secs":0,"nanos":464667},"parser_time":{"secs":0,"nanos":570117},"transformer_time":{"secs":0,"nanos":468998996},"trie_time":{"secs":0,"nanos":2596674},"total_time":{"secs":0,"nanos":605574084}},"pass":false,"entropy":4.6232922575606175,"entropy_diff":5.994582608082055e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,34,25,216,33,1292]}
{"generation":293,"metadata":{"sampler_time":{"secs":0,"nanos":131169},"constraint_time":{"secs":0,"nanos":681209},"parser_time":{"secs":0,"nanos":950880},"transformer_time":{"secs":0,"nanos":721974914},"trie_time":{"secs":0,"nanos":2654078},"total_time":{"secs":0,"nanos":928011500}},"pass":false,"entropy":4.623292257520971,"entropy_diff":3.964650829857419e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) (str.indexof col2 (str.substr col2 1 2) (str.indexof col2 \" \" 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,33,216,34,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":294,"metadata":{"sampler_time":{"secs":0,"nanos":153998},"constraint_time":{"secs":0,"nanos":635294},"parser_time":{"secs":0,"nanos":581753},"transformer_time":{"secs":0,"nanos":535389708},"trie_time":{"secs":0,"nanos":2759831},"total_time":{"secs":0,"nanos":691017334}},"pass":false,"entropy":4.623292257460331,"entropy_diff":6.064038160502605e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 (str.indexof col2 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":295,"metadata":{"sampler_time":{"secs":0,"nanos":111203},"constraint_time":{"secs":0,"nanos":1071583},"parser_time":{"secs":0,"nanos":557367},"transformer_time":{"secs":0,"nanos":535340045},"trie_time":{"secs":0,"nanos":2764253},"total_time":{"secs":0,"nanos":689063750}},"pass":false,"entropy":4.623292257316002,"entropy_diff":1.4432899320127035e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \",\" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":296,"metadata":{"sampler_time":{"secs":0,"nanos":144669},"constraint_time":{"secs":0,"nanos":976999},"parser_time":{"secs":0,"nanos":641955},"transformer_time":{"secs":0,"nanos":546426665},"trie_time":{"secs":0,"nanos":2793920},"total_time":{"secs":0,"nanos":703959459}},"pass":false,"entropy":4.623292257167455,"entropy_diff":1.4854695251642624e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 (str.indexof col1 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":297,"metadata":{"sampler_time":{"secs":0,"nanos":106751},"constraint_time":{"secs":0,"nanos":384454},"parser_time":{"secs":0,"nanos":407121},"transformer_time":{"secs":0,"nanos":384767247},"trie_time":{"secs":0,"nanos":2615426},"total_time":{"secs":0,"nanos":499098083}},"pass":false,"entropy":4.623292256668138,"entropy_diff":4.993170321654361e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,34,1292]}
{"generation":298,"metadata":{"sampler_time":{"secs":0,"nanos":123332},"constraint_time":{"secs":0,"nanos":515296},"parser_time":{"secs":0,"nanos":510906},"transformer_time":{"secs":0,"nanos":449411251},"trie_time":{"secs":0,"nanos":2585211},"total_time":{"secs":0,"nanos":585936167}},"pass":false,"entropy":4.6232922545929505,"entropy_diff":2.0751871332436167e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,476,20361,216,33,25,216,33,1292]}
{"generation":299,"metadata":{"sampler_time":{"secs":0,"nanos":139628},"constraint_time":{"secs":0,"nanos":364666},"parser_time":{"secs":0,"nanos":635710},"transformer_time":{"secs":0,"nanos":478153250},"trie_time":{"secs":0,"nanos":2623883},"total_time":{"secs":0,"nanos":621301625}},"pass":false,"entropy":4.623292252117658,"entropy_diff":2.4752928595717094e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ 1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":300,"metadata":{"sampler_time":{"secs":0,"nanos":126042},"constraint_time":{"secs":0,"nanos":973713},"parser_time":{"secs":0,"nanos":621378},"transformer_time":{"secs":0,"nanos":459984330},"trie_time":{"secs":0,"nanos":2866627},"total_time":{"secs":0,"nanos":596934417}},"pass":false,"entropy":4.6232922511651715,"entropy_diff":9.52486090000093e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"USA\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,24842,1715,216,34,25,216,33,1292]}
{"generation":301,"metadata":{"sampler_time":{"secs":0,"nanos":218333},"constraint_time":{"secs":0,"nanos":632419},"parser_time":{"secs":0,"nanos":879007},"transformer_time":{"secs":0,"nanos":651064497},"trie_time":{"secs":0,"nanos":2875966},"total_time":{"secs":0,"nanos":847047209}},"pass":false,"entropy":4.623292251147874,"entropy_diff":1.729727472365994e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) (str.indexof col1 \" \" (str.indexof col1 \" \" (str.indexof col1 \" \" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,216,33,1292,7754]}
{"generation":302,"metadata":{"sampler_time":{"secs":0,"nanos":151131},"constraint_time":{"secs":0,"nanos":625581},"parser_time":{"secs":0,"nanos":804043},"transformer_time":{"secs":0,"nanos":594080418},"trie_time":{"secs":0,"nanos":3083094},"total_time":{"secs":0,"nanos":773319708}},"pass":false,"entropy":4.623292251135328,"entropy_diff":1.2546408356683969e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof \" \" col1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,476,476,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":303,"metadata":{"sampler_time":{"secs":0,"nanos":113330},"constraint_time":{"secs":0,"nanos":962958},"parser_time":{"secs":0,"nanos":594208},"transformer_time":{"secs":0,"nanos":503497418},"trie_time":{"secs":0,"nanos":2935420},"total_time":{"secs":0,"nanos":653189291}},"pass":false,"entropy":4.623292251127669,"entropy_diff":7.65876251307418e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,42934,25,216,33,25,216,33,1292]}
{"generation":304,"metadata":{"sampler_time":{"secs":0,"nanos":84672},"constraint_time":{"secs":0,"nanos":563131},"parser_time":{"secs":0,"nanos":654327},"transformer_time":{"secs":0,"nanos":451424249},"trie_time":{"secs":0,"nanos":3185252},"total_time":{"secs":0,"nanos":588502333}},"pass":false,"entropy":4.623292251094205,"entropy_diff":3.346389831904162e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,34,25,216,33,1292]}
{"generation":305,"metadata":{"sampler_time":{"secs":0,"nanos":110625},"constraint_time":{"secs":0,"nanos":632628},"parser_time":{"secs":0,"nanos":684419},"transformer_time":{"secs":0,"nanos":511046251},"trie_time":{"secs":0,"nanos":3038294},"total_time":{"secs":0,"nanos":664094000}},"pass":false,"entropy":4.623292251082681,"entropy_diff":1.1524114995609125e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":306,"metadata":{"sampler_time":{"secs":0,"nanos":95454},"constraint_time":{"secs":0,"nanos":599746},"parser_time":{"secs":0,"nanos":653545},"transformer_time":{"secs":0,"nanos":460621752},"trie_time":{"secs":0,"nanos":2941678},"total_time":{"secs":0,"nanos":597767625}},"pass":false,"entropy":4.623292251037039,"entropy_diff":4.5641712631550035e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"PA\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,4442,1715,216,34,25,216,33,1292]}
{"generation":307,"metadata":{"sampler_time":{"secs":0,"nanos":99999},"constraint_time":{"secs":0,"nanos":398126},"parser_time":{"secs":0,"nanos":464751},"transformer_time":{"secs":0,"nanos":386061829},"trie_time":{"secs":0,"nanos":2638622},"total_time":{"secs":0,"nanos":498646583}},"pass":false,"entropy":4.623292251027293,"entropy_diff":9.745981799369474e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \"USA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,24842,18,216,33,25,216,33,1292]}
{"generation":308,"metadata":{"sampler_time":{"secs":0,"nanos":114292},"constraint_time":{"secs":0,"nanos":790623},"parser_time":{"secs":0,"nanos":546664},"transformer_time":{"secs":0,"nanos":452684041},"trie_time":{"secs":0,"nanos":2520546},"total_time":{"secs":0,"nanos":589112041}},"pass":false,"entropy":4.623292245031211,"entropy_diff":5.996082741432929e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 col1 col2) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,33,664,34,25,476,476,216,33,25,216,33,1292]}
{"generation":309,"metadata":{"sampler_time":{"secs":0,"nanos":76203},"constraint_time":{"secs":0,"nanos":392335},"parser_time":{"secs":0,"nanos":464548},"transformer_time":{"secs":0,"nanos":377842499},"trie_time":{"secs":0,"nanos":2587462},"total_time":{"secs":0,"nanos":490397917}},"pass":false,"entropy":4.623292238832926,"entropy_diff":6.1982845522834396e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,32,25,216,33,1292]}
{"generation":310,"metadata":{"sampler_time":{"secs":0,"nanos":115703},"constraint_time":{"secs":0,"nanos":570002},"parser_time":{"secs":0,"nanos":704959},"transformer_time":{"secs":0,"nanos":510636585},"trie_time":{"secs":0,"nanos":2964834},"total_time":{"secs":0,"nanos":664299042}},"pass":false,"entropy":4.6232922303113835,"entropy_diff":8.52154258268456e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":311,"metadata":{"sampler_time":{"secs":0,"nanos":127954},"constraint_time":{"secs":0,"nanos":1392541},"parser_time":{"secs":0,"nanos":658666},"transformer_time":{"secs":0,"nanos":502540959},"trie_time":{"secs":0,"nanos":3067712},"total_time":{"secs":0,"nanos":661434750}},"pass":false,"entropy":4.623292230292384,"entropy_diff":1.899991275422508e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,42934,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":312,"metadata":{"sampler_time":{"secs":0,"nanos":114128},"constraint_time":{"secs":0,"nanos":623451},"parser_time":{"secs":0,"nanos":591294},"transformer_time":{"secs":0,"nanos":452046123},"trie_time":{"secs":0,"nanos":3025794},"total_time":{"secs":0,"nanos":586236625}},"pass":false,"entropy":4.6232922302383725,"entropy_diff":5.4011017880384316e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,42934,25,216,33,25,216,33,1292]}
{"generation":313,"metadata":{"sampler_time":{"secs":0,"nanos":74374},"constraint_time":{"secs":0,"nanos":519372},"parser_time":{"secs":0,"nanos":576079},"transformer_time":{"secs":0,"nanos":452555541},"trie_time":{"secs":0,"nanos":4049126},"total_time":{"secs":0,"nanos":591030459}},"pass":false,"entropy":4.623292230160429,"entropy_diff":7.794387357762389e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,32,1292]}
{"generation":314,"metadata":{"sampler_time":{"secs":0,"nanos":104293},"constraint_time":{"secs":0,"nanos":619878},"parser_time":{"secs":0,"nanos":706339},"transformer_time":{"secs":0,"nanos":508549375},"trie_time":{"secs":0,"nanos":3119537},"total_time":{"secs":0,"nanos":674606375}},"pass":false,"entropy":4.623292230151746,"entropy_diff":8.682832230988424e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col2 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,34,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":315,"metadata":{"sampler_time":{"secs":0,"nanos":106538},"constraint_time":{"secs":0,"nanos":565167},"parser_time":{"secs":0,"nanos":600114},"transformer_time":{"secs":0,"nanos":449465876},"trie_time":{"secs":0,"nanos":3421335},"total_time":{"secs":0,"nanos":587754291}},"pass":false,"entropy":4.623292230144101,"entropy_diff":7.644551658358978e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,34,1292]}
{"generation":316,"metadata":{"sampler_time":{"secs":0,"nanos":109921},"constraint_time":{"secs":0,"nanos":1008582},"parser_time":{"secs":0,"nanos":689079},"transformer_time":{"secs":0,"nanos":505833752},"trie_time":{"secs":0,"nanos":3710129},"total_time":{"secs":0,"nanos":661336208}},"pass":false,"entropy":4.623292230105882,"entropy_diff":3.821920557811609e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":317,"metadata":{"sampler_time":{"secs":0,"nanos":139292},"constraint_time":{"secs":0,"nanos":716377},"parser_time":{"secs":0,"nanos":880828},"transformer_time":{"secs":0,"nanos":666458127},"trie_time":{"secs":0,"nanos":3198120},"total_time":{"secs":0,"nanos":889023709}},"pass":false,"entropy":4.623292230076418,"entropy_diff":2.9464430895131954e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 (str.replace col2 col1 col1) (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":318,"metadata":{"sampler_time":{"secs":0,"nanos":162996},"constraint_time":{"secs":0,"nanos":758288},"parser_time":{"secs":0,"nanos":886713},"transformer_time":{"secs":0,"nanos":666012667},"trie_time":{"secs":0,"nanos":3224907},"total_time":{"secs":0,"nanos":867204791}},"pass":false,"entropy":4.623292230074772,"entropy_diff":1.645794611704332e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":319,"metadata":{"sampler_time":{"secs":0,"nanos":235753},"constraint_time":{"secs":0,"nanos":842999},"parser_time":{"secs":0,"nanos":1023539},"transformer_time":{"secs":0,"nanos":765741294},"trie_time":{"secs":0,"nanos":3225875},"total_time":{"secs":0,"nanos":996056208}},"pass":false,"entropy":4.623292230073747,"entropy_diff":1.0249578963339445e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":320,"metadata":{"sampler_time":{"secs":0,"nanos":89792},"constraint_time":{"secs":0,"nanos":507375},"parser_time":{"secs":0,"nanos":598705},"transformer_time":{"secs":0,"nanos":478549833},"trie_time":{"secs":0,"nanos":3229628},"total_time":{"secs":0,"nanos":622678541}},"pass":false,"entropy":4.623292230071123,"entropy_diff":2.62367905179417e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.len col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,4152,664,33,1292,216,33,1292]}
{"generation":321,"metadata":{"sampler_time":{"secs":0,"nanos":131367},"constraint_time":{"secs":0,"nanos":595416},"parser_time":{"secs":0,"nanos":668371},"transformer_time":{"secs":0,"nanos":518895336},"trie_time":{"secs":0,"nanos":3362255},"total_time":{"secs":0,"nanos":682232041}},"pass":false,"entropy":4.623292230064701,"entropy_diff":6.4224181528516056e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,32,25,216,33,1292]}
{"generation":322,"metadata":{"sampler_time":{"secs":0,"nanos":142247},"constraint_time":{"secs":0,"nanos":709790},"parser_time":{"secs":0,"nanos":733622},"transformer_time":{"secs":0,"nanos":504819540},"trie_time":{"secs":0,"nanos":3410015},"total_time":{"secs":0,"nanos":663598334}},"pass":false,"entropy":4.623292230064022,"entropy_diff":6.785683126508957e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace \" \" \",\" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,476,476,42934,476,49088,216,33,25,216,33,1292]}
{"generation":323,"metadata":{"sampler_time":{"secs":0,"nanos":129373},"constraint_time":{"secs":0,"nanos":1109252},"parser_time":{"secs":0,"nanos":692657},"transformer_time":{"secs":0,"nanos":526719375},"trie_time":{"secs":0,"nanos":3187667},"total_time":{"secs":0,"nanos":687743083}},"pass":false,"entropy":4.62329223005065,"entropy_diff":1.3372414287005085e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":324,"metadata":{"sampler_time":{"secs":0,"nanos":101580},"constraint_time":{"secs":0,"nanos":550700},"parser_time":{"secs":0,"nanos":597077},"transformer_time":{"secs":0,"nanos":468964667},"trie_time":{"secs":0,"nanos":3024337},"total_time":{"secs":0,"nanos":605400959}},"pass":false,"entropy":4.6232922300144805,"entropy_diff":3.61692897854482e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr \"USA\" 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,476,24842,18,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":325,"metadata":{"sampler_time":{"secs":0,"nanos":94251},"constraint_time":{"secs":0,"nanos":460876},"parser_time":{"secs":0,"nanos":604073},"transformer_time":{"secs":0,"nanos":446367665},"trie_time":{"secs":0,"nanos":4693046},"total_time":{"secs":0,"nanos":584106042}},"pass":false,"entropy":4.623292228114027,"entropy_diff":1.900453128200752e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof col2 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754]}
{"generation":326,"metadata":{"sampler_time":{"secs":0,"nanos":55208},"constraint_time":{"secs":0,"nanos":323204},"parser_time":{"secs":0,"nanos":470449},"transformer_time":{"secs":0,"nanos":376087584},"trie_time":{"secs":0,"nanos":3356498},"total_time":{"secs":0,"nanos":492586875}},"pass":false,"entropy":4.6232922278967195,"entropy_diff":2.1730794941277054e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,216,34,1292]}
{"generation":327,"metadata":{"sampler_time":{"secs":0,"nanos":75369},"constraint_time":{"secs":0,"nanos":365624},"parser_time":{"secs":0,"nanos":500755},"transformer_time":{"secs":0,"nanos":370516960},"trie_time":{"secs":0,"nanos":3749549},"total_time":{"secs":0,"nanos":483256333}},"pass":false,"entropy":4.623292227532411,"entropy_diff":3.6430858330049887e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,32,1292]}
{"generation":328,"metadata":{"sampler_time":{"secs":0,"nanos":153415},"constraint_time":{"secs":0,"nanos":1276707},"parser_time":{"secs":0,"nanos":770919},"transformer_time":{"secs":0,"nanos":514531793},"trie_time":{"secs":0,"nanos":3331248},"total_time":{"secs":0,"nanos":673206750}},"pass":false,"entropy":4.62329222498716,"entropy_diff":2.5452511209778095e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 (str.replace col1 \" \" \",\") \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":329,"metadata":{"sampler_time":{"secs":0,"nanos":134082},"constraint_time":{"secs":0,"nanos":428580},"parser_time":{"secs":0,"nanos":618915},"transformer_time":{"secs":0,"nanos":470728249},"trie_time":{"secs":0,"nanos":2922835},"total_time":{"secs":0,"nanos":608142542}},"pass":false,"entropy":4.623292217648837,"entropy_diff":7.33832283827951e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.len col1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,4152,664,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":330,"metadata":{"sampler_time":{"secs":0,"nanos":99000},"constraint_time":{"secs":0,"nanos":360122},"parser_time":{"secs":0,"nanos":582825},"transformer_time":{"secs":0,"nanos":461498792},"trie_time":{"secs":0,"nanos":2959756},"total_time":{"secs":0,"nanos":594303667}},"pass":false,"entropy":4.623292217456485,"entropy_diff":1.9235191217603642e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof \"USA\" \"PA\" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,476,24842,18,476,4442,18,216,33,7754]}
{"generation":331,"metadata":{"sampler_time":{"secs":0,"nanos":91917},"constraint_time":{"secs":0,"nanos":383545},"parser_time":{"secs":0,"nanos":473163},"transformer_time":{"secs":0,"nanos":386913874},"trie_time":{"secs":0,"nanos":3005167},"total_time":{"secs":0,"nanos":499169458}},"pass":false,"entropy":4.623292217387743,"entropy_diff":6.874234514953059e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"USA\" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,24842,18,216,34,25,216,33,1292]}
{"generation":332,"metadata":{"sampler_time":{"secs":0,"nanos":122789},"constraint_time":{"secs":0,"nanos":642835},"parser_time":{"secs":0,"nanos":582042},"transformer_time":{"secs":0,"nanos":445924505},"trie_time":{"secs":0,"nanos":2872598},"total_time":{"secs":0,"nanos":583086166}},"pass":false,"entropy":4.623292216057234,"entropy_diff":1.3305090362791816e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":333,"metadata":{"sampler_time":{"secs":0,"nanos":56998},"constraint_time":{"secs":0,"nanos":414538},"parser_time":{"secs":0,"nanos":474504},"transformer_time":{"secs":0,"nanos":395148585},"trie_time":{"secs":0,"nanos":2801118},"total_time":{"secs":0,"nanos":507330625}},"pass":false,"entropy":4.623292214420254,"entropy_diff":1.6369794408888083e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"USA\" \"CA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,24842,18,476,8970,18,216,33,25,216,33,1292]}
{"generation":334,"metadata":{"sampler_time":{"secs":0,"nanos":110505},"constraint_time":{"secs":0,"nanos":382914},"parser_time":{"secs":0,"nanos":487674},"transformer_time":{"secs":0,"nanos":446979378},"trie_time":{"secs":0,"nanos":2959324},"total_time":{"secs":0,"nanos":579789500}},"pass":false,"entropy":4.623292206425012,"entropy_diff":7.995241801950215e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) (str.indexof col2 col1 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754]}
{"generation":335,"metadata":{"sampler_time":{"secs":0,"nanos":84915},"constraint_time":{"secs":0,"nanos":368416},"parser_time":{"secs":0,"nanos":427503},"transformer_time":{"secs":0,"nanos":373778045},"trie_time":{"secs":0,"nanos":2835667},"total_time":{"secs":0,"nanos":484285416}},"pass":false,"entropy":4.623292204239853,"entropy_diff":2.185159608814047e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,476,476,216,33,25,216,33,1292]}
{"generation":336,"metadata":{"sampler_time":{"secs":0,"nanos":160916},"constraint_time":{"secs":0,"nanos":1002832},"parser_time":{"secs":0,"nanos":734382},"transformer_time":{"secs":0,"nanos":536889921},"trie_time":{"secs":0,"nanos":2889825},"total_time":{"secs":0,"nanos":692421250}},"pass":false,"entropy":4.6232921758015735,"entropy_diff":2.8438279287001933e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":337,"metadata":{"sampler_time":{"secs":0,"nanos":139249},"constraint_time":{"secs":0,"nanos":534419},"parser_time":{"secs":0,"nanos":582087},"transformer_time":{"secs":0,"nanos":463053666},"trie_time":{"secs":0,"nanos":2780459},"total_time":{"secs":0,"nanos":598970166}},"pass":false,"entropy":4.6232921732895536,"entropy_diff":2.5120199254047293e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 1 2) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,476,216,33,25,216,33,1292]}
{"generation":338,"metadata":{"sampler_time":{"secs":0,"nanos":148668},"constraint_time":{"secs":0,"nanos":603921},"parser_time":{"secs":0,"nanos":779376},"transformer_time":{"secs":0,"nanos":521909292},"trie_time":{"secs":0,"nanos":3240455},"total_time":{"secs":0,"nanos":680493208}},"pass":false,"entropy":4.6232921658623285,"entropy_diff":7.427225057199394e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"USA\") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,24842,1715,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":339,"metadata":{"sampler_time":{"secs":0,"nanos":175625},"constraint_time":{"secs":0,"nanos":625416},"parser_time":{"secs":0,"nanos":786955},"transformer_time":{"secs":0,"nanos":598107919},"trie_time":{"secs":0,"nanos":3285922},"total_time":{"secs":0,"nanos":778907959}},"pass":false,"entropy":4.623292165855433,"entropy_diff":6.895817250551772e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col1 (str.replace col1 col1 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,7754]}
{"generation":340,"metadata":{"sampler_time":{"secs":0,"nanos":135164},"constraint_time":{"secs":0,"nanos":552670},"parser_time":{"secs":0,"nanos":654577},"transformer_time":{"secs":0,"nanos":523073878},"trie_time":{"secs":0,"nanos":3317091},"total_time":{"secs":0,"nanos":678691583}},"pass":false,"entropy":4.623292165854502,"entropy_diff":9.308109838457312e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":341,"metadata":{"sampler_time":{"secs":0,"nanos":164912},"constraint_time":{"secs":0,"nanos":581330},"parser_time":{"secs":0,"nanos":848962},"transformer_time":{"secs":0,"nanos":657023003},"trie_time":{"secs":0,"nanos":3302169},"total_time":{"secs":0,"nanos":853929958}},"pass":false,"entropy":4.623292165852662,"entropy_diff":1.8403056856186595e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 col2 (str.indexof col2 col1 (str.indexof col1 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,1292,7754]}
{"generation":342,"metadata":{"sampler_time":{"secs":0,"nanos":80880},"constraint_time":{"secs":0,"nanos":689251},"parser_time":{"secs":0,"nanos":705538},"transformer_time":{"secs":0,"nanos":515725583},"trie_time":{"secs":0,"nanos":3291337},"total_time":{"secs":0,"nanos":677673458}},"pass":false,"entropy":4.623292165852095,"entropy_diff":5.666578317686799e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" (str.replace col1 \" \" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,365,1321,30,9630,664,33,476,476,476,49088,216,33,25,216,33,1292]}
{"generation":343,"metadata":{"sampler_time":{"secs":0,"nanos":131457},"constraint_time":{"secs":0,"nanos":584080},"parser_time":{"secs":0,"nanos":733002},"transformer_time":{"secs":0,"nanos":595776670},"trie_time":{"secs":0,"nanos":3437081},"total_time":{"secs":0,"nanos":775933208}},"pass":false,"entropy":4.623292165796393,"entropy_diff":5.5702109591493354e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 (str.replace col2 col1 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,34,25,216,33,7754]}
{"generation":344,"metadata":{"sampler_time":{"secs":0,"nanos":82460},"constraint_time":{"secs":0,"nanos":600374},"parser_time":{"secs":0,"nanos":806203},"transformer_time":{"secs":0,"nanos":620479704},"trie_time":{"secs":0,"nanos":3442530},"total_time":{"secs":0,"nanos":806473584}},"pass":false,"entropy":4.62329216579588,"entropy_diff":5.124789481669723e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (+ (str.indexof col1 col2 (str.indexof col2 col1 1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,30425,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,1292,216,33,7754]}
{"generation":345,"metadata":{"sampler_time":{"secs":0,"nanos":148998},"constraint_time":{"secs":0,"nanos":599077},"parser_time":{"secs":0,"nanos":831994},"transformer_time":{"secs":0,"nanos":653761459},"trie_time":{"secs":0,"nanos":3429637},"total_time":{"secs":0,"nanos":849377584}},"pass":false,"entropy":4.623292165792538,"entropy_diff":3.3422153933315712e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 col1 (str.indexof col1 col1 (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":346,"metadata":{"sampler_time":{"secs":0,"nanos":95624},"constraint_time":{"secs":0,"nanos":519205},"parser_time":{"secs":0,"nanos":580174},"transformer_time":{"secs":0,"nanos":486672581},"trie_time":{"secs":0,"nanos":3771129},"total_time":{"secs":0,"nanos":631481042}},"pass":false,"entropy":4.623292165790518,"entropy_diff":2.0197177263980848e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.to.int col2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,1141,30,591,664,34,1292,216,33,1292]}
{"generation":347,"metadata":{"sampler_time":{"secs":0,"nanos":97162},"constraint_time":{"secs":0,"nanos":583904},"parser_time":{"secs":0,"nanos":704293},"transformer_time":{"secs":0,"nanos":512765004},"trie_time":{"secs":0,"nanos":3461038},"total_time":{"secs":0,"nanos":671260042}},"pass":false,"entropy":4.623292165786178,"entropy_diff":4.340527937074512e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":348,"metadata":{"sampler_time":{"secs":0,"nanos":87044},"constraint_time":{"secs":0,"nanos":1102170},"parser_time":{"secs":0,"nanos":625378},"transformer_time":{"secs":0,"nanos":503441291},"trie_time":{"secs":0,"nanos":3513754},"total_time":{"secs":0,"nanos":659225709}},"pass":false,"entropy":4.623292165733029,"entropy_diff":5.3148596634855494e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col2 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,34,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":349,"metadata":{"sampler_time":{"secs":0,"nanos":98624},"constraint_time":{"secs":0,"nanos":596457},"parser_time":{"secs":0,"nanos":552087},"transformer_time":{"secs":0,"nanos":441923084},"trie_time":{"secs":0,"nanos":3584541},"total_time":{"secs":0,"nanos":582048875}},"pass":false,"entropy":4.623292165673201,"entropy_diff":5.982858652942014e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,32,25,216,33,1292]}
{"generation":350,"metadata":{"sampler_time":{"secs":0,"nanos":110046},"constraint_time":{"secs":0,"nanos":603125},"parser_time":{"secs":0,"nanos":680290},"transformer_time":{"secs":0,"nanos":527472917},"trie_time":{"secs":0,"nanos":3548833},"total_time":{"secs":0,"nanos":687587375}},"pass":false,"entropy":4.623292165662034,"entropy_diff":1.1167067270889675e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":351,"metadata":{"sampler_time":{"secs":0,"nanos":112131},"constraint_time":{"secs":0,"nanos":562580},"parser_time":{"secs":0,"nanos":606614},"transformer_time":{"secs":0,"nanos":460632212},"trie_time":{"secs":0,"nanos":3453044},"total_time":{"secs":0,"nanos":599359541}},"pass":false,"entropy":4.623292165647035,"entropy_diff":1.4998668973476015e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"PA\" \"USA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,4442,18,476,24842,1715,216,33,25,216,33,1292]}
{"generation":352,"metadata":{"sampler_time":{"secs":0,"nanos":68873},"constraint_time":{"secs":0,"nanos":697418},"parser_time":{"secs":0,"nanos":600373},"transformer_time":{"secs":0,"nanos":520474542},"trie_time":{"secs":0,"nanos":3596206},"total_time":{"secs":0,"nanos":678709708}},"pass":false,"entropy":4.623292165571661,"entropy_diff":7.537437340943143e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":353,"metadata":{"sampler_time":{"secs":0,"nanos":79754},"constraint_time":{"secs":0,"nanos":841543},"parser_time":{"secs":0,"nanos":787425},"transformer_time":{"secs":0,"nanos":596016419},"trie_time":{"secs":0,"nanos":3633668},"total_time":{"secs":0,"nanos":776865292}},"pass":false,"entropy":4.6232921655704065,"entropy_diff":1.2541079286165768e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col2 (str.replace col2 col2 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,216,33,7754]}
{"generation":354,"metadata":{"sampler_time":{"secs":0,"nanos":83461},"constraint_time":{"secs":0,"nanos":836458},"parser_time":{"secs":0,"nanos":739130},"transformer_time":{"secs":0,"nanos":596504043},"trie_time":{"secs":0,"nanos":3633684},"total_time":{"secs":0,"nanos":777876541}},"pass":false,"entropy":4.623292165569663,"entropy_diff":7.434053372890048e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,7754]}
{"generation":355,"metadata":{"sampler_time":{"secs":0,"nanos":61543},"constraint_time":{"secs":0,"nanos":507242},"parser_time":{"secs":0,"nanos":538699},"transformer_time":{"secs":0,"nanos":453600957},"trie_time":{"secs":0,"nanos":3646375},"total_time":{"secs":0,"nanos":591694459}},"pass":false,"entropy":4.62329216556949,"entropy_diff":1.7319479184152442e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,34,1292]}
{"generation":356,"metadata":{"sampler_time":{"secs":0,"nanos":95878},"constraint_time":{"secs":0,"nanos":501873},"parser_time":{"secs":0,"nanos":550919},"transformer_time":{"secs":0,"nanos":455284377},"trie_time":{"secs":0,"nanos":3923755},"total_time":{"secs":0,"nanos":594424333}},"pass":false,"entropy":4.6232921655649175,"entropy_diff":4.572342504616245e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,216,32,1292]}
{"generation":357,"metadata":{"sampler_time":{"secs":0,"nanos":121246},"constraint_time":{"secs":0,"nanos":1111664},"parser_time":{"secs":0,"nanos":612932},"transformer_time":{"secs":0,"nanos":527993585},"trie_time":{"secs":0,"nanos":3555456},"total_time":{"secs":0,"nanos":684585250}},"pass":false,"entropy":4.623292165562367,"entropy_diff":2.5508484213787597e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":358,"metadata":{"sampler_time":{"secs":0,"nanos":104747},"constraint_time":{"secs":0,"nanos":554164},"parser_time":{"secs":0,"nanos":647875},"transformer_time":{"secs":0,"nanos":546439500},"trie_time":{"secs":0,"nanos":3609620},"total_time":{"secs":0,"nanos":713923250}},"pass":false,"entropy":4.623292165547258,"entropy_diff":1.510880309751883e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (+ 1 (str.indexof col2 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,30425,216,33,365,1321,30,3888,1714,664,34,664,34,216,33,7754,216,33,1292]}
{"generation":359,"metadata":{"sampler_time":{"secs":0,"nanos":148628},"constraint_time":{"secs":0,"nanos":581211},"parser_time":{"secs":0,"nanos":738089},"transformer_time":{"secs":0,"nanos":580927123},"trie_time":{"secs":0,"nanos":3571288},"total_time":{"secs":0,"nanos":761840333}},"pass":false,"entropy":4.623292165537549,"entropy_diff":9.708678305742069e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":360,"metadata":{"sampler_time":{"secs":0,"nanos":150127},"constraint_time":{"secs":0,"nanos":1208580},"parser_time":{"secs":0,"nanos":724124},"transformer_time":{"secs":0,"nanos":595544955},"trie_time":{"secs":0,"nanos":3572675},"total_time":{"secs":0,"nanos":780351959}},"pass":false,"entropy":4.623292165527582,"entropy_diff":9.967138225874805e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,216,33,1292]}
{"generation":361,"metadata":{"sampler_time":{"secs":0,"nanos":92125},"constraint_time":{"secs":0,"nanos":588834},"parser_time":{"secs":0,"nanos":608861},"transformer_time":{"secs":0,"nanos":504486289},"trie_time":{"secs":0,"nanos":3686127},"total_time":{"secs":0,"nanos":659329167}},"pass":false,"entropy":4.623292165518621,"entropy_diff":8.960832076354563e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.at col1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,261,664,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":362,"metadata":{"sampler_time":{"secs":0,"nanos":125167},"constraint_time":{"secs":0,"nanos":1174576},"parser_time":{"secs":0,"nanos":679323},"transformer_time":{"secs":0,"nanos":529623416},"trie_time":{"secs":0,"nanos":3519958},"total_time":{"secs":0,"nanos":690565500}},"pass":false,"entropy":4.6232921655045915,"entropy_diff":1.4029666317583178e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,34,25,216,33,25,216,33,1292]}
{"generation":363,"metadata":{"sampler_time":{"secs":0,"nanos":121837},"constraint_time":{"secs":0,"nanos":1089335},"parser_time":{"secs":0,"nanos":599301},"transformer_time":{"secs":0,"nanos":529591293},"trie_time":{"secs":0,"nanos":3625624},"total_time":{"secs":0,"nanos":689604958}},"pass":false,"entropy":4.623292165498765,"entropy_diff":5.8264504332328215e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":364,"metadata":{"sampler_time":{"secs":0,"nanos":90165},"constraint_time":{"secs":0,"nanos":547003},"parser_time":{"secs":0,"nanos":588540},"transformer_time":{"secs":0,"nanos":444820708},"trie_time":{"secs":0,"nanos":3933500},"total_time":{"secs":0,"nanos":582702375}},"pass":false,"entropy":4.623292165477687,"entropy_diff":2.1078250256323372e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,32,1292]}
{"generation":365,"metadata":{"sampler_time":{"secs":0,"nanos":120541},"constraint_time":{"secs":0,"nanos":534586},"parser_time":{"secs":0,"nanos":500288},"transformer_time":{"secs":0,"nanos":436657081},"trie_time":{"secs":0,"nanos":3525165},"total_time":{"secs":0,"nanos":567151708}},"pass":false,"entropy":4.623292165446503,"entropy_diff":3.11839443156714e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,42934,25,216,33,25,216,33,1292]}
{"generation":366,"metadata":{"sampler_time":{"secs":0,"nanos":185372},"constraint_time":{"secs":0,"nanos":1533792},"parser_time":{"secs":0,"nanos":1046380},"transformer_time":{"secs":0,"nanos":772748541},"trie_time":{"secs":0,"nanos":3733287},"total_time":{"secs":1,"nanos":3040500}},"pass":false,"entropy":4.623292165245243,"entropy_diff":2.0126034172562868e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":367,"metadata":{"sampler_time":{"secs":0,"nanos":163711},"constraint_time":{"secs":0,"nanos":1993204},"parser_time":{"secs":0,"nanos":1256411},"transformer_time":{"secs":0,"nanos":764998126},"trie_time":{"secs":0,"nanos":3553635},"total_time":{"secs":0,"nanos":993637000}},"pass":false,"entropy":4.62329216524369,"entropy_diff":1.552535877635819e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \"USA\" \"PA\") \"USA\") 1) (str.indexof col1 (str.replace col1 (str.replace col1 \"CA\" \"CA\") \"CA\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,24842,18,476,4442,1715,476,24842,1715,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,8970,18,476,8970,1715,476,8970,1715,216,33,7754]}
{"generation":368,"metadata":{"sampler_time":{"secs":0,"nanos":103709},"constraint_time":{"secs":0,"nanos":425291},"parser_time":{"secs":0,"nanos":585706},"transformer_time":{"secs":0,"nanos":462098290},"trie_time":{"secs":0,"nanos":3245178},"total_time":{"secs":0,"nanos":594721458}},"pass":false,"entropy":4.62329216523362,"entropy_diff":1.007016692256002e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof \"USA\" \"PA\" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,476,24842,18,476,4442,18,216,33,1292,216,33,1292]}
{"generation":369,"metadata":{"sampler_time":{"secs":0,"nanos":102962},"constraint_time":{"secs":0,"nanos":1180460},"parser_time":{"secs":0,"nanos":755417},"transformer_time":{"secs":0,"nanos":523943955},"trie_time":{"secs":0,"nanos":3655124},"total_time":{"secs":0,"nanos":686026250}},"pass":false,"entropy":4.623292164958929,"entropy_diff":2.7469049257433653e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":370,"metadata":{"sampler_time":{"secs":0,"nanos":118542},"constraint_time":{"secs":0,"nanos":1080794},"parser_time":{"secs":0,"nanos":673496},"transformer_time":{"secs":0,"nanos":528892794},"trie_time":{"secs":0,"nanos":3625712},"total_time":{"secs":0,"nanos":690761625}},"pass":false,"entropy":4.623292164956628,"entropy_diff":2.3012702854430245e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,32,25,216,33,1292]}
{"generation":371,"metadata":{"sampler_time":{"secs":0,"nanos":117547},"constraint_time":{"secs":0,"nanos":1206332},"parser_time":{"secs":0,"nanos":635592},"transformer_time":{"secs":0,"nanos":522908039},"trie_time":{"secs":0,"nanos":3661197},"total_time":{"secs":0,"nanos":681300834}},"pass":false,"entropy":4.623292164956034,"entropy_diff":5.941913627793838e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":372,"metadata":{"sampler_time":{"secs":0,"nanos":197753},"constraint_time":{"secs":0,"nanos":1360792},"parser_time":{"secs":0,"nanos":1066039},"transformer_time":{"secs":0,"nanos":774259374},"trie_time":{"secs":0,"nanos":3658291},"total_time":{"secs":1,"nanos":4632584}},"pass":false,"entropy":4.623292164954582,"entropy_diff":1.4521717162097048e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col2) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":373,"metadata":{"sampler_time":{"secs":0,"nanos":119288},"constraint_time":{"secs":0,"nanos":651587},"parser_time":{"secs":0,"nanos":780258},"transformer_time":{"secs":0,"nanos":537581714},"trie_time":{"secs":0,"nanos":3614035},"total_time":{"secs":0,"nanos":694364708}},"pass":false,"entropy":4.623292164954023,"entropy_diff":5.586642259913788e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"PA\") 1) (str.indexof col1 \"USA\" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,4442,1715,216,33,25,365,1321,30,3888,1714,664,33,476,24842,18,216,33,7754]}
{"generation":374,"metadata":{"sampler_time":{"secs":0,"nanos":164083},"constraint_time":{"secs":0,"nanos":1085582},"parser_time":{"secs":0,"nanos":707963},"transformer_time":{"secs":0,"nanos":512622539},"trie_time":{"secs":0,"nanos":3709957},"total_time":{"secs":0,"nanos":672847459}},"pass":false,"entropy":4.623292164948672,"entropy_diff":5.3512749786932545e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":375,"metadata":{"sampler_time":{"secs":0,"nanos":111920},"constraint_time":{"secs":0,"nanos":738375},"parser_time":{"secs":0,"nanos":794872},"transformer_time":{"secs":0,"nanos":584080542},"trie_time":{"secs":0,"nanos":4380213},"total_time":{"secs":0,"nanos":772086958}},"pass":false,"entropy":4.623292164945188,"entropy_diff":3.483435762063891e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":376,"metadata":{"sampler_time":{"secs":0,"nanos":141789},"constraint_time":{"secs":0,"nanos":611997},"parser_time":{"secs":0,"nanos":667748},"transformer_time":{"secs":0,"nanos":520414667},"trie_time":{"secs":0,"nanos":4590499},"total_time":{"secs":0,"nanos":688430584}},"pass":false,"entropy":4.6232921649445595,"entropy_diff":6.288303211476887e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":377,"metadata":{"sampler_time":{"secs":0,"nanos":156418},"constraint_time":{"secs":0,"nanos":637081},"parser_time":{"secs":0,"nanos":825250},"transformer_time":{"secs":0,"nanos":663664290},"trie_time":{"secs":0,"nanos":4320249},"total_time":{"secs":0,"nanos":865757250}},"pass":false,"entropy":4.623292164943051,"entropy_diff":1.5081269566508126e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,38799]}
{"generation":378,"metadata":{"sampler_time":{"secs":0,"nanos":145667},"constraint_time":{"secs":0,"nanos":1564254},"parser_time":{"secs":0,"nanos":704459},"transformer_time":{"secs":0,"nanos":531217334},"trie_time":{"secs":0,"nanos":6275746},"total_time":{"secs":0,"nanos":703927584}},"pass":false,"entropy":4.623292164938867,"entropy_diff":4.18420853520729e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,664,33,25,216,33,25,216,33,1292]}
{"generation":379,"metadata":{"sampler_time":{"secs":0,"nanos":122505},"constraint_time":{"secs":0,"nanos":1160081},"parser_time":{"secs":0,"nanos":634800},"transformer_time":{"secs":0,"nanos":515470547},"trie_time":{"secs":0,"nanos":3760540},"total_time":{"secs":0,"nanos":680635291}},"pass":false,"entropy":4.623292164938128,"entropy_diff":7.389644451905042e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":380,"metadata":{"sampler_time":{"secs":0,"nanos":131543},"constraint_time":{"secs":0,"nanos":569746},"parser_time":{"secs":0,"nanos":679242},"transformer_time":{"secs":0,"nanos":513203917},"trie_time":{"secs":0,"nanos":3703997},"total_time":{"secs":0,"nanos":672554375}},"pass":false,"entropy":4.623292164935718,"entropy_diff":2.41051623106614e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 0) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,32,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":381,"metadata":{"sampler_time":{"secs":0,"nanos":107257},"constraint_time":{"secs":0,"nanos":546046},"parser_time":{"secs":0,"nanos":507167},"transformer_time":{"secs":0,"nanos":481490958},"trie_time":{"secs":0,"nanos":3749537},"total_time":{"secs":0,"nanos":630973834}},"pass":false,"entropy":4.623292164929445,"entropy_diff":6.272315999922284e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":382,"metadata":{"sampler_time":{"secs":0,"nanos":120499},"constraint_time":{"secs":0,"nanos":1259165},"parser_time":{"secs":0,"nanos":541699},"transformer_time":{"secs":0,"nanos":528355919},"trie_time":{"secs":0,"nanos":3875336},"total_time":{"secs":0,"nanos":694608500}},"pass":false,"entropy":4.623292164926045,"entropy_diff":3.4008351690317795e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":383,"metadata":{"sampler_time":{"secs":0,"nanos":117123},"constraint_time":{"secs":0,"nanos":786664},"parser_time":{"secs":0,"nanos":449288},"transformer_time":{"secs":0,"nanos":444671171},"trie_time":{"secs":0,"nanos":3894334},"total_time":{"secs":0,"nanos":583396750}},"pass":false,"entropy":4.623292164918788,"entropy_diff":7.256417688950023e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,216,34,1292]}
{"generation":384,"metadata":{"sampler_time":{"secs":0,"nanos":97415},"constraint_time":{"secs":0,"nanos":596873},"parser_time":{"secs":0,"nanos":619920},"transformer_time":{"secs":0,"nanos":461566624},"trie_time":{"secs":0,"nanos":4448079},"total_time":{"secs":0,"nanos":604817917}},"pass":false,"entropy":4.6232921649096195,"entropy_diff":9.168665826564393e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"CT\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,5335,1715,216,33,25,216,33,1292]}
{"generation":385,"metadata":{"sampler_time":{"secs":0,"nanos":241506},"constraint_time":{"secs":0,"nanos":3745548},"parser_time":{"secs":0,"nanos":1687541},"transformer_time":{"secs":0,"nanos":988994789},"trie_time":{"secs":0,"nanos":4258197},"total_time":{"secs":1,"nanos":283599292}},"pass":false,"entropy":4.62329216488553,"entropy_diff":2.4089175099106797e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \"USA\" \"CA\") \"USA\") 1) (str.indexof col1 (str.replace col1 (str.replace col1 \"USA\" \"CT\") \"CT\") (str.indexof col1 (str.replace col1 \"USA\" \"MD\") (str.indexof col1 \"MD\" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,24842,18,476,8970,1715,476,24842,1715,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,24842,18,476,5335,1715,476,5335,1715,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,9815,1715,365,1321,30,3888,1714,664,33,476,9815,18,216,33,1292,7754]}
{"generation":386,"metadata":{"sampler_time":{"secs":0,"nanos":88994},"constraint_time":{"secs":0,"nanos":1271041},"parser_time":{"secs":0,"nanos":702375},"transformer_time":{"secs":0,"nanos":511947294},"trie_time":{"secs":0,"nanos":3989290},"total_time":{"secs":0,"nanos":665591792}},"pass":false,"entropy":4.62329216488392,"entropy_diff":1.610267474916327e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,42934,25,216,33,25,216,33,1292]}
{"generation":387,"metadata":{"sampler_time":{"secs":0,"nanos":125999},"constraint_time":{"secs":0,"nanos":1054751},"parser_time":{"secs":0,"nanos":661830},"transformer_time":{"secs":0,"nanos":528980083},"trie_time":{"secs":0,"nanos":3883699},"total_time":{"secs":0,"nanos":688835500}},"pass":false,"entropy":4.623292164882688,"entropy_diff":1.2319034681240737e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col2 col1 col2) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,34,664,33,664,34,25,664,33,25,216,33,25,216,33,1292]}
{"generation":388,"metadata":{"sampler_time":{"secs":0,"nanos":82366},"constraint_time":{"secs":0,"nanos":625543},"parser_time":{"secs":0,"nanos":592210},"transformer_time":{"secs":0,"nanos":453502709},"trie_time":{"secs":0,"nanos":3747921},"total_time":{"secs":0,"nanos":590501208}},"pass":false,"entropy":4.623292164872555,"entropy_diff":1.0133227590358729e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 col1 col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,33,664,34,25,216,33,25,216,33,1292]}
{"generation":389,"metadata":{"sampler_time":{"secs":0,"nanos":83292},"constraint_time":{"secs":0,"nanos":477120},"parser_time":{"secs":0,"nanos":545084},"transformer_time":{"secs":0,"nanos":438445542},"trie_time":{"secs":0,"nanos":3720255},"total_time":{"secs":0,"nanos":567869916}},"pass":false,"entropy":4.623292164698823,"entropy_diff":1.73732139785443e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,33,25,216,34,25,216,33,1292]}
{"generation":390,"metadata":{"sampler_time":{"secs":0,"nanos":94621},"constraint_time":{"secs":0,"nanos":649214},"parser_time":{"secs":0,"nanos":470867},"transformer_time":{"secs":0,"nanos":386579583},"trie_time":{"secs":0,"nanos":3514714},"total_time":{"secs":0,"nanos":502742375}},"pass":false,"entropy":4.623292164591305,"entropy_diff":1.0751755041837896e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"PA\" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,4442,18,216,34,25,216,33,1292]}
{"generation":391,"metadata":{"sampler_time":{"secs":0,"nanos":113797},"constraint_time":{"secs":0,"nanos":635084},"parser_time":{"secs":0,"nanos":650953},"transformer_time":{"secs":0,"nanos":446080460},"trie_time":{"secs":0,"nanos":3419877},"total_time":{"secs":0,"nanos":592621959}},"pass":false,"entropy":4.623292163633515,"entropy_diff":9.577902915225422e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":392,"metadata":{"sampler_time":{"secs":0,"nanos":67870},"constraint_time":{"secs":0,"nanos":399835},"parser_time":{"secs":0,"nanos":483968},"transformer_time":{"secs":0,"nanos":378900915},"trie_time":{"secs":0,"nanos":3402704},"total_time":{"secs":0,"nanos":498633416}},"pass":false,"entropy":4.6232921622260035,"entropy_diff":1.4075114407319234e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,34,25,216,33,1292]}
{"generation":393,"metadata":{"sampler_time":{"secs":0,"nanos":73628},"constraint_time":{"secs":0,"nanos":563787},"parser_time":{"secs":0,"nanos":602671},"transformer_time":{"secs":0,"nanos":503724832},"trie_time":{"secs":0,"nanos":3663532},"total_time":{"secs":0,"nanos":657472541}},"pass":false,"entropy":4.623292158938055,"entropy_diff":3.2879485800663133e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (str.indexof col2 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":394,"metadata":{"sampler_time":{"secs":0,"nanos":207168},"constraint_time":{"secs":0,"nanos":752293},"parser_time":{"secs":0,"nanos":958498},"transformer_time":{"secs":0,"nanos":809554375},"trie_time":{"secs":0,"nanos":4254252},"total_time":{"secs":1,"nanos":52503875}},"pass":false,"entropy":4.623292158788967,"entropy_diff":1.4908785317402362e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,7754]}
{"generation":395,"metadata":{"sampler_time":{"secs":0,"nanos":217378},"constraint_time":{"secs":0,"nanos":739671},"parser_time":{"secs":0,"nanos":925496},"transformer_time":{"secs":0,"nanos":739783248},"trie_time":{"secs":0,"nanos":4132046},"total_time":{"secs":0,"nanos":967560916}},"pass":false,"entropy":4.623292158788881,"entropy_diff":8.615330671091215e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,7754]}
{"generation":396,"metadata":{"sampler_time":{"secs":0,"nanos":154751},"constraint_time":{"secs":0,"nanos":568085},"parser_time":{"secs":0,"nanos":648667},"transformer_time":{"secs":0,"nanos":595681626},"trie_time":{"secs":0,"nanos":4158504},"total_time":{"secs":0,"nanos":775202334}},"pass":false,"entropy":4.623292158788629,"entropy_diff":2.5224267119483557e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col2) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,7754]}
{"generation":397,"metadata":{"sampler_time":{"secs":0,"nanos":146794},"constraint_time":{"secs":0,"nanos":735790},"parser_time":{"secs":0,"nanos":930204},"transformer_time":{"secs":0,"nanos":741862874},"trie_time":{"secs":0,"nanos":4187246},"total_time":{"secs":0,"nanos":964670666}},"pass":false,"entropy":4.623292158788581,"entropy_diff":4.796163466380676e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) (str.indexof col1 \" \" 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,38799]}
{"generation":398,"metadata":{"sampler_time":{"secs":0,"nanos":108462},"constraint_time":{"secs":0,"nanos":694786},"parser_time":{"secs":0,"nanos":815125},"transformer_time":{"secs":0,"nanos":613173083},"trie_time":{"secs":0,"nanos":4079752},"total_time":{"secs":0,"nanos":802062584}},"pass":false,"entropy":4.623292158788278,"entropy_diff":3.028688411177427e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (+ (str.indexof col1 (str.replace col1 col1 \" \") 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,30425,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,33,7754]}
{"generation":399,"metadata":{"sampler_time":{"secs":0,"nanos":141046},"constraint_time":{"secs":0,"nanos":663169},"parser_time":{"secs":0,"nanos":722745},"transformer_time":{"secs":0,"nanos":588601833},"trie_time":{"secs":0,"nanos":4165375},"total_time":{"secs":0,"nanos":764656042}},"pass":false,"entropy":4.623292158784622,"entropy_diff":3.6557423754857155e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col2 col2 (str.indexof col2 col2 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,38799]}
{"generation":400,"metadata":{"sampler_time":{"secs":0,"nanos":131078},"constraint_time":{"secs":0,"nanos":540374},"parser_time":{"secs":0,"nanos":587532},"transformer_time":{"secs":0,"nanos":486264338},"trie_time":{"secs":0,"nanos":4148459},"total_time":{"secs":0,"nanos":629185250}},"pass":false,"entropy":4.623292158784233,"entropy_diff":3.8902214782865485e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":401,"metadata":{"sampler_time":{"secs":0,"nanos":120586},"constraint_time":{"secs":0,"nanos":573872},"parser_time":{"secs":0,"nanos":648877},"transformer_time":{"secs":0,"nanos":522643917},"trie_time":{"secs":0,"nanos":4182876},"total_time":{"secs":0,"nanos":682622250}},"pass":false,"entropy":4.623292158782657,"entropy_diff":1.5756285165480222e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col2)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,34,1292,216,33,25,216,33,1292]}
{"generation":402,"metadata":{"sampler_time":{"secs":0,"nanos":143386},"constraint_time":{"secs":0,"nanos":610289},"parser_time":{"secs":0,"nanos":691459},"transformer_time":{"secs":0,"nanos":593974291},"trie_time":{"secs":0,"nanos":4244202},"total_time":{"secs":0,"nanos":772916791}},"pass":false,"entropy":4.6232921587815525,"entropy_diff":1.1048939541069558e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 0)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,7754]}
{"generation":403,"metadata":{"sampler_time":{"secs":0,"nanos":183382},"constraint_time":{"secs":0,"nanos":551420},"parser_time":{"secs":0,"nanos":824294},"transformer_time":{"secs":0,"nanos":654921872},"trie_time":{"secs":0,"nanos":4310538},"total_time":{"secs":0,"nanos":850497583}},"pass":false,"entropy":4.623292158781506,"entropy_diff":4.618527782440651e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 col2 (str.indexof col2 col2 (str.indexof col2 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,1292,7754]}
{"generation":404,"metadata":{"sampler_time":{"secs":0,"nanos":138584},"constraint_time":{"secs":0,"nanos":556759},"parser_time":{"secs":0,"nanos":726432},"transformer_time":{"secs":0,"nanos":597436461},"trie_time":{"secs":0,"nanos":4255031},"total_time":{"secs":0,"nanos":777467125}},"pass":false,"entropy":4.623292158781183,"entropy_diff":3.232969447708456e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col2 (str.replace col2 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,33,25,216,33,7754]}
{"generation":405,"metadata":{"sampler_time":{"secs":0,"nanos":84122},"constraint_time":{"secs":0,"nanos":558792},"parser_time":{"secs":0,"nanos":692332},"transformer_time":{"secs":0,"nanos":511500293},"trie_time":{"secs":0,"nanos":4168336},"total_time":{"secs":0,"nanos":672725292}},"pass":false,"entropy":4.623292158781078,"entropy_diff":1.0480505352461478e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \",\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,42934,1292,216,33,25,216,33,1292]}
{"generation":406,"metadata":{"sampler_time":{"secs":0,"nanos":111129},"constraint_time":{"secs":0,"nanos":1459798},"parser_time":{"secs":0,"nanos":645580},"transformer_time":{"secs":0,"nanos":561265667},"trie_time":{"secs":0,"nanos":4106541},"total_time":{"secs":0,"nanos":738580000}},"pass":false,"entropy":4.623292158779232,"entropy_diff":1.8465229345565604e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":407,"metadata":{"sampler_time":{"secs":0,"nanos":157333},"constraint_time":{"secs":0,"nanos":778292},"parser_time":{"secs":0,"nanos":826340},"transformer_time":{"secs":0,"nanos":628339707},"trie_time":{"secs":0,"nanos":4235957},"total_time":{"secs":0,"nanos":826374417}},"pass":false,"entropy":4.6232921587773355,"entropy_diff":1.8962609260597674e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (- (str.indexof col1 (str.replace col1 col1 col1) 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,17481,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,33,7754]}
{"generation":408,"metadata":{"sampler_time":{"secs":0,"nanos":125331},"constraint_time":{"secs":0,"nanos":1208794},"parser_time":{"secs":0,"nanos":690915},"transformer_time":{"secs":0,"nanos":528463165},"trie_time":{"secs":0,"nanos":4119290},"total_time":{"secs":0,"nanos":691668542}},"pass":false,"entropy":4.623292158775783,"entropy_diff":1.552535877635819e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,34,25,216,33,1292]}
{"generation":409,"metadata":{"sampler_time":{"secs":0,"nanos":115549},"constraint_time":{"secs":0,"nanos":543248},"parser_time":{"secs":0,"nanos":656993},"transformer_time":{"secs":0,"nanos":517104915},"trie_time":{"secs":0,"nanos":4265790},"total_time":{"secs":0,"nanos":674370042}},"pass":false,"entropy":4.62329215877443,"entropy_diff":1.3526957332032907e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":410,"metadata":{"sampler_time":{"secs":0,"nanos":76375},"constraint_time":{"secs":0,"nanos":1192997},"parser_time":{"secs":0,"nanos":708656},"transformer_time":{"secs":0,"nanos":528146081},"trie_time":{"secs":0,"nanos":4189788},"total_time":{"secs":0,"nanos":688595042}},"pass":false,"entropy":4.623292158773572,"entropy_diff":8.57980353430321e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":411,"metadata":{"sampler_time":{"secs":0,"nanos":107790},"constraint_time":{"secs":0,"nanos":830373},"parser_time":{"secs":0,"nanos":582041},"transformer_time":{"secs":0,"nanos":519819916},"trie_time":{"secs":0,"nanos":4164805},"total_time":{"secs":0,"nanos":679492959}},"pass":false,"entropy":4.6232921587689555,"entropy_diff":4.616751425601251e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 (str.replace col2 col1 col2)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,365,1321,30,9630,664,34,664,33,664,34,1292,216,33,25,216,33,1292]}
{"generation":412,"metadata":{"sampler_time":{"secs":0,"nanos":122622},"constraint_time":{"secs":0,"nanos":1113416},"parser_time":{"secs":0,"nanos":627169},"transformer_time":{"secs":0,"nanos":531554876},"trie_time":{"secs":0,"nanos":4706202},"total_time":{"secs":0,"nanos":691036167}},"pass":false,"entropy":4.623292158753601,"entropy_diff":1.5354828519775765e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":413,"metadata":{"sampler_time":{"secs":0,"nanos":116580},"constraint_time":{"secs":0,"nanos":595299},"parser_time":{"secs":0,"nanos":706203},"transformer_time":{"secs":0,"nanos":519968668},"trie_time":{"secs":0,"nanos":4282168},"total_time":{"secs":0,"nanos":678072834}},"pass":false,"entropy":4.623292158744089,"entropy_diff":9.511502696568641e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"USA\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,24842,1715,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":414,"metadata":{"sampler_time":{"secs":0,"nanos":123381},"constraint_time":{"secs":0,"nanos":1310998},"parser_time":{"secs":0,"nanos":688787},"transformer_time":{"secs":0,"nanos":502948747},"trie_time":{"secs":0,"nanos":4329927},"total_time":{"secs":0,"nanos":660444833}},"pass":false,"entropy":4.623292158733616,"entropy_diff":1.0473399925103877e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace \",\" \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,42934,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":415,"metadata":{"sampler_time":{"secs":0,"nanos":114790},"constraint_time":{"secs":0,"nanos":557415},"parser_time":{"secs":0,"nanos":697086},"transformer_time":{"secs":0,"nanos":518930627},"trie_time":{"secs":0,"nanos":4379917},"total_time":{"secs":0,"nanos":675368291}},"pass":false,"entropy":4.623292158715115,"entropy_diff":1.850075648235361e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":416,"metadata":{"sampler_time":{"secs":0,"nanos":113036},"constraint_time":{"secs":0,"nanos":585874},"parser_time":{"secs":0,"nanos":680319},"transformer_time":{"secs":0,"nanos":502974703},"trie_time":{"secs":0,"nanos":4397176},"total_time":{"secs":0,"nanos":659472708}},"pass":false,"entropy":4.623292158713688,"entropy_diff":1.4273027204581012e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 \",\" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,42934,476,49088,216,33,25,216,33,1292]}
{"generation":417,"metadata":{"sampler_time":{"secs":0,"nanos":105048},"constraint_time":{"secs":0,"nanos":641122},"parser_time":{"secs":0,"nanos":638785},"transformer_time":{"secs":0,"nanos":477625788},"trie_time":{"secs":0,"nanos":4295213},"total_time":{"secs":0,"nanos":617402375}},"pass":false,"entropy":4.623292158711157,"entropy_diff":2.5304203177256568e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":418,"metadata":{"sampler_time":{"secs":0,"nanos":140339},"constraint_time":{"secs":0,"nanos":676991},"parser_time":{"secs":0,"nanos":973704},"transformer_time":{"secs":0,"nanos":678086417},"trie_time":{"secs":0,"nanos":4408794},"total_time":{"secs":0,"nanos":884181958}},"pass":false,"entropy":4.623292158708511,"entropy_diff":2.645883512286673e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":419,"metadata":{"sampler_time":{"secs":0,"nanos":80754},"constraint_time":{"secs":0,"nanos":565209},"parser_time":{"secs":0,"nanos":548079},"transformer_time":{"secs":0,"nanos":443513878},"trie_time":{"secs":0,"nanos":4274287},"total_time":{"secs":0,"nanos":577577042}},"pass":false,"entropy":4.623292158705937,"entropy_diff":2.574829238710663e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,216,34,1292]}
{"generation":420,"metadata":{"sampler_time":{"secs":0,"nanos":89913},"constraint_time":{"secs":0,"nanos":480299},"parser_time":{"secs":0,"nanos":525666},"transformer_time":{"secs":0,"nanos":435009584},"trie_time":{"secs":0,"nanos":4065920},"total_time":{"secs":0,"nanos":564951125}},"pass":false,"entropy":4.62329215870228,"entropy_diff":3.6566305539054156e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,216,34,25,216,33,1292]}
{"generation":421,"metadata":{"sampler_time":{"secs":0,"nanos":168752},"constraint_time":{"secs":0,"nanos":558538},"parser_time":{"secs":0,"nanos":718912},"transformer_time":{"secs":0,"nanos":654207457},"trie_time":{"secs":0,"nanos":4472373},"total_time":{"secs":0,"nanos":850055292}},"pass":false,"entropy":4.623292158645059,"entropy_diff":5.722089468918057e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col1 col2 (str.indexof col2 col1 (str.indexof col1 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,1292,7754]}
{"generation":422,"metadata":{"sampler_time":{"secs":0,"nanos":120785},"constraint_time":{"secs":0,"nanos":669338},"parser_time":{"secs":0,"nanos":755618},"transformer_time":{"secs":0,"nanos":594677245},"trie_time":{"secs":0,"nanos":5374293},"total_time":{"secs":0,"nanos":781818958}},"pass":false,"entropy":4.62329215864457,"entropy_diff":4.89386309254769e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,1292,216,33,1292]}
{"generation":423,"metadata":{"sampler_time":{"secs":0,"nanos":271121},"constraint_time":{"secs":0,"nanos":972749},"parser_time":{"secs":0,"nanos":1332748},"transformer_time":{"secs":1,"nanos":15560836},"trie_time":{"secs":0,"nanos":4610880},"total_time":{"secs":1,"nanos":331993041}},"pass":false,"entropy":4.623292158644473,"entropy_diff":9.681144774731365e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col1 1))) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col2 col2 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,34,664,34,216,33,1292,7754]}
{"generation":424,"metadata":{"sampler_time":{"secs":0,"nanos":93627},"constraint_time":{"secs":0,"nanos":666337},"parser_time":{"secs":0,"nanos":735990},"transformer_time":{"secs":0,"nanos":627384996},"trie_time":{"secs":0,"nanos":4705543},"total_time":{"secs":0,"nanos":815397500}},"pass":false,"entropy":4.623292158644448,"entropy_diff":2.4868995751603507e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,7754,216,33,1292]}
{"generation":425,"metadata":{"sampler_time":{"secs":0,"nanos":71087},"constraint_time":{"secs":0,"nanos":955997},"parser_time":{"secs":0,"nanos":751291},"transformer_time":{"secs":0,"nanos":595989087},"trie_time":{"secs":0,"nanos":4772624},"total_time":{"secs":0,"nanos":778221292}},"pass":false,"entropy":4.623292158644406,"entropy_diff":4.1744385725905886e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,216,32,1292]}
{"generation":426,"metadata":{"sampler_time":{"secs":0,"nanos":166573},"constraint_time":{"secs":0,"nanos":800086},"parser_time":{"secs":0,"nanos":1171001},"transformer_time":{"secs":0,"nanos":879457539},"trie_time":{"secs":0,"nanos":4769506},"total_time":{"secs":1,"nanos":146411458}},"pass":false,"entropy":4.6232921586443965,"entropy_diff":9.769962616701378e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 2)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,38799]}
{"generation":427,"metadata":{"sampler_time":{"secs":0,"nanos":119665},"constraint_time":{"secs":0,"nanos":749950},"parser_time":{"secs":0,"nanos":945614},"transformer_time":{"secs":0,"nanos":666225502},"trie_time":{"secs":0,"nanos":4824629},"total_time":{"secs":0,"nanos":867934333}},"pass":false,"entropy":4.623292158644378,"entropy_diff":1.865174681370263e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof \" \" \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,476,476,476,476,216,33,7754,216,33,1292]}
{"generation":428,"metadata":{"sampler_time":{"secs":0,"nanos":123835},"constraint_time":{"secs":0,"nanos":761548},"parser_time":{"secs":0,"nanos":917997},"transformer_time":{"secs":0,"nanos":735617330},"trie_time":{"secs":0,"nanos":4752710},"total_time":{"secs":0,"nanos":958457583}},"pass":false,"entropy":4.623292158644356,"entropy_diff":2.220446049250313e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":429,"metadata":{"sampler_time":{"secs":0,"nanos":100791},"constraint_time":{"secs":0,"nanos":808297},"parser_time":{"secs":0,"nanos":696415},"transformer_time":{"secs":0,"nanos":593489790},"trie_time":{"secs":0,"nanos":5375789},"total_time":{"secs":0,"nanos":775675959}},"pass":false,"entropy":4.623292158644351,"entropy_diff":4.440892098500626e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,216,34,1292]}
{"generation":430,"metadata":{"sampler_time":{"secs":0,"nanos":139588},"constraint_time":{"secs":0,"nanos":687209},"parser_time":{"secs":0,"nanos":770001},"transformer_time":{"secs":0,"nanos":622124624},"trie_time":{"secs":0,"nanos":4760080},"total_time":{"secs":0,"nanos":809894208}},"pass":false,"entropy":4.623292158644344,"entropy_diff":7.105427357601002e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.len col1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,4152,664,33,7754,216,33,1292]}
{"generation":431,"metadata":{"sampler_time":{"secs":0,"nanos":131923},"constraint_time":{"secs":0,"nanos":664291},"parser_time":{"secs":0,"nanos":809427},"transformer_time":{"secs":0,"nanos":664192088},"trie_time":{"secs":0,"nanos":4633839},"total_time":{"secs":0,"nanos":864748625}},"pass":false,"entropy":4.623292158644332,"entropy_diff":1.2434497875801753e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,34,216,33,7754,216,33,1292]}
{"generation":432,"metadata":{"sampler_time":{"secs":0,"nanos":208792},"constraint_time":{"secs":0,"nanos":787463},"parser_time":{"secs":0,"nanos":1300379},"transformer_time":{"secs":0,"nanos":885074035},"trie_time":{"secs":0,"nanos":4699004},"total_time":{"secs":1,"nanos":151986791}},"pass":false,"entropy":4.623292158644311,"entropy_diff":2.042810365310288e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 0)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,38799]}
{"generation":433,"metadata":{"sampler_time":{"secs":0,"nanos":156541},"constraint_time":{"secs":0,"nanos":690952},"parser_time":{"secs":0,"nanos":875873},"transformer_time":{"secs":0,"nanos":661829827},"trie_time":{"secs":0,"nanos":4706044},"total_time":{"secs":0,"nanos":861998666}},"pass":false,"entropy":4.6232921586443,"entropy_diff":1.1546319456101628e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col2 col1) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":434,"metadata":{"sampler_time":{"secs":0,"nanos":251417},"constraint_time":{"secs":0,"nanos":842539},"parser_time":{"secs":0,"nanos":1314078},"transformer_time":{"secs":1,"nanos":16625458},"trie_time":{"secs":0,"nanos":4774252},"total_time":{"secs":1,"nanos":323031667}},"pass":false,"entropy":4.62329215864425,"entropy_diff":4.973799150320701e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 1))) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col2 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,34,664,33,216,33,1292,7754]}
{"generation":435,"metadata":{"sampler_time":{"secs":0,"nanos":183613},"constraint_time":{"secs":0,"nanos":747252},"parser_time":{"secs":0,"nanos":1089416},"transformer_time":{"secs":0,"nanos":808632834},"trie_time":{"secs":0,"nanos":4898638},"total_time":{"secs":1,"nanos":48133959}},"pass":false,"entropy":4.6232921586442455,"entropy_diff":4.440892098500626e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,38799]}
{"generation":436,"metadata":{"sampler_time":{"secs":0,"nanos":215078},"constraint_time":{"secs":0,"nanos":939628},"parser_time":{"secs":0,"nanos":1458835},"transformer_time":{"secs":0,"nanos":998788206},"trie_time":{"secs":0,"nanos":5359568},"total_time":{"secs":1,"nanos":297515125}},"pass":false,"entropy":4.623292158644238,"entropy_diff":7.105427357601002e-15,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \",\") (str.indexof col1 \" \" 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \",\") (str.indexof col1 \" \" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,7754]}
{"generation":437,"metadata":{"sampler_time":{"secs":0,"nanos":119165},"constraint_time":{"secs":0,"nanos":667297},"parser_time":{"secs":0,"nanos":851083},"transformer_time":{"secs":0,"nanos":661996086},"trie_time":{"secs":0,"nanos":4873749},"total_time":{"secs":0,"nanos":862141458}},"pass":false,"entropy":4.623292158644197,"entropy_diff":4.1744385725905886e-14,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col2 col1 col1) (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":438,"metadata":{"sampler_time":{"secs":0,"nanos":144985},"constraint_time":{"secs":0,"nanos":650254},"parser_time":{"secs":0,"nanos":858825},"transformer_time":{"secs":0,"nanos":662591746},"trie_time":{"secs":0,"nanos":4763042},"total_time":{"secs":0,"nanos":862987291}},"pass":false,"entropy":4.623292158643961,"entropy_diff":2.353672812205332e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 (str.replace col2 col1 col2) (str.indexof col2 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,34,216,33,7754,216,33,1292]}
{"generation":439,"metadata":{"sampler_time":{"secs":0,"nanos":123753},"constraint_time":{"secs":0,"nanos":605169},"parser_time":{"secs":0,"nanos":887128},"transformer_time":{"secs":0,"nanos":605354830},"trie_time":{"secs":0,"nanos":4605003},"total_time":{"secs":0,"nanos":789541083}},"pass":false,"entropy":4.623292158643603,"entropy_diff":3.5793590313915047e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") (+ 1 (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,30425,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":440,"metadata":{"sampler_time":{"secs":0,"nanos":61663},"constraint_time":{"secs":0,"nanos":680874},"parser_time":{"secs":0,"nanos":828673},"transformer_time":{"secs":0,"nanos":703270710},"trie_time":{"secs":0,"nanos":4861375},"total_time":{"secs":0,"nanos":910278250}},"pass":false,"entropy":4.623292158631744,"entropy_diff":1.1858958259836072e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col2 0 1) (str.indexof col2 col2 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,365,1321,30,3888,1714,664,34,664,34,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":441,"metadata":{"sampler_time":{"secs":0,"nanos":56923},"constraint_time":{"secs":0,"nanos":558539},"parser_time":{"secs":0,"nanos":705370},"transformer_time":{"secs":0,"nanos":520043884},"trie_time":{"secs":0,"nanos":4754423},"total_time":{"secs":0,"nanos":682676750}},"pass":false,"entropy":4.623292158631515,"entropy_diff":2.291500322826323e-13,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col2 col1 col2)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,34,664,33,664,34,1292,216,33,25,216,33,1292]}
{"generation":442,"metadata":{"sampler_time":{"secs":0,"nanos":83997},"constraint_time":{"secs":0,"nanos":519163},"parser_time":{"secs":0,"nanos":632996},"transformer_time":{"secs":0,"nanos":486819582},"trie_time":{"secs":0,"nanos":4778460},"total_time":{"secs":0,"nanos":631210834}},"pass":false,"entropy":4.623292158628642,"entropy_diff":2.873257187729905e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":443,"metadata":{"sampler_time":{"secs":0,"nanos":58960},"constraint_time":{"secs":0,"nanos":568200},"parser_time":{"secs":0,"nanos":580423},"transformer_time":{"secs":0,"nanos":447615833},"trie_time":{"secs":0,"nanos":4721368},"total_time":{"secs":0,"nanos":585465792}},"pass":false,"entropy":4.623292158627068,"entropy_diff":1.573852159708622e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,216,34,1292]}
{"generation":444,"metadata":{"sampler_time":{"secs":0,"nanos":131125},"constraint_time":{"secs":0,"nanos":766877},"parser_time":{"secs":0,"nanos":765628},"transformer_time":{"secs":0,"nanos":578022546},"trie_time":{"secs":0,"nanos":4749623},"total_time":{"secs":0,"nanos":751923000}},"pass":false,"entropy":4.623292158624671,"entropy_diff":2.397193554770638e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) (str.indexof col1 (str.replace col1 col1 \",\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,7754]}
{"generation":445,"metadata":{"sampler_time":{"secs":0,"nanos":135835},"constraint_time":{"secs":0,"nanos":1090790},"parser_time":{"secs":0,"nanos":709250},"transformer_time":{"secs":0,"nanos":528982374},"trie_time":{"secs":0,"nanos":4724128},"total_time":{"secs":0,"nanos":690291291}},"pass":false,"entropy":4.6232921586108535,"entropy_diff":1.3817391675274848e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":446,"metadata":{"sampler_time":{"secs":0,"nanos":96123},"constraint_time":{"secs":0,"nanos":545041},"parser_time":{"secs":0,"nanos":641915},"transformer_time":{"secs":0,"nanos":459392461},"trie_time":{"secs":0,"nanos":4675006},"total_time":{"secs":0,"nanos":596850000}},"pass":false,"entropy":4.62329215860692,"entropy_diff":3.933742220851855e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"PA\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,4442,1715,216,32,25,216,33,1292]}
{"generation":447,"metadata":{"sampler_time":{"secs":0,"nanos":101875},"constraint_time":{"secs":0,"nanos":1136415},"parser_time":{"secs":0,"nanos":629710},"transformer_time":{"secs":0,"nanos":503472043},"trie_time":{"secs":0,"nanos":4671244},"total_time":{"secs":0,"nanos":653735459}},"pass":false,"entropy":4.623292158597998,"entropy_diff":8.921752225887758e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":448,"metadata":{"sampler_time":{"secs":0,"nanos":65547},"constraint_time":{"secs":0,"nanos":524122},"parser_time":{"secs":0,"nanos":559415},"transformer_time":{"secs":0,"nanos":461044537},"trie_time":{"secs":0,"nanos":4354922},"total_time":{"secs":0,"nanos":601269542}},"pass":false,"entropy":4.623292158579549,"entropy_diff":1.8449242134011e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (- 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,17481,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":449,"metadata":{"sampler_time":{"secs":0,"nanos":83083},"constraint_time":{"secs":0,"nanos":514746},"parser_time":{"secs":0,"nanos":577966},"transformer_time":{"secs":0,"nanos":479247250},"trie_time":{"secs":0,"nanos":4699783},"total_time":{"secs":0,"nanos":624221417}},"pass":false,"entropy":4.623292158345551,"entropy_diff":2.339977100973556e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":450,"metadata":{"sampler_time":{"secs":0,"nanos":71337},"constraint_time":{"secs":0,"nanos":466248},"parser_time":{"secs":0,"nanos":611335},"transformer_time":{"secs":0,"nanos":451783499},"trie_time":{"secs":0,"nanos":4689956},"total_time":{"secs":0,"nanos":590274709}},"pass":false,"entropy":4.62329215834278,"entropy_diff":2.7711166694643907e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \"CA\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,8970,1715,216,33,25,216,33,1292]}
{"generation":451,"metadata":{"sampler_time":{"secs":0,"nanos":75088},"constraint_time":{"secs":0,"nanos":586208},"parser_time":{"secs":0,"nanos":804623},"transformer_time":{"secs":0,"nanos":579016044},"trie_time":{"secs":0,"nanos":4769167},"total_time":{"secs":0,"nanos":758261000}},"pass":false,"entropy":4.623292158330256,"entropy_diff":1.2524203896191466e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 2) (str.indexof col2 (str.replace col2 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,216,33,7754]}
{"generation":452,"metadata":{"sampler_time":{"secs":0,"nanos":85460},"constraint_time":{"secs":0,"nanos":1196659},"parser_time":{"secs":0,"nanos":642626},"transformer_time":{"secs":0,"nanos":526034332},"trie_time":{"secs":0,"nanos":4750330},"total_time":{"secs":0,"nanos":683854333}},"pass":false,"entropy":4.623292158320402,"entropy_diff":9.85345138815319e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":453,"metadata":{"sampler_time":{"secs":0,"nanos":86880},"constraint_time":{"secs":0,"nanos":893579},"parser_time":{"secs":0,"nanos":646378},"transformer_time":{"secs":0,"nanos":520122795},"trie_time":{"secs":0,"nanos":5232585},"total_time":{"secs":0,"nanos":682369208}},"pass":false,"entropy":4.62329215831767,"entropy_diff":2.7320368189975852e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 (str.substr col2 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,1292,216,33,25,216,33,1292]}
{"generation":454,"metadata":{"sampler_time":{"secs":0,"nanos":120498},"constraint_time":{"secs":0,"nanos":505709},"parser_time":{"secs":0,"nanos":578795},"transformer_time":{"secs":0,"nanos":459358418},"trie_time":{"secs":0,"nanos":4695991},"total_time":{"secs":0,"nanos":597013417}},"pass":false,"entropy":4.623292158308051,"entropy_diff":9.618972285352356e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"CA\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,8970,1715,216,32,25,216,33,1292]}
{"generation":455,"metadata":{"sampler_time":{"secs":0,"nanos":106163},"constraint_time":{"secs":0,"nanos":1300751},"parser_time":{"secs":0,"nanos":671841},"transformer_time":{"secs":0,"nanos":528038836},"trie_time":{"secs":0,"nanos":5377506},"total_time":{"secs":0,"nanos":688673583}},"pass":false,"entropy":4.62329215830351,"entropy_diff":4.54125625992674e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":456,"metadata":{"sampler_time":{"secs":0,"nanos":82747},"constraint_time":{"secs":0,"nanos":894255},"parser_time":{"secs":0,"nanos":726000},"transformer_time":{"secs":0,"nanos":535744081},"trie_time":{"secs":0,"nanos":4775833},"total_time":{"secs":0,"nanos":692705541}},"pass":false,"entropy":4.623292158299375,"entropy_diff":4.135358722123783e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \"USA\" \"PA\") (str.indexof col1 \"CA\" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,24842,18,476,4442,1715,365,1321,30,3888,1714,664,33,476,8970,18,216,33,1292,216,33,1292]}
{"generation":457,"metadata":{"sampler_time":{"secs":0,"nanos":90079},"constraint_time":{"secs":0,"nanos":1415539},"parser_time":{"secs":0,"nanos":680581},"transformer_time":{"secs":0,"nanos":510437958},"trie_time":{"secs":0,"nanos":4679373},"total_time":{"secs":0,"nanos":668223875}},"pass":false,"entropy":4.6232921582900595,"entropy_diff":9.315215265814913e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 (str.replace col1 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,365,1321,30,9630,664,33,476,476,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":458,"metadata":{"sampler_time":{"secs":0,"nanos":73835},"constraint_time":{"secs":0,"nanos":942337},"parser_time":{"secs":0,"nanos":593793},"transformer_time":{"secs":0,"nanos":519470582},"trie_time":{"secs":0,"nanos":4490160},"total_time":{"secs":0,"nanos":671840833}},"pass":false,"entropy":4.6232921580257464,"entropy_diff":2.6431301591856027e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at (str.substr col1 0 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":459,"metadata":{"sampler_time":{"secs":0,"nanos":40792},"constraint_time":{"secs":0,"nanos":531125},"parser_time":{"secs":0,"nanos":472167},"transformer_time":{"secs":0,"nanos":377789291},"trie_time":{"secs":0,"nanos":4189001},"total_time":{"secs":0,"nanos":491960750}},"pass":false,"entropy":4.623292156771951,"entropy_diff":1.2537952898128424e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,34,25,216,33,1292]}
{"generation":460,"metadata":{"sampler_time":{"secs":0,"nanos":82836},"constraint_time":{"secs":0,"nanos":496870},"parser_time":{"secs":0,"nanos":569965},"transformer_time":{"secs":0,"nanos":445256337},"trie_time":{"secs":0,"nanos":4010292},"total_time":{"secs":0,"nanos":583492417}},"pass":false,"entropy":4.623292154843677,"entropy_diff":1.9282744290194387e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 col1 \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,33,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":461,"metadata":{"sampler_time":{"secs":0,"nanos":43915},"constraint_time":{"secs":0,"nanos":317958},"parser_time":{"secs":0,"nanos":478839},"transformer_time":{"secs":0,"nanos":393741123},"trie_time":{"secs":0,"nanos":4068374},"total_time":{"secs":0,"nanos":507338917}},"pass":false,"entropy":4.623292151767227,"entropy_diff":3.0764493175183816e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \"USA\" \"USA\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,24842,18,476,24842,18,216,33,25,216,33,1292]}
{"generation":462,"metadata":{"sampler_time":{"secs":0,"nanos":40630},"constraint_time":{"secs":0,"nanos":375999},"parser_time":{"secs":0,"nanos":388296},"transformer_time":{"secs":0,"nanos":378090291},"trie_time":{"secs":0,"nanos":4275924},"total_time":{"secs":0,"nanos":491839542}},"pass":false,"entropy":4.623292144687079,"entropy_diff":7.080148023419497e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,34,25,216,33,1292]}
{"generation":463,"metadata":{"sampler_time":{"secs":0,"nanos":67543},"constraint_time":{"secs":0,"nanos":535913},"parser_time":{"secs":0,"nanos":497582},"transformer_time":{"secs":0,"nanos":435489333},"trie_time":{"secs":0,"nanos":4147547},"total_time":{"secs":0,"nanos":565618000}},"pass":false,"entropy":4.6232921434324865,"entropy_diff":1.254592874033733e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.at col2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,261,664,34,216,32,25,216,33,25,216,33,1292]}
{"generation":464,"metadata":{"sampler_time":{"secs":0,"nanos":69335},"constraint_time":{"secs":0,"nanos":486829},"parser_time":{"secs":0,"nanos":500422},"transformer_time":{"secs":0,"nanos":435358291},"trie_time":{"secs":0,"nanos":4110127},"total_time":{"secs":0,"nanos":565051250}},"pass":false,"entropy":4.62329214055682,"entropy_diff":2.8756668157825516e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.at col1 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,261,664,33,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":465,"metadata":{"sampler_time":{"secs":0,"nanos":53371},"constraint_time":{"secs":0,"nanos":394293},"parser_time":{"secs":0,"nanos":463165},"transformer_time":{"secs":0,"nanos":386738831},"trie_time":{"secs":0,"nanos":4357578},"total_time":{"secs":0,"nanos":500811459}},"pass":false,"entropy":4.623292132755031,"entropy_diff":7.80178854853375e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \"CT\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,5335,18,216,33,25,216,33,1292]}
{"generation":466,"metadata":{"sampler_time":{"secs":0,"nanos":94542},"constraint_time":{"secs":0,"nanos":411377},"parser_time":{"secs":0,"nanos":514250},"transformer_time":{"secs":0,"nanos":436467372},"trie_time":{"secs":0,"nanos":4328039},"total_time":{"secs":0,"nanos":569899709}},"pass":false,"entropy":4.623292130433552,"entropy_diff":2.3214790090264614e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":467,"metadata":{"sampler_time":{"secs":0,"nanos":80297},"constraint_time":{"secs":0,"nanos":421251},"parser_time":{"secs":0,"nanos":485010},"transformer_time":{"secs":0,"nanos":375394334},"trie_time":{"secs":0,"nanos":4227791},"total_time":{"secs":0,"nanos":496008042}},"pass":false,"entropy":4.62329212908935,"entropy_diff":1.3442020829756984e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,34,25,216,33,1292]}
{"generation":468,"metadata":{"sampler_time":{"secs":0,"nanos":88378},"constraint_time":{"secs":0,"nanos":365961},"parser_time":{"secs":0,"nanos":484545},"transformer_time":{"secs":0,"nanos":375538041},"trie_time":{"secs":0,"nanos":4286496},"total_time":{"secs":0,"nanos":495648042}},"pass":false,"entropy":4.623292127492974,"entropy_diff":1.596376364432217e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,32,25,216,33,1292]}
{"generation":469,"metadata":{"sampler_time":{"secs":0,"nanos":106791},"constraint_time":{"secs":0,"nanos":408291},"parser_time":{"secs":0,"nanos":529468},"transformer_time":{"secs":0,"nanos":375697875},"trie_time":{"secs":0,"nanos":4117832},"total_time":{"secs":0,"nanos":494932709}},"pass":false,"entropy":4.623292124141538,"entropy_diff":3.3514355735064782e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,32,25,216,33,1292]}
{"generation":470,"metadata":{"sampler_time":{"secs":0,"nanos":125500},"constraint_time":{"secs":0,"nanos":524709},"parser_time":{"secs":0,"nanos":597500},"transformer_time":{"secs":0,"nanos":450074125},"trie_time":{"secs":0,"nanos":4142879},"total_time":{"secs":0,"nanos":593790250}},"pass":false,"entropy":4.623292121638977,"entropy_diff":2.502560825234923e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 col1 col1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,33,664,33,25,476,476,216,33,25,216,33,1292]}
{"average_metadata":{"sampler_time":{"secs":0,"nanos":109094},"constraint_time":{"secs":0,"nanos":646123},"parser_time":{"secs":0,"nanos":618071},"transformer_time":{"secs":0,"nanos":483354578},"trie_time":{"secs":0,"nanos":2335256},"total_time":{"secs":0,"nanos":633169429}},"average_entropy":4.610190962485929,"average_entropy_diff":2.134504817030337,"average_tokenization_error":0.0,"average_tokens_after_first_token_error":0.0,"total_duration":{"secs":301,"nanos":362959375},"average_token_count":0.0}
