[2m2025-09-10T01:31:17.505202Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:31:17.505247Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:31:17.998190Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:31:17.998223Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:31:18.221269Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:31:18.221368Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
{"generation":0,"metadata":{"sampler_time":{"secs":0,"nanos":119919},"constraint_time":{"secs":0,"nanos":203332},"parser_time":{"secs":0,"nanos":447540},"transformer_time":{"secs":0,"nanos":376295169},"trie_time":{"secs":0,"nanos":30628},"total_time":{"secs":0,"nanos":492753584}},"pass":false,"entropy":0.0,"entropy_diff":1000.0,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":1,"metadata":{"sampler_time":{"secs":0,"nanos":22625},"constraint_time":{"secs":0,"nanos":51668},"parser_time":{"secs":0,"nanos":111584},"transformer_time":{"secs":0,"nanos":145814874},"trie_time":{"secs":0,"nanos":39959},"total_time":{"secs":0,"nanos":193052334}},"pass":false,"entropy":1.8944615668564024,"entropy_diff":-1.8944615668564024,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,476,20361]}
{"generation":2,"metadata":{"sampler_time":{"secs":0,"nanos":20957},"constraint_time":{"secs":0,"nanos":25251},"parser_time":{"secs":0,"nanos":79581},"transformer_time":{"secs":0,"nanos":96993167},"trie_time":{"secs":0,"nanos":28333},"total_time":{"secs":0,"nanos":128145458}},"pass":false,"entropy":2.5615698845516452,"entropy_diff":-0.6671083176952428,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ col1 col2)","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,664,33,664,34,25]}
{"generation":3,"metadata":{"sampler_time":{"secs":0,"nanos":26458},"constraint_time":{"secs":0,"nanos":104002},"parser_time":{"secs":0,"nanos":123873},"transformer_time":{"secs":0,"nanos":170485752},"trie_time":{"secs":0,"nanos":46046},"total_time":{"secs":0,"nanos":223475042}},"pass":false,"entropy":3.3381136047404545,"entropy_diff":-0.7765437201888092,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 1) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361]}
{"generation":4,"metadata":{"sampler_time":{"secs":0,"nanos":55830},"constraint_time":{"secs":0,"nanos":59039},"parser_time":{"secs":0,"nanos":196129},"transformer_time":{"secs":0,"nanos":220450083},"trie_time":{"secs":0,"nanos":44994},"total_time":{"secs":0,"nanos":295024500}},"pass":false,"entropy":4.267549978508101,"entropy_diff":-0.9294363737676465,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,34,1292]}
{"generation":5,"metadata":{"sampler_time":{"secs":0,"nanos":55251},"constraint_time":{"secs":0,"nanos":196168},"parser_time":{"secs":0,"nanos":235760},"transformer_time":{"secs":0,"nanos":302026166},"trie_time":{"secs":0,"nanos":71332},"total_time":{"secs":0,"nanos":396201417}},"pass":false,"entropy":4.837334237278157,"entropy_diff":-0.5697842587700563,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,34,1292]}
{"generation":6,"metadata":{"sampler_time":{"secs":0,"nanos":28126},"constraint_time":{"secs":0,"nanos":76958},"parser_time":{"secs":0,"nanos":169919},"transformer_time":{"secs":0,"nanos":211838874},"trie_time":{"secs":0,"nanos":55328},"total_time":{"secs":0,"nanos":282116375}},"pass":false,"entropy":4.822800425068601,"entropy_diff":0.014533812209556629,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,476,49088]}
{"generation":7,"metadata":{"sampler_time":{"secs":0,"nanos":42295},"constraint_time":{"secs":0,"nanos":184624},"parser_time":{"secs":0,"nanos":242791},"transformer_time":{"secs":0,"nanos":302279083},"trie_time":{"secs":0,"nanos":87126},"total_time":{"secs":0,"nanos":398978958}},"pass":false,"entropy":4.776043706999794,"entropy_diff":0.046756718068806435,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,33,216,34,1292]}
{"generation":8,"metadata":{"sampler_time":{"secs":0,"nanos":62209},"constraint_time":{"secs":0,"nanos":103670},"parser_time":{"secs":0,"nanos":212921},"transformer_time":{"secs":0,"nanos":302334210},"trie_time":{"secs":0,"nanos":55165},"total_time":{"secs":0,"nanos":397958250}},"pass":false,"entropy":4.774833256776083,"entropy_diff":0.0012104502237111348,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":9,"metadata":{"sampler_time":{"secs":0,"nanos":69790},"constraint_time":{"secs":0,"nanos":178211},"parser_time":{"secs":0,"nanos":228004},"transformer_time":{"secs":0,"nanos":304064668},"trie_time":{"secs":0,"nanos":97499},"total_time":{"secs":0,"nanos":401057875}},"pass":false,"entropy":4.761042929146663,"entropy_diff":0.013790327629419785,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,32,216,33,1292]}
{"generation":10,"metadata":{"sampler_time":{"secs":0,"nanos":48628},"constraint_time":{"secs":0,"nanos":167213},"parser_time":{"secs":0,"nanos":234002},"transformer_time":{"secs":0,"nanos":285867872},"trie_time":{"secs":0,"nanos":90413},"total_time":{"secs":0,"nanos":378458250}},"pass":false,"entropy":4.735110287566508,"entropy_diff":0.02593264158015529,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,476,49088]}
{"generation":11,"metadata":{"sampler_time":{"secs":0,"nanos":86502},"constraint_time":{"secs":0,"nanos":181080},"parser_time":{"secs":0,"nanos":314499},"transformer_time":{"secs":0,"nanos":376859956},"trie_time":{"secs":0,"nanos":80339},"total_time":{"secs":0,"nanos":493583625}},"pass":false,"entropy":4.719790417245882,"entropy_diff":0.015319870320626094,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 1 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":12,"metadata":{"sampler_time":{"secs":0,"nanos":70836},"constraint_time":{"secs":0,"nanos":96958},"parser_time":{"secs":0,"nanos":248752},"transformer_time":{"secs":0,"nanos":293845501},"trie_time":{"secs":0,"nanos":73496},"total_time":{"secs":0,"nanos":386987125}},"pass":false,"entropy":4.677135402867281,"entropy_diff":0.04265501437860131,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col2 \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,34,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":13,"metadata":{"sampler_time":{"secs":0,"nanos":101793},"constraint_time":{"secs":0,"nanos":593580},"parser_time":{"secs":0,"nanos":416213},"transformer_time":{"secs":0,"nanos":452448998},"trie_time":{"secs":0,"nanos":111039},"total_time":{"secs":0,"nanos":589486584}},"pass":false,"entropy":4.8374034447406045,"entropy_diff":-0.16026804187332377,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col1 \" \" 1) 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":14,"metadata":{"sampler_time":{"secs":0,"nanos":104784},"constraint_time":{"secs":0,"nanos":704705},"parser_time":{"secs":0,"nanos":398208},"transformer_time":{"secs":0,"nanos":458004001},"trie_time":{"secs":0,"nanos":96237},"total_time":{"secs":0,"nanos":599402292}},"pass":false,"entropy":4.859198422057604,"entropy_diff":-0.021794977316999642,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr (str.substr col1 0 1) 1 2) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,216,34,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":15,"metadata":{"sampler_time":{"secs":0,"nanos":49128},"constraint_time":{"secs":0,"nanos":72958},"parser_time":{"secs":0,"nanos":159211},"transformer_time":{"secs":0,"nanos":220610333},"trie_time":{"secs":0,"nanos":93955},"total_time":{"secs":0,"nanos":292787334}},"pass":false,"entropy":4.9115141481963045,"entropy_diff":-0.05231572613870039,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,34,1292]}
{"generation":16,"metadata":{"sampler_time":{"secs":0,"nanos":45378},"constraint_time":{"secs":0,"nanos":76170},"parser_time":{"secs":0,"nanos":163418},"transformer_time":{"secs":0,"nanos":220403588},"trie_time":{"secs":0,"nanos":93034},"total_time":{"secs":0,"nanos":293168333}},"pass":false,"entropy":4.908951206759794,"entropy_diff":0.0025629414365102576,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,33,1292]}
{"generation":17,"metadata":{"sampler_time":{"secs":0,"nanos":59912},"constraint_time":{"secs":0,"nanos":102166},"parser_time":{"secs":0,"nanos":260789},"transformer_time":{"secs":0,"nanos":294170084},"trie_time":{"secs":0,"nanos":101587},"total_time":{"secs":0,"nanos":385240166}},"pass":false,"entropy":4.870551613240022,"entropy_diff":0.03839959351977207,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.substr col1 0 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,49088]}
{"generation":18,"metadata":{"sampler_time":{"secs":0,"nanos":35832},"constraint_time":{"secs":0,"nanos":100000},"parser_time":{"secs":0,"nanos":178669},"transformer_time":{"secs":0,"nanos":220085959},"trie_time":{"secs":0,"nanos":126704},"total_time":{"secs":0,"nanos":290877208}},"pass":false,"entropy":4.849636448462148,"entropy_diff":0.020915164777874473,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,33,1292]}
{"generation":19,"metadata":{"sampler_time":{"secs":0,"nanos":12919},"constraint_time":{"secs":0,"nanos":64252},"parser_time":{"secs":0,"nanos":124958},"transformer_time":{"secs":0,"nanos":154140125},"trie_time":{"secs":0,"nanos":112124},"total_time":{"secs":0,"nanos":198858083}},"pass":false,"entropy":4.838231985518034,"entropy_diff":0.011404462944113902,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) col2)","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,664,34,25]}
{"generation":20,"metadata":{"sampler_time":{"secs":0,"nanos":62753},"constraint_time":{"secs":0,"nanos":216916},"parser_time":{"secs":0,"nanos":250618},"transformer_time":{"secs":0,"nanos":307704127},"trie_time":{"secs":0,"nanos":148049},"total_time":{"secs":0,"nanos":393034917}},"pass":false,"entropy":4.809947578669343,"entropy_diff":0.028284406848690935,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,216,33,1292]}
{"generation":21,"metadata":{"sampler_time":{"secs":0,"nanos":68042},"constraint_time":{"secs":0,"nanos":225956},"parser_time":{"secs":0,"nanos":307661},"transformer_time":{"secs":0,"nanos":376007000},"trie_time":{"secs":0,"nanos":147912},"total_time":{"secs":0,"nanos":479773125}},"pass":false,"entropy":4.775796350898849,"entropy_diff":0.03415122777049362,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":22,"metadata":{"sampler_time":{"secs":0,"nanos":52789},"constraint_time":{"secs":0,"nanos":197042},"parser_time":{"secs":0,"nanos":293243},"transformer_time":{"secs":0,"nanos":375937591},"trie_time":{"secs":0,"nanos":151961},"total_time":{"secs":0,"nanos":480287375}},"pass":false,"entropy":4.762586365209309,"entropy_diff":0.01320998568954046,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,1292]}
{"generation":23,"metadata":{"sampler_time":{"secs":0,"nanos":90833},"constraint_time":{"secs":0,"nanos":284209},"parser_time":{"secs":0,"nanos":389910},"transformer_time":{"secs":0,"nanos":458711333},"trie_time":{"secs":0,"nanos":166127},"total_time":{"secs":0,"nanos":589944833}},"pass":false,"entropy":4.755652265797869,"entropy_diff":0.006934099411440187,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":24,"metadata":{"sampler_time":{"secs":0,"nanos":39455},"constraint_time":{"secs":0,"nanos":219503},"parser_time":{"secs":0,"nanos":240708},"transformer_time":{"secs":0,"nanos":301689626},"trie_time":{"secs":0,"nanos":152501},"total_time":{"secs":0,"nanos":398115083}},"pass":false,"entropy":4.752685398891961,"entropy_diff":0.00296686690590775,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,34,216,33,1292]}
{"generation":25,"metadata":{"sampler_time":{"secs":0,"nanos":73750},"constraint_time":{"secs":0,"nanos":198835},"parser_time":{"secs":0,"nanos":309541},"transformer_time":{"secs":0,"nanos":367525207},"trie_time":{"secs":0,"nanos":157706},"total_time":{"secs":0,"nanos":484137458}},"pass":false,"entropy":4.745779345251544,"entropy_diff":0.00690605364041641,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 1 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,49088]}
{"generation":26,"metadata":{"sampler_time":{"secs":0,"nanos":67422},"constraint_time":{"secs":0,"nanos":223961},"parser_time":{"secs":0,"nanos":294250},"transformer_time":{"secs":0,"nanos":376558997},"trie_time":{"secs":0,"nanos":165080},"total_time":{"secs":0,"nanos":490620708}},"pass":false,"entropy":4.732408977468524,"entropy_diff":0.013370367783020143,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,1292]}
{"generation":27,"metadata":{"sampler_time":{"secs":0,"nanos":38630},"constraint_time":{"secs":0,"nanos":192750},"parser_time":{"secs":0,"nanos":266281},"transformer_time":{"secs":0,"nanos":294159374},"trie_time":{"secs":0,"nanos":161205},"total_time":{"secs":0,"nanos":384436708}},"pass":false,"entropy":4.716584837490851,"entropy_diff":0.01582413997767329,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,664,34,1292]}
{"generation":28,"metadata":{"sampler_time":{"secs":0,"nanos":91415},"constraint_time":{"secs":0,"nanos":346167},"parser_time":{"secs":0,"nanos":422623},"transformer_time":{"secs":0,"nanos":458122625},"trie_time":{"secs":0,"nanos":180870},"total_time":{"secs":0,"nanos":596710000}},"pass":false,"entropy":4.710882218535654,"entropy_diff":0.005702618955196748,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 0 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":29,"metadata":{"sampler_time":{"secs":0,"nanos":74754},"constraint_time":{"secs":0,"nanos":116956},"parser_time":{"secs":0,"nanos":348959},"transformer_time":{"secs":0,"nanos":369070670},"trie_time":{"secs":0,"nanos":163583},"total_time":{"secs":0,"nanos":486264667}},"pass":false,"entropy":4.705496956998173,"entropy_diff":0.005385261537480979,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 (str.substr col1 (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":30,"metadata":{"sampler_time":{"secs":0,"nanos":36622},"constraint_time":{"secs":0,"nanos":169374},"parser_time":{"secs":0,"nanos":265370},"transformer_time":{"secs":0,"nanos":286013207},"trie_time":{"secs":0,"nanos":185627},"total_time":{"secs":0,"nanos":375347000}},"pass":false,"entropy":4.69132951000392,"entropy_diff":0.014167446994253652,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 \" \" \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,476,476,476,49088]}
{"generation":31,"metadata":{"sampler_time":{"secs":0,"nanos":54999},"constraint_time":{"secs":0,"nanos":222623},"parser_time":{"secs":0,"nanos":323623},"transformer_time":{"secs":0,"nanos":367571750},"trie_time":{"secs":0,"nanos":189246},"total_time":{"secs":0,"nanos":478963250}},"pass":false,"entropy":4.68538004882975,"entropy_diff":0.005949461174169279,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,1292]}
{"generation":32,"metadata":{"sampler_time":{"secs":0,"nanos":70089},"constraint_time":{"secs":0,"nanos":315587},"parser_time":{"secs":0,"nanos":392328},"transformer_time":{"secs":0,"nanos":409494545},"trie_time":{"secs":0,"nanos":268168},"total_time":{"secs":0,"nanos":535764292}},"pass":false,"entropy":4.683598061785867,"entropy_diff":0.0017819870438833263,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (+ (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,1292]}
{"generation":33,"metadata":{"sampler_time":{"secs":0,"nanos":21415},"constraint_time":{"secs":0,"nanos":223208},"parser_time":{"secs":0,"nanos":267671},"transformer_time":{"secs":0,"nanos":289888334},"trie_time":{"secs":0,"nanos":235287},"total_time":{"secs":0,"nanos":381376083}},"pass":false,"entropy":4.6795717320173695,"entropy_diff":0.004026329768497483,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,42934,1292]}
{"generation":34,"metadata":{"sampler_time":{"secs":0,"nanos":18007},"constraint_time":{"secs":0,"nanos":148246},"parser_time":{"secs":0,"nanos":189832},"transformer_time":{"secs":0,"nanos":219560541},"trie_time":{"secs":0,"nanos":212789},"total_time":{"secs":0,"nanos":287951750}},"pass":false,"entropy":4.676330881819236,"entropy_diff":0.0032408501981331383,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,476,20361]}
{"generation":35,"metadata":{"sampler_time":{"secs":0,"nanos":40999},"constraint_time":{"secs":0,"nanos":79085},"parser_time":{"secs":0,"nanos":176039},"transformer_time":{"secs":0,"nanos":212199001},"trie_time":{"secs":0,"nanos":136001},"total_time":{"secs":0,"nanos":284523584}},"pass":false,"entropy":4.6513351173706,"entropy_diff":0.024995764448636493,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,34,476,49088]}
{"generation":36,"metadata":{"sampler_time":{"secs":0,"nanos":21210},"constraint_time":{"secs":0,"nanos":65705},"parser_time":{"secs":0,"nanos":176999},"transformer_time":{"secs":0,"nanos":220589457},"trie_time":{"secs":0,"nanos":167787},"total_time":{"secs":0,"nanos":296108084}},"pass":false,"entropy":4.638183039549443,"entropy_diff":0.01315207782115646,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 \" \" col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,476,476,664,34,1292]}
{"generation":37,"metadata":{"sampler_time":{"secs":0,"nanos":38045},"constraint_time":{"secs":0,"nanos":60705},"parser_time":{"secs":0,"nanos":162246},"transformer_time":{"secs":0,"nanos":228469789},"trie_time":{"secs":0,"nanos":136838},"total_time":{"secs":0,"nanos":303843583}},"pass":false,"entropy":4.626959193257529,"entropy_diff":0.011223846291914086,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,216,32,216,33,1292]}
{"generation":38,"metadata":{"sampler_time":{"secs":0,"nanos":58878},"constraint_time":{"secs":0,"nanos":171164},"parser_time":{"secs":0,"nanos":245669},"transformer_time":{"secs":0,"nanos":286209581},"trie_time":{"secs":0,"nanos":166458},"total_time":{"secs":0,"nanos":380135791}},"pass":false,"entropy":4.617982091537257,"entropy_diff":0.008977101720271996,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col2 0 1) \" \") (str.replace col2 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,34,476,49088]}
{"generation":39,"metadata":{"sampler_time":{"secs":0,"nanos":89795},"constraint_time":{"secs":0,"nanos":156541},"parser_time":{"secs":0,"nanos":349506},"transformer_time":{"secs":0,"nanos":368711209},"trie_time":{"secs":0,"nanos":150160},"total_time":{"secs":0,"nanos":488195167}},"pass":false,"entropy":4.578748329249093,"entropy_diff":0.03923376228816444,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 (str.substr col1 (str.indexof col1 \" \" 1) 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,49088]}
{"generation":40,"metadata":{"sampler_time":{"secs":0,"nanos":36042},"constraint_time":{"secs":0,"nanos":87589},"parser_time":{"secs":0,"nanos":188507},"transformer_time":{"secs":0,"nanos":228112835},"trie_time":{"secs":0,"nanos":146826},"total_time":{"secs":0,"nanos":302510000}},"pass":false,"entropy":4.567406948934055,"entropy_diff":0.011341380315037952,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,216,33,216,33,1292]}
{"generation":41,"metadata":{"sampler_time":{"secs":0,"nanos":49001},"constraint_time":{"secs":0,"nanos":68875},"parser_time":{"secs":0,"nanos":188664},"transformer_time":{"secs":0,"nanos":220895170},"trie_time":{"secs":0,"nanos":156334},"total_time":{"secs":0,"nanos":296156792}},"pass":false,"entropy":4.556034288808462,"entropy_diff":0.011372660125593015,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,33,664,34,1292]}
{"generation":42,"metadata":{"sampler_time":{"secs":0,"nanos":33872},"constraint_time":{"secs":0,"nanos":91375},"parser_time":{"secs":0,"nanos":246249},"transformer_time":{"secs":0,"nanos":294771915},"trie_time":{"secs":0,"nanos":161211},"total_time":{"secs":0,"nanos":389368583}},"pass":false,"entropy":4.550802123663975,"entropy_diff":0.005232165144486878,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.substr col2 1 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,49088]}
{"generation":43,"metadata":{"sampler_time":{"secs":0,"nanos":40295},"constraint_time":{"secs":0,"nanos":87207},"parser_time":{"secs":0,"nanos":229008},"transformer_time":{"secs":0,"nanos":270106291},"trie_time":{"secs":0,"nanos":159208},"total_time":{"secs":0,"nanos":355468875}},"pass":false,"entropy":4.549241203577362,"entropy_diff":0.0015609200866126827,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.at col1 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":44,"metadata":{"sampler_time":{"secs":0,"nanos":11500},"constraint_time":{"secs":0,"nanos":55919},"parser_time":{"secs":0,"nanos":129331},"transformer_time":{"secs":0,"nanos":146406667},"trie_time":{"secs":0,"nanos":150041},"total_time":{"secs":0,"nanos":190784500}},"pass":false,"entropy":4.52933114369426,"entropy_diff":0.01991005988310235,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,42934,25]}
{"generation":45,"metadata":{"sampler_time":{"secs":0,"nanos":21170},"constraint_time":{"secs":0,"nanos":61001},"parser_time":{"secs":0,"nanos":104168},"transformer_time":{"secs":0,"nanos":145893250},"trie_time":{"secs":0,"nanos":132996},"total_time":{"secs":0,"nanos":190844958}},"pass":false,"entropy":4.489808366586418,"entropy_diff":0.03952277710784191,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col1) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,33,25,476,20361]}
{"generation":46,"metadata":{"sampler_time":{"secs":0,"nanos":26745},"constraint_time":{"secs":0,"nanos":159087},"parser_time":{"secs":0,"nanos":259742},"transformer_time":{"secs":0,"nanos":302977828},"trie_time":{"secs":0,"nanos":258129},"total_time":{"secs":0,"nanos":394771542}},"pass":false,"entropy":4.456159149352227,"entropy_diff":0.03364921723419112,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,216,34,1292]}
{"generation":47,"metadata":{"sampler_time":{"secs":0,"nanos":32794},"constraint_time":{"secs":0,"nanos":156958},"parser_time":{"secs":0,"nanos":268790},"transformer_time":{"secs":0,"nanos":294562919},"trie_time":{"secs":0,"nanos":233960},"total_time":{"secs":0,"nanos":387750750}},"pass":false,"entropy":4.454081855363498,"entropy_diff":0.002077293988729245,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,664,34,1292]}
{"generation":48,"metadata":{"sampler_time":{"secs":0,"nanos":28917},"constraint_time":{"secs":0,"nanos":222209},"parser_time":{"secs":0,"nanos":263004},"transformer_time":{"secs":0,"nanos":344023460},"trie_time":{"secs":0,"nanos":269281},"total_time":{"secs":0,"nanos":447864500}},"pass":false,"entropy":4.452186169633243,"entropy_diff":0.0018956857302550034,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,216]}
{"generation":49,"metadata":{"sampler_time":{"secs":0,"nanos":22668},"constraint_time":{"secs":0,"nanos":203710},"parser_time":{"secs":0,"nanos":259047},"transformer_time":{"secs":0,"nanos":302113461},"trie_time":{"secs":0,"nanos":268709},"total_time":{"secs":0,"nanos":394601542}},"pass":false,"entropy":4.451415335513454,"entropy_diff":0.0007708341197885105,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,33,1292]}
{"generation":50,"metadata":{"sampler_time":{"secs":0,"nanos":68166},"constraint_time":{"secs":0,"nanos":246575},"parser_time":{"secs":0,"nanos":325710},"transformer_time":{"secs":0,"nanos":376915627},"trie_time":{"secs":0,"nanos":242085},"total_time":{"secs":0,"nanos":490733500}},"pass":false,"entropy":4.449539995756359,"entropy_diff":0.0018753397570954178,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292]}
{"generation":51,"metadata":{"sampler_time":{"secs":0,"nanos":30585},"constraint_time":{"secs":0,"nanos":152168},"parser_time":{"secs":0,"nanos":266750},"transformer_time":{"secs":0,"nanos":294444916},"trie_time":{"secs":0,"nanos":252415},"total_time":{"secs":0,"nanos":393549875}},"pass":false,"entropy":4.433073931531651,"entropy_diff":0.016466064224707644,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col2 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,34,664,33,664,34,1292]}
{"generation":52,"metadata":{"sampler_time":{"secs":0,"nanos":77841},"constraint_time":{"secs":0,"nanos":198790},"parser_time":{"secs":0,"nanos":346202},"transformer_time":{"secs":0,"nanos":376662669},"trie_time":{"secs":0,"nanos":294332},"total_time":{"secs":0,"nanos":500260000}},"pass":false,"entropy":4.430707502440811,"entropy_diff":0.002366429090840505,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,33,25,216,33,1292]}
{"generation":53,"metadata":{"sampler_time":{"secs":0,"nanos":57290},"constraint_time":{"secs":0,"nanos":240582},"parser_time":{"secs":0,"nanos":305291},"transformer_time":{"secs":0,"nanos":376364622},"trie_time":{"secs":0,"nanos":294035},"total_time":{"secs":0,"nanos":497374542}},"pass":false,"entropy":4.429005275604151,"entropy_diff":0.0017022268366595483,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292]}
{"generation":54,"metadata":{"sampler_time":{"secs":0,"nanos":59752},"constraint_time":{"secs":0,"nanos":183040},"parser_time":{"secs":0,"nanos":350675},"transformer_time":{"secs":0,"nanos":369196418},"trie_time":{"secs":0,"nanos":297956},"total_time":{"secs":0,"nanos":489182750}},"pass":false,"entropy":4.428365415018085,"entropy_diff":0.0006398605860660211,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":55,"metadata":{"sampler_time":{"secs":0,"nanos":53373},"constraint_time":{"secs":0,"nanos":200037},"parser_time":{"secs":0,"nanos":330545},"transformer_time":{"secs":0,"nanos":345872543},"trie_time":{"secs":0,"nanos":308245},"total_time":{"secs":0,"nanos":459022125}},"pass":false,"entropy":4.426598287597912,"entropy_diff":0.0017671274201731535,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.at col1 0) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,49088]}
{"generation":56,"metadata":{"sampler_time":{"secs":0,"nanos":63332},"constraint_time":{"secs":0,"nanos":251543},"parser_time":{"secs":0,"nanos":398282},"transformer_time":{"secs":0,"nanos":409855542},"trie_time":{"secs":0,"nanos":313053},"total_time":{"secs":0,"nanos":539999500}},"pass":false,"entropy":4.42561680654212,"entropy_diff":0.0009814810557919884,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (- (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,1292]}
{"generation":57,"metadata":{"sampler_time":{"secs":0,"nanos":24620},"constraint_time":{"secs":0,"nanos":205835},"parser_time":{"secs":0,"nanos":242501},"transformer_time":{"secs":0,"nanos":285801166},"trie_time":{"secs":0,"nanos":321284},"total_time":{"secs":0,"nanos":379728791}},"pass":false,"entropy":4.423685680846713,"entropy_diff":0.0019311256954068767,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,476,49088]}
{"generation":58,"metadata":{"sampler_time":{"secs":0,"nanos":43795},"constraint_time":{"secs":0,"nanos":189210},"parser_time":{"secs":0,"nanos":300254},"transformer_time":{"secs":0,"nanos":368693749},"trie_time":{"secs":0,"nanos":314330},"total_time":{"secs":0,"nanos":488886500}},"pass":false,"entropy":4.422694347797952,"entropy_diff":0.0009913330487609784,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 0 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,49088]}
{"generation":59,"metadata":{"sampler_time":{"secs":0,"nanos":68874},"constraint_time":{"secs":0,"nanos":186043},"parser_time":{"secs":0,"nanos":366341},"transformer_time":{"secs":0,"nanos":368214915},"trie_time":{"secs":0,"nanos":322496},"total_time":{"secs":0,"nanos":487900958}},"pass":false,"entropy":4.422255422234133,"entropy_diff":0.0004389255638193035,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace (str.substr col1 0 1) \" \" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,42934,1292]}
{"generation":60,"metadata":{"sampler_time":{"secs":0,"nanos":40916},"constraint_time":{"secs":0,"nanos":202580},"parser_time":{"secs":0,"nanos":268834},"transformer_time":{"secs":0,"nanos":302152335},"trie_time":{"secs":0,"nanos":330294},"total_time":{"secs":0,"nanos":400201292}},"pass":false,"entropy":4.418066894452263,"entropy_diff":0.004188527781869844,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,34,216,33,1292]}
{"generation":61,"metadata":{"sampler_time":{"secs":0,"nanos":62207},"constraint_time":{"secs":0,"nanos":177710},"parser_time":{"secs":0,"nanos":354341},"transformer_time":{"secs":0,"nanos":349238294},"trie_time":{"secs":0,"nanos":332081},"total_time":{"secs":0,"nanos":465162209}},"pass":false,"entropy":4.415421406670492,"entropy_diff":0.002645487781770761,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.at col1 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":62,"metadata":{"sampler_time":{"secs":0,"nanos":66042},"constraint_time":{"secs":0,"nanos":282255},"parser_time":{"secs":0,"nanos":393621},"transformer_time":{"secs":0,"nanos":442674204},"trie_time":{"secs":0,"nanos":368418},"total_time":{"secs":0,"nanos":585441959}},"pass":false,"entropy":4.410027510414564,"entropy_diff":0.005393896255927899,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":63,"metadata":{"sampler_time":{"secs":0,"nanos":79088},"constraint_time":{"secs":0,"nanos":361748},"parser_time":{"secs":0,"nanos":418959},"transformer_time":{"secs":0,"nanos":458767037},"trie_time":{"secs":0,"nanos":380871},"total_time":{"secs":0,"nanos":604623834}},"pass":false,"entropy":4.409870669153459,"entropy_diff":0.00015684126110571128,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":64,"metadata":{"sampler_time":{"secs":0,"nanos":77762},"constraint_time":{"secs":0,"nanos":389665},"parser_time":{"secs":0,"nanos":434799},"transformer_time":{"secs":0,"nanos":435644248},"trie_time":{"secs":0,"nanos":417159},"total_time":{"secs":0,"nanos":573292958}},"pass":false,"entropy":4.409829199668134,"entropy_diff":0.00004146948532479655,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":65,"metadata":{"sampler_time":{"secs":0,"nanos":45294},"constraint_time":{"secs":0,"nanos":318035},"parser_time":{"secs":0,"nanos":392872},"transformer_time":{"secs":0,"nanos":458768795},"trie_time":{"secs":0,"nanos":415625},"total_time":{"secs":0,"nanos":622895833}},"pass":false,"entropy":4.409671854825257,"entropy_diff":0.00015734484287666106,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":66,"metadata":{"sampler_time":{"secs":0,"nanos":61419},"constraint_time":{"secs":0,"nanos":289208},"parser_time":{"secs":0,"nanos":368123},"transformer_time":{"secs":0,"nanos":438984083},"trie_time":{"secs":0,"nanos":406958},"total_time":{"secs":0,"nanos":572122041}},"pass":false,"entropy":4.409639472993516,"entropy_diff":0.00003238183174136822,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,216,33,25,216,33,1292]}
{"generation":67,"metadata":{"sampler_time":{"secs":0,"nanos":32964},"constraint_time":{"secs":0,"nanos":192171},"parser_time":{"secs":0,"nanos":345666},"transformer_time":{"secs":0,"nanos":376864833},"trie_time":{"secs":0,"nanos":401120},"total_time":{"secs":0,"nanos":532918625}},"pass":false,"entropy":4.409573400917004,"entropy_diff":0.00006607207651221358,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292]}
{"generation":68,"metadata":{"sampler_time":{"secs":0,"nanos":69252},"constraint_time":{"secs":0,"nanos":492746},"parser_time":{"secs":0,"nanos":470087},"transformer_time":{"secs":0,"nanos":532993500},"trie_time":{"secs":0,"nanos":420790},"total_time":{"secs":0,"nanos":690259916}},"pass":false,"entropy":4.409468725763688,"entropy_diff":0.00010467515331580302,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":69,"metadata":{"sampler_time":{"secs":0,"nanos":39001},"constraint_time":{"secs":0,"nanos":176335},"parser_time":{"secs":0,"nanos":360002},"transformer_time":{"secs":0,"nanos":376750916},"trie_time":{"secs":0,"nanos":414709},"total_time":{"secs":0,"nanos":488577792}},"pass":false,"entropy":4.4094357934548984,"entropy_diff":0.00003293230878931297,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,33,1292]}
{"generation":70,"metadata":{"sampler_time":{"secs":0,"nanos":57871},"constraint_time":{"secs":0,"nanos":295663},"parser_time":{"secs":0,"nanos":440794},"transformer_time":{"secs":0,"nanos":451429293},"trie_time":{"secs":0,"nanos":434372},"total_time":{"secs":0,"nanos":587429000}},"pass":false,"entropy":4.409392086830079,"entropy_diff":0.00004370662481978371,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,33,1292]}
{"generation":71,"metadata":{"sampler_time":{"secs":0,"nanos":65089},"constraint_time":{"secs":0,"nanos":343664},"parser_time":{"secs":0,"nanos":407706},"transformer_time":{"secs":0,"nanos":458845586},"trie_time":{"secs":0,"nanos":449870},"total_time":{"secs":0,"nanos":603935334}},"pass":false,"entropy":4.40937728479559,"entropy_diff":0.000014802034488781146,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":72,"metadata":{"sampler_time":{"secs":0,"nanos":53501},"constraint_time":{"secs":0,"nanos":199915},"parser_time":{"secs":0,"nanos":354365},"transformer_time":{"secs":0,"nanos":376813254},"trie_time":{"secs":0,"nanos":418006},"total_time":{"secs":0,"nanos":498949584}},"pass":false,"entropy":4.40934881347542,"entropy_diff":0.00002847132016992049,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,34,1292]}
{"generation":73,"metadata":{"sampler_time":{"secs":0,"nanos":66916},"constraint_time":{"secs":0,"nanos":363701},"parser_time":{"secs":0,"nanos":361334},"transformer_time":{"secs":0,"nanos":376617836},"trie_time":{"secs":0,"nanos":420041},"total_time":{"secs":0,"nanos":493994708}},"pass":false,"entropy":4.409336960285839,"entropy_diff":0.000011853189580968149,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,216,33,1292]}
{"generation":74,"metadata":{"sampler_time":{"secs":0,"nanos":76706},"constraint_time":{"secs":0,"nanos":604369},"parser_time":{"secs":0,"nanos":426912},"transformer_time":{"secs":0,"nanos":500378127},"trie_time":{"secs":0,"nanos":470042},"total_time":{"secs":0,"nanos":658816584}},"pass":false,"entropy":4.409313955134567,"entropy_diff":0.00002300515127195979,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":75,"metadata":{"sampler_time":{"secs":0,"nanos":42622},"constraint_time":{"secs":0,"nanos":184581},"parser_time":{"secs":0,"nanos":309621},"transformer_time":{"secs":0,"nanos":372122044},"trie_time":{"secs":0,"nanos":453961},"total_time":{"secs":0,"nanos":485623042}},"pass":false,"entropy":4.409296788341658,"entropy_diff":0.000017166792908973605,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,32,25,216,33,1292]}
{"generation":76,"metadata":{"sampler_time":{"secs":0,"nanos":74043},"constraint_time":{"secs":0,"nanos":278416},"parser_time":{"secs":0,"nanos":481702},"transformer_time":{"secs":0,"nanos":510289877},"trie_time":{"secs":0,"nanos":459707},"total_time":{"secs":0,"nanos":672765875}},"pass":false,"entropy":4.409278921604674,"entropy_diff":0.000017866736984117892,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col1 \" \" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":77,"metadata":{"sampler_time":{"secs":0,"nanos":80705},"constraint_time":{"secs":0,"nanos":275626},"parser_time":{"secs":0,"nanos":439175},"transformer_time":{"secs":0,"nanos":442095290},"trie_time":{"secs":0,"nanos":490081},"total_time":{"secs":0,"nanos":584803667}},"pass":false,"entropy":4.409252213152935,"entropy_diff":0.0000267084517391325,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":78,"metadata":{"sampler_time":{"secs":0,"nanos":65378},"constraint_time":{"secs":0,"nanos":342788},"parser_time":{"secs":0,"nanos":426826},"transformer_time":{"secs":0,"nanos":458078042},"trie_time":{"secs":0,"nanos":486332},"total_time":{"secs":0,"nanos":603373416}},"pass":false,"entropy":4.409248965442315,"entropy_diff":3.247710619547206e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":79,"metadata":{"sampler_time":{"secs":0,"nanos":60418},"constraint_time":{"secs":0,"nanos":256705},"parser_time":{"secs":0,"nanos":445220},"transformer_time":{"secs":0,"nanos":442695082},"trie_time":{"secs":0,"nanos":473205},"total_time":{"secs":0,"nanos":585848833}},"pass":false,"entropy":4.40924565158947,"entropy_diff":3.3138528454657035e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,33,1292]}
{"generation":80,"metadata":{"sampler_time":{"secs":0,"nanos":49080},"constraint_time":{"secs":0,"nanos":271203},"parser_time":{"secs":0,"nanos":414847},"transformer_time":{"secs":0,"nanos":434471708},"trie_time":{"secs":0,"nanos":473665},"total_time":{"secs":0,"nanos":573579042}},"pass":false,"entropy":4.40924270332992,"entropy_diff":2.948259549384602e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,33,25,216,33,25,216,33,1292]}
{"generation":81,"metadata":{"sampler_time":{"secs":0,"nanos":94585},"constraint_time":{"secs":0,"nanos":299242},"parser_time":{"secs":0,"nanos":496627},"transformer_time":{"secs":0,"nanos":504789373},"trie_time":{"secs":0,"nanos":492039},"total_time":{"secs":0,"nanos":660174667}},"pass":false,"entropy":4.409236949269836,"entropy_diff":5.754060084406376e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ (str.indexof col1 \" \" 1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":82,"metadata":{"sampler_time":{"secs":0,"nanos":101959},"constraint_time":{"secs":0,"nanos":273294},"parser_time":{"secs":0,"nanos":404501},"transformer_time":{"secs":0,"nanos":457635874},"trie_time":{"secs":0,"nanos":487162},"total_time":{"secs":0,"nanos":600569125}},"pass":false,"entropy":4.409222733881728,"entropy_diff":0.000014215388108418381,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,33,1292]}
{"generation":83,"metadata":{"sampler_time":{"secs":0,"nanos":70582},"constraint_time":{"secs":0,"nanos":300711},"parser_time":{"secs":0,"nanos":400496},"transformer_time":{"secs":0,"nanos":457973710},"trie_time":{"secs":0,"nanos":541875},"total_time":{"secs":0,"nanos":596948125}},"pass":false,"entropy":4.409180693752706,"entropy_diff":0.00004204012902153664,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,216,33,25,216,33,1292]}
{"generation":84,"metadata":{"sampler_time":{"secs":0,"nanos":109252},"constraint_time":{"secs":0,"nanos":520795},"parser_time":{"secs":0,"nanos":459503},"transformer_time":{"secs":0,"nanos":508152668},"trie_time":{"secs":0,"nanos":559831},"total_time":{"secs":0,"nanos":662221583}},"pass":false,"entropy":4.409177370201304,"entropy_diff":3.3235514020901746e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":85,"metadata":{"sampler_time":{"secs":0,"nanos":79044},"constraint_time":{"secs":0,"nanos":355920},"parser_time":{"secs":0,"nanos":438871},"transformer_time":{"secs":0,"nanos":450254251},"trie_time":{"secs":0,"nanos":567210},"total_time":{"secs":0,"nanos":588157042}},"pass":false,"entropy":4.409175181723754,"entropy_diff":2.188477550291168e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,33,1292]}
{"generation":86,"metadata":{"sampler_time":{"secs":0,"nanos":69833},"constraint_time":{"secs":0,"nanos":326914},"parser_time":{"secs":0,"nanos":386660},"transformer_time":{"secs":0,"nanos":457604128},"trie_time":{"secs":0,"nanos":573914},"total_time":{"secs":0,"nanos":594874792}},"pass":false,"entropy":4.409174348676236,"entropy_diff":8.330475180784447e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":87,"metadata":{"sampler_time":{"secs":0,"nanos":89756},"constraint_time":{"secs":0,"nanos":623502},"parser_time":{"secs":0,"nanos":536578},"transformer_time":{"secs":0,"nanos":524791665},"trie_time":{"secs":0,"nanos":583717},"total_time":{"secs":0,"nanos":682900625}},"pass":false,"entropy":4.409171988309657,"entropy_diff":2.3603665786353645e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":88,"metadata":{"sampler_time":{"secs":0,"nanos":97454},"constraint_time":{"secs":0,"nanos":366460},"parser_time":{"secs":0,"nanos":513162},"transformer_time":{"secs":0,"nanos":500215874},"trie_time":{"secs":0,"nanos":560495},"total_time":{"secs":0,"nanos":654296542}},"pass":false,"entropy":4.409170470752345,"entropy_diff":1.5175573118142438e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.at col1 0)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,261,664,33,216,32,1292,216,33,25,216,33,1292]}
{"generation":89,"metadata":{"sampler_time":{"secs":0,"nanos":100289},"constraint_time":{"secs":0,"nanos":281711},"parser_time":{"secs":0,"nanos":517211},"transformer_time":{"secs":0,"nanos":501322413},"trie_time":{"secs":0,"nanos":546296},"total_time":{"secs":0,"nanos":656408375}},"pass":false,"entropy":4.409169661243769,"entropy_diff":8.09508575727591e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":90,"metadata":{"sampler_time":{"secs":0,"nanos":68126},"constraint_time":{"secs":0,"nanos":176665},"parser_time":{"secs":0,"nanos":326004},"transformer_time":{"secs":0,"nanos":376367704},"trie_time":{"secs":0,"nanos":543164},"total_time":{"secs":0,"nanos":487495125}},"pass":false,"entropy":4.4091635675478065,"entropy_diff":6.093695962938739e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,32,25,216,33,1292]}
{"generation":91,"metadata":{"sampler_time":{"secs":0,"nanos":86789},"constraint_time":{"secs":0,"nanos":224663},"parser_time":{"secs":0,"nanos":308790},"transformer_time":{"secs":0,"nanos":368393081},"trie_time":{"secs":0,"nanos":537953},"total_time":{"secs":0,"nanos":478641667}},"pass":false,"entropy":4.409152692651989,"entropy_diff":0.000010874895817636343,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,34,25,216,33,1292]}
{"generation":92,"metadata":{"sampler_time":{"secs":0,"nanos":59498},"constraint_time":{"secs":0,"nanos":201872},"parser_time":{"secs":0,"nanos":359375},"transformer_time":{"secs":0,"nanos":409431955},"trie_time":{"secs":0,"nanos":546334},"total_time":{"secs":0,"nanos":530966125}},"pass":false,"entropy":4.409142084782389,"entropy_diff":0.000010607869599610353,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":93,"metadata":{"sampler_time":{"secs":0,"nanos":65544},"constraint_time":{"secs":0,"nanos":224668},"parser_time":{"secs":0,"nanos":325581},"transformer_time":{"secs":0,"nanos":376433166},"trie_time":{"secs":0,"nanos":549746},"total_time":{"secs":0,"nanos":490967084}},"pass":false,"entropy":4.409129463475102,"entropy_diff":0.000012621307287297157,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,25,216,33,1292]}
{"generation":94,"metadata":{"sampler_time":{"secs":0,"nanos":83879},"constraint_time":{"secs":0,"nanos":328670},"parser_time":{"secs":0,"nanos":454948},"transformer_time":{"secs":0,"nanos":458316083},"trie_time":{"secs":0,"nanos":581495},"total_time":{"secs":0,"nanos":596551542}},"pass":false,"entropy":4.4090962674657534,"entropy_diff":0.00003319600934847955,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,216,33,25,216,33,1292]}
{"generation":95,"metadata":{"sampler_time":{"secs":0,"nanos":69336},"constraint_time":{"secs":0,"nanos":333333},"parser_time":{"secs":0,"nanos":432746},"transformer_time":{"secs":0,"nanos":441873917},"trie_time":{"secs":0,"nanos":591378},"total_time":{"secs":0,"nanos":579485917}},"pass":false,"entropy":4.409095807871673,"entropy_diff":4.5959408012663516e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,33,1292]}
{"generation":96,"metadata":{"sampler_time":{"secs":0,"nanos":67084},"constraint_time":{"secs":0,"nanos":313169},"parser_time":{"secs":0,"nanos":417491},"transformer_time":{"secs":0,"nanos":458303334},"trie_time":{"secs":0,"nanos":589121},"total_time":{"secs":0,"nanos":596093958}},"pass":false,"entropy":4.409094429226852,"entropy_diff":1.3786448214148095e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,216,33,25,216,33,1292]}
{"generation":97,"metadata":{"sampler_time":{"secs":0,"nanos":78296},"constraint_time":{"secs":0,"nanos":256375},"parser_time":{"secs":0,"nanos":437834},"transformer_time":{"secs":0,"nanos":461143422},"trie_time":{"secs":0,"nanos":612127},"total_time":{"secs":0,"nanos":596516833}},"pass":false,"entropy":4.4090937628220885,"entropy_diff":6.664047633719861e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,34,216,33,25,216,33,25,216,33,1292]}
{"generation":98,"metadata":{"sampler_time":{"secs":0,"nanos":48877},"constraint_time":{"secs":0,"nanos":315203},"parser_time":{"secs":0,"nanos":380044},"transformer_time":{"secs":0,"nanos":433819537},"trie_time":{"secs":0,"nanos":610668},"total_time":{"secs":0,"nanos":562578625}},"pass":false,"entropy":4.4090927374374935,"entropy_diff":1.0253845950103369e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,476,20361,216,33,25,216,33,1292]}
{"generation":99,"metadata":{"sampler_time":{"secs":0,"nanos":86494},"constraint_time":{"secs":0,"nanos":185086},"parser_time":{"secs":0,"nanos":323089},"transformer_time":{"secs":0,"nanos":368395459},"trie_time":{"secs":0,"nanos":555331},"total_time":{"secs":0,"nanos":476628833}},"pass":false,"entropy":4.409091322447539,"entropy_diff":1.4149899545401468e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,33,216,33,25,216,33,1292]}
{"generation":100,"metadata":{"sampler_time":{"secs":0,"nanos":108041},"constraint_time":{"secs":0,"nanos":484791},"parser_time":{"secs":0,"nanos":541711},"transformer_time":{"secs":0,"nanos":533532418},"trie_time":{"secs":0,"nanos":733915},"total_time":{"secs":0,"nanos":695182042}},"pass":false,"entropy":4.40905855231711,"entropy_diff":0.000032770130428794175,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":101,"metadata":{"sampler_time":{"secs":0,"nanos":118877},"constraint_time":{"secs":0,"nanos":384412},"parser_time":{"secs":0,"nanos":468868},"transformer_time":{"secs":0,"nanos":527276292},"trie_time":{"secs":0,"nanos":683756},"total_time":{"secs":0,"nanos":687199917}},"pass":false,"entropy":4.40905803031688,"entropy_diff":5.220002305961202e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":102,"metadata":{"sampler_time":{"secs":0,"nanos":116042},"constraint_time":{"secs":0,"nanos":585121},"parser_time":{"secs":0,"nanos":468200},"transformer_time":{"secs":0,"nanos":532764331},"trie_time":{"secs":0,"nanos":685346},"total_time":{"secs":0,"nanos":688641375}},"pass":false,"entropy":4.409057673194541,"entropy_diff":3.571223388121325e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":103,"metadata":{"sampler_time":{"secs":0,"nanos":78420},"constraint_time":{"secs":0,"nanos":386996},"parser_time":{"secs":0,"nanos":413164},"transformer_time":{"secs":0,"nanos":450085001},"trie_time":{"secs":0,"nanos":701921},"total_time":{"secs":0,"nanos":585310334}},"pass":false,"entropy":4.409056270587292,"entropy_diff":1.402607249012533e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,33,1292]}
{"generation":104,"metadata":{"sampler_time":{"secs":0,"nanos":110790},"constraint_time":{"secs":0,"nanos":344334},"parser_time":{"secs":0,"nanos":387036},"transformer_time":{"secs":0,"nanos":450681411},"trie_time":{"secs":0,"nanos":702587},"total_time":{"secs":0,"nanos":587390875}},"pass":false,"entropy":4.40905608313082,"entropy_diff":1.8745647167861534e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,33,1292]}
{"generation":105,"metadata":{"sampler_time":{"secs":0,"nanos":131335},"constraint_time":{"secs":0,"nanos":449415},"parser_time":{"secs":0,"nanos":624462},"transformer_time":{"secs":0,"nanos":655195665},"trie_time":{"secs":0,"nanos":731508},"total_time":{"secs":0,"nanos":866783042}},"pass":false,"entropy":4.409055942455857,"entropy_diff":1.4067496323377782e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":106,"metadata":{"sampler_time":{"secs":0,"nanos":79454},"constraint_time":{"secs":0,"nanos":254956},"parser_time":{"secs":0,"nanos":413211},"transformer_time":{"secs":0,"nanos":444453375},"trie_time":{"secs":0,"nanos":756085},"total_time":{"secs":0,"nanos":588849000}},"pass":false,"entropy":4.4090557782077235,"entropy_diff":1.6424813331639143e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,216,33,1292]}
{"generation":107,"metadata":{"sampler_time":{"secs":0,"nanos":110540},"constraint_time":{"secs":0,"nanos":246544},"parser_time":{"secs":0,"nanos":388666},"transformer_time":{"secs":0,"nanos":442702790},"trie_time":{"secs":0,"nanos":686289},"total_time":{"secs":0,"nanos":581779625}},"pass":false,"entropy":4.409055561982959,"entropy_diff":2.162247643155979e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":108,"metadata":{"sampler_time":{"secs":0,"nanos":79172},"constraint_time":{"secs":0,"nanos":355880},"parser_time":{"secs":0,"nanos":430126},"transformer_time":{"secs":0,"nanos":475828623},"trie_time":{"secs":0,"nanos":759910},"total_time":{"secs":0,"nanos":623365917}},"pass":false,"entropy":4.409049825267425,"entropy_diff":5.736715534609971e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":109,"metadata":{"sampler_time":{"secs":0,"nanos":84835},"constraint_time":{"secs":0,"nanos":329709},"parser_time":{"secs":0,"nanos":404248},"transformer_time":{"secs":0,"nanos":450410709},"trie_time":{"secs":0,"nanos":802253},"total_time":{"secs":0,"nanos":594831083}},"pass":false,"entropy":4.409049773106998,"entropy_diff":5.216042620048711e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,33,1292]}
{"generation":110,"metadata":{"sampler_time":{"secs":0,"nanos":58536},"constraint_time":{"secs":0,"nanos":309541},"parser_time":{"secs":0,"nanos":406628},"transformer_time":{"secs":0,"nanos":442923585},"trie_time":{"secs":0,"nanos":808912},"total_time":{"secs":0,"nanos":584827084}},"pass":false,"entropy":4.409049726257225,"entropy_diff":4.684977383817568e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,216,33,1292]}
{"generation":111,"metadata":{"sampler_time":{"secs":0,"nanos":87669},"constraint_time":{"secs":0,"nanos":623091},"parser_time":{"secs":0,"nanos":476997},"transformer_time":{"secs":0,"nanos":527667959},"trie_time":{"secs":0,"nanos":772745},"total_time":{"secs":0,"nanos":696219334}},"pass":false,"entropy":4.409049662914725,"entropy_diff":6.334249924577762e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":112,"metadata":{"sampler_time":{"secs":0,"nanos":95245},"constraint_time":{"secs":0,"nanos":702205},"parser_time":{"secs":0,"nanos":515289},"transformer_time":{"secs":0,"nanos":526951748},"trie_time":{"secs":0,"nanos":839380},"total_time":{"secs":0,"nanos":697327250}},"pass":false,"entropy":4.409049468370462,"entropy_diff":1.9454426336551478e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof \" \" \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":113,"metadata":{"sampler_time":{"secs":0,"nanos":49083},"constraint_time":{"secs":0,"nanos":263334},"parser_time":{"secs":0,"nanos":416790},"transformer_time":{"secs":0,"nanos":484505168},"trie_time":{"secs":0,"nanos":816659},"total_time":{"secs":0,"nanos":638632625}},"pass":false,"entropy":4.40904901311577,"entropy_diff":4.552546917224731e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":114,"metadata":{"sampler_time":{"secs":0,"nanos":62207},"constraint_time":{"secs":0,"nanos":290795},"parser_time":{"secs":0,"nanos":423291},"transformer_time":{"secs":0,"nanos":451249043},"trie_time":{"secs":0,"nanos":818252},"total_time":{"secs":0,"nanos":600702416}},"pass":false,"entropy":4.409048988852318,"entropy_diff":2.4263452580441935e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,216,33,1292]}
{"generation":115,"metadata":{"sampler_time":{"secs":0,"nanos":62665},"constraint_time":{"secs":0,"nanos":305082},"parser_time":{"secs":0,"nanos":363833},"transformer_time":{"secs":0,"nanos":442948295},"trie_time":{"secs":0,"nanos":797708},"total_time":{"secs":0,"nanos":586712125}},"pass":false,"entropy":4.409048955645931,"entropy_diff":3.320638697346112e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,32,25,216,33,1292]}
{"generation":116,"metadata":{"sampler_time":{"secs":0,"nanos":46206},"constraint_time":{"secs":0,"nanos":320001},"parser_time":{"secs":0,"nanos":392747},"transformer_time":{"secs":0,"nanos":453106205},"trie_time":{"secs":0,"nanos":889876},"total_time":{"secs":0,"nanos":596079500}},"pass":false,"entropy":4.40904890006739,"entropy_diff":5.5578540880674154e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,34,1292]}
{"generation":117,"metadata":{"sampler_time":{"secs":0,"nanos":78628},"constraint_time":{"secs":0,"nanos":351417},"parser_time":{"secs":0,"nanos":477629},"transformer_time":{"secs":0,"nanos":516802462},"trie_time":{"secs":0,"nanos":840033},"total_time":{"secs":0,"nanos":685912792}},"pass":false,"entropy":4.409048886094219,"entropy_diff":1.3973171064662893e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,216,33,1292]}
{"generation":118,"metadata":{"sampler_time":{"secs":0,"nanos":82959},"constraint_time":{"secs":0,"nanos":639915},"parser_time":{"secs":0,"nanos":444000},"transformer_time":{"secs":0,"nanos":525059663},"trie_time":{"secs":0,"nanos":874122},"total_time":{"secs":0,"nanos":691184875}},"pass":false,"entropy":4.409048832932067,"entropy_diff":5.316215201389696e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,33,25,216,33,1292]}
{"generation":119,"metadata":{"sampler_time":{"secs":0,"nanos":98127},"constraint_time":{"secs":0,"nanos":365625},"parser_time":{"secs":0,"nanos":573955},"transformer_time":{"secs":0,"nanos":586974376},"trie_time":{"secs":0,"nanos":1046506},"total_time":{"secs":0,"nanos":775577292}},"pass":false,"entropy":4.4090487763129875,"entropy_diff":5.661907920284648e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":120,"metadata":{"sampler_time":{"secs":0,"nanos":150344},"constraint_time":{"secs":0,"nanos":431962},"parser_time":{"secs":0,"nanos":660208},"transformer_time":{"secs":0,"nanos":662032791},"trie_time":{"secs":0,"nanos":975075},"total_time":{"secs":0,"nanos":862363333}},"pass":false,"entropy":4.409048769133192,"entropy_diff":7.179795424860913e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col1 col2) (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":121,"metadata":{"sampler_time":{"secs":0,"nanos":119708},"constraint_time":{"secs":0,"nanos":355541},"parser_time":{"secs":0,"nanos":584449},"transformer_time":{"secs":0,"nanos":585172210},"trie_time":{"secs":0,"nanos":909664},"total_time":{"secs":0,"nanos":762264625}},"pass":false,"entropy":4.409048741273894,"entropy_diff":2.7859297979659914e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":122,"metadata":{"sampler_time":{"secs":0,"nanos":71747},"constraint_time":{"secs":0,"nanos":318043},"parser_time":{"secs":0,"nanos":444710},"transformer_time":{"secs":0,"nanos":441639000},"trie_time":{"secs":0,"nanos":905754},"total_time":{"secs":0,"nanos":579562292}},"pass":false,"entropy":4.409048732698245,"entropy_diff":8.575649523834272e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,34,1292]}
{"generation":123,"metadata":{"sampler_time":{"secs":0,"nanos":103377},"constraint_time":{"secs":0,"nanos":641251},"parser_time":{"secs":0,"nanos":500511},"transformer_time":{"secs":0,"nanos":500415710},"trie_time":{"secs":0,"nanos":893295},"total_time":{"secs":0,"nanos":652386458}},"pass":false,"entropy":4.409048713099556,"entropy_diff":1.9598688894006955e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace \" \" \",\" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,476,476,42934,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":124,"metadata":{"sampler_time":{"secs":0,"nanos":99958},"constraint_time":{"secs":0,"nanos":377125},"parser_time":{"secs":0,"nanos":492832},"transformer_time":{"secs":0,"nanos":527940959},"trie_time":{"secs":0,"nanos":887747},"total_time":{"secs":0,"nanos":686910375}},"pass":false,"entropy":4.409048619145302,"entropy_diff":9.395425326630402e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":125,"metadata":{"sampler_time":{"secs":0,"nanos":104997},"constraint_time":{"secs":0,"nanos":455877},"parser_time":{"secs":0,"nanos":514466},"transformer_time":{"secs":0,"nanos":475735878},"trie_time":{"secs":0,"nanos":925831},"total_time":{"secs":0,"nanos":618880125}},"pass":false,"entropy":4.4090484254905205,"entropy_diff":1.9365478198807295e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":126,"metadata":{"sampler_time":{"secs":0,"nanos":155378},"constraint_time":{"secs":0,"nanos":495909},"parser_time":{"secs":0,"nanos":522300},"transformer_time":{"secs":0,"nanos":499815212},"trie_time":{"secs":0,"nanos":892333},"total_time":{"secs":0,"nanos":654697291}},"pass":false,"entropy":4.409048381706478,"entropy_diff":4.378404216964782e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace (str.at col1 0) \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,365,1321,30,261,664,33,216,32,25,476,476,42934,25,216,33,25,216,33,1292]}
{"generation":127,"metadata":{"sampler_time":{"secs":0,"nanos":69748},"constraint_time":{"secs":0,"nanos":182208},"parser_time":{"secs":0,"nanos":362502},"transformer_time":{"secs":0,"nanos":368613125},"trie_time":{"secs":0,"nanos":875295},"total_time":{"secs":0,"nanos":480439875}},"pass":false,"entropy":4.409046865740305,"entropy_diff":1.5159661730379526e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,34,1292]}
{"generation":128,"metadata":{"sampler_time":{"secs":0,"nanos":80572},"constraint_time":{"secs":0,"nanos":303289},"parser_time":{"secs":0,"nanos":400993},"transformer_time":{"secs":0,"nanos":460060088},"trie_time":{"secs":0,"nanos":934635},"total_time":{"secs":0,"nanos":601497875}},"pass":false,"entropy":4.409044559331899,"entropy_diff":2.306408406482774e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,34,25,216,33,1292]}
{"generation":129,"metadata":{"sampler_time":{"secs":0,"nanos":105292},"constraint_time":{"secs":0,"nanos":419835},"parser_time":{"secs":0,"nanos":389330},"transformer_time":{"secs":0,"nanos":458840917},"trie_time":{"secs":0,"nanos":918163},"total_time":{"secs":0,"nanos":597636584}},"pass":false,"entropy":4.409044517256574,"entropy_diff":4.207532455779983e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,216,33,25,216,33,1292]}
{"generation":130,"metadata":{"sampler_time":{"secs":0,"nanos":91962},"constraint_time":{"secs":0,"nanos":310587},"parser_time":{"secs":0,"nanos":375669},"transformer_time":{"secs":0,"nanos":458767125},"trie_time":{"secs":0,"nanos":913961},"total_time":{"secs":0,"nanos":595916083}},"pass":false,"entropy":4.40904439951477,"entropy_diff":1.1774180386225908e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,34,25,216,33,25,216,33,1292]}
{"generation":131,"metadata":{"sampler_time":{"secs":0,"nanos":63294},"constraint_time":{"secs":0,"nanos":438082},"parser_time":{"secs":0,"nanos":474788},"transformer_time":{"secs":0,"nanos":495804211},"trie_time":{"secs":0,"nanos":1092416},"total_time":{"secs":0,"nanos":647911583}},"pass":false,"entropy":4.409044294140752,"entropy_diff":1.0537401795573942e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (+ 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,30425,216,33,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":132,"metadata":{"sampler_time":{"secs":0,"nanos":53170},"constraint_time":{"secs":0,"nanos":186295},"parser_time":{"secs":0,"nanos":337041},"transformer_time":{"secs":0,"nanos":376271331},"trie_time":{"secs":0,"nanos":930665},"total_time":{"secs":0,"nanos":494773417}},"pass":false,"entropy":4.409043900378124,"entropy_diff":3.9376262872536927e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,32,1292]}
{"generation":133,"metadata":{"sampler_time":{"secs":0,"nanos":69964},"constraint_time":{"secs":0,"nanos":425667},"parser_time":{"secs":0,"nanos":454252},"transformer_time":{"secs":0,"nanos":499970832},"trie_time":{"secs":0,"nanos":959123},"total_time":{"secs":0,"nanos":646469167}},"pass":false,"entropy":4.409039334901257,"entropy_diff":4.565476866780216e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":134,"metadata":{"sampler_time":{"secs":0,"nanos":78706},"constraint_time":{"secs":0,"nanos":291047},"parser_time":{"secs":0,"nanos":400672},"transformer_time":{"secs":0,"nanos":458273791},"trie_time":{"secs":0,"nanos":978621},"total_time":{"secs":0,"nanos":594488792}},"pass":false,"entropy":4.409039051608001,"entropy_diff":2.83293255520789e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,32,25,216,33,25,216,33,1292]}
{"generation":135,"metadata":{"sampler_time":{"secs":0,"nanos":72837},"constraint_time":{"secs":0,"nanos":178956},"parser_time":{"secs":0,"nanos":367207},"transformer_time":{"secs":0,"nanos":401648961},"trie_time":{"secs":0,"nanos":925963},"total_time":{"secs":0,"nanos":518730791}},"pass":false,"entropy":4.409038582247356,"entropy_diff":4.693606454608812e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":136,"metadata":{"sampler_time":{"secs":0,"nanos":81417},"constraint_time":{"secs":0,"nanos":252918},"parser_time":{"secs":0,"nanos":343169},"transformer_time":{"secs":0,"nanos":376034665},"trie_time":{"secs":0,"nanos":852741},"total_time":{"secs":0,"nanos":487747833}},"pass":false,"entropy":4.409035790597091,"entropy_diff":2.7916502647329366e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,33,25,216,33,1292]}
{"generation":137,"metadata":{"sampler_time":{"secs":0,"nanos":80241},"constraint_time":{"secs":0,"nanos":243290},"parser_time":{"secs":0,"nanos":442666},"transformer_time":{"secs":0,"nanos":460200919},"trie_time":{"secs":0,"nanos":988043},"total_time":{"secs":0,"nanos":598995958}},"pass":false,"entropy":4.409006613167229,"entropy_diff":0.000029177429862414783,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,34,25,216,33,1292]}
{"generation":138,"metadata":{"sampler_time":{"secs":0,"nanos":68131},"constraint_time":{"secs":0,"nanos":277167},"parser_time":{"secs":0,"nanos":400871},"transformer_time":{"secs":0,"nanos":458514000},"trie_time":{"secs":0,"nanos":1005254},"total_time":{"secs":0,"nanos":603574625}},"pass":false,"entropy":4.4090065710262225,"entropy_diff":4.2141006240115075e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,32,25,216,33,1292]}
{"generation":139,"metadata":{"sampler_time":{"secs":0,"nanos":108037},"constraint_time":{"secs":0,"nanos":560461},"parser_time":{"secs":0,"nanos":519535},"transformer_time":{"secs":0,"nanos":491707332},"trie_time":{"secs":0,"nanos":1008329},"total_time":{"secs":0,"nanos":651862083}},"pass":false,"entropy":4.409006540913871,"entropy_diff":3.011235172323268e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (- 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,17481,216,33,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":140,"metadata":{"sampler_time":{"secs":0,"nanos":84463},"constraint_time":{"secs":0,"nanos":653294},"parser_time":{"secs":0,"nanos":558289},"transformer_time":{"secs":0,"nanos":541622332},"trie_time":{"secs":0,"nanos":994046},"total_time":{"secs":0,"nanos":712760041}},"pass":false,"entropy":4.409006244198787,"entropy_diff":2.967150836141741e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr (str.substr col1 1 1) 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":141,"metadata":{"sampler_time":{"secs":0,"nanos":45919},"constraint_time":{"secs":0,"nanos":287751},"parser_time":{"secs":0,"nanos":479834},"transformer_time":{"secs":0,"nanos":442292878},"trie_time":{"secs":0,"nanos":1031837},"total_time":{"secs":0,"nanos":583658875}},"pass":false,"entropy":4.409005116948121,"entropy_diff":1.127250666144164e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,32,25,216,33,1292]}
{"generation":142,"metadata":{"sampler_time":{"secs":0,"nanos":73125},"constraint_time":{"secs":0,"nanos":314630},"parser_time":{"secs":0,"nanos":438793},"transformer_time":{"secs":0,"nanos":450868211},"trie_time":{"secs":0,"nanos":1087700},"total_time":{"secs":0,"nanos":596473292}},"pass":false,"entropy":4.409005054449771,"entropy_diff":6.249834960669887e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,32,1292]}
{"generation":143,"metadata":{"sampler_time":{"secs":0,"nanos":108539},"constraint_time":{"secs":0,"nanos":347623},"parser_time":{"secs":0,"nanos":498376},"transformer_time":{"secs":0,"nanos":525978874},"trie_time":{"secs":0,"nanos":1101627},"total_time":{"secs":0,"nanos":700165042}},"pass":false,"entropy":4.4090050434953225,"entropy_diff":1.095444890353292e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,1292,216,33,25,216,33,1292]}
{"generation":144,"metadata":{"sampler_time":{"secs":0,"nanos":136546},"constraint_time":{"secs":0,"nanos":337125},"parser_time":{"secs":0,"nanos":646754},"transformer_time":{"secs":0,"nanos":642834457},"trie_time":{"secs":0,"nanos":1089001},"total_time":{"secs":0,"nanos":854312375}},"pass":false,"entropy":4.409005001598434,"entropy_diff":4.1896888625103657e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) (str.indexof col1 \" \" (str.indexof col1 \" \" (str.indexof col1 \" \" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,216,33,1292,7754]}
{"generation":145,"metadata":{"sampler_time":{"secs":0,"nanos":102163},"constraint_time":{"secs":0,"nanos":587204},"parser_time":{"secs":0,"nanos":478912},"transformer_time":{"secs":0,"nanos":499825208},"trie_time":{"secs":0,"nanos":1100132},"total_time":{"secs":0,"nanos":666157834}},"pass":false,"entropy":4.409004945716507,"entropy_diff":5.588192664163216e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":146,"metadata":{"sampler_time":{"secs":0,"nanos":80420},"constraint_time":{"secs":0,"nanos":359541},"parser_time":{"secs":0,"nanos":428546},"transformer_time":{"secs":0,"nanos":442409827},"trie_time":{"secs":0,"nanos":1145668},"total_time":{"secs":0,"nanos":587130833}},"pass":false,"entropy":4.409004874909306,"entropy_diff":7.080720099139626e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,34,25,216,33,1292]}
{"generation":147,"metadata":{"sampler_time":{"secs":0,"nanos":61126},"constraint_time":{"secs":0,"nanos":320541},"parser_time":{"secs":0,"nanos":439964},"transformer_time":{"secs":0,"nanos":442547920},"trie_time":{"secs":0,"nanos":1128912},"total_time":{"secs":0,"nanos":584728917}},"pass":false,"entropy":4.409004835942302,"entropy_diff":3.896700384586893e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,216,33,1292]}
{"generation":148,"metadata":{"sampler_time":{"secs":0,"nanos":79922},"constraint_time":{"secs":0,"nanos":321042},"parser_time":{"secs":0,"nanos":445125},"transformer_time":{"secs":0,"nanos":443949042},"trie_time":{"secs":0,"nanos":1117201},"total_time":{"secs":0,"nanos":585053584}},"pass":false,"entropy":4.409004783174542,"entropy_diff":5.2767760827521215e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":149,"metadata":{"sampler_time":{"secs":0,"nanos":73544},"constraint_time":{"secs":0,"nanos":300541},"parser_time":{"secs":0,"nanos":470335},"transformer_time":{"secs":0,"nanos":433865625},"trie_time":{"secs":0,"nanos":1107541},"total_time":{"secs":0,"nanos":568543875}},"pass":false,"entropy":4.409004349290821,"entropy_diff":4.338837209516555e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,34,25,216,33,25,216,33,1292]}
{"generation":150,"metadata":{"sampler_time":{"secs":0,"nanos":69583},"constraint_time":{"secs":0,"nanos":182002},"parser_time":{"secs":0,"nanos":299382},"transformer_time":{"secs":0,"nanos":376081543},"trie_time":{"secs":0,"nanos":1069621},"total_time":{"secs":0,"nanos":490107125}},"pass":false,"entropy":4.4090037700493605,"entropy_diff":5.792414601302198e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,34,25,216,33,1292]}
{"generation":151,"metadata":{"sampler_time":{"secs":0,"nanos":96873},"constraint_time":{"secs":0,"nanos":370920},"parser_time":{"secs":0,"nanos":466623},"transformer_time":{"secs":0,"nanos":477053872},"trie_time":{"secs":0,"nanos":1067583},"total_time":{"secs":0,"nanos":619780750}},"pass":false,"entropy":4.409000646254494,"entropy_diff":3.123794866333185e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (int.to.str (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,591,30,1141,30,1321,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":152,"metadata":{"sampler_time":{"secs":0,"nanos":96673},"constraint_time":{"secs":0,"nanos":350749},"parser_time":{"secs":0,"nanos":430332},"transformer_time":{"secs":0,"nanos":434163709},"trie_time":{"secs":0,"nanos":1012123},"total_time":{"secs":0,"nanos":563091459}},"pass":false,"entropy":4.408995879931629,"entropy_diff":4.766322865279449e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.at col1 0) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,261,664,33,216,32,25,476,476,216,33,25,216,33,1292]}
{"generation":153,"metadata":{"sampler_time":{"secs":0,"nanos":79457},"constraint_time":{"secs":0,"nanos":199623},"parser_time":{"secs":0,"nanos":415293},"transformer_time":{"secs":0,"nanos":434427455},"trie_time":{"secs":0,"nanos":1084581},"total_time":{"secs":0,"nanos":559668875}},"pass":false,"entropy":4.408980488731681,"entropy_diff":0.000015391199948311396,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":154,"metadata":{"sampler_time":{"secs":0,"nanos":42750},"constraint_time":{"secs":0,"nanos":182338},"parser_time":{"secs":0,"nanos":349918},"transformer_time":{"secs":0,"nanos":376805164},"trie_time":{"secs":0,"nanos":1021121},"total_time":{"secs":0,"nanos":486499042}},"pass":false,"entropy":4.408978072891533,"entropy_diff":2.415840147484971e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,34,216,33,25,216,33,1292]}
{"generation":155,"metadata":{"sampler_time":{"secs":0,"nanos":90957},"constraint_time":{"secs":0,"nanos":286378},"parser_time":{"secs":0,"nanos":541495},"transformer_time":{"secs":0,"nanos":509776538},"trie_time":{"secs":0,"nanos":1055166},"total_time":{"secs":0,"nanos":665928916}},"pass":false,"entropy":4.408969759939476,"entropy_diff":8.31295205738769e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.indexof col1 \" \" 1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":156,"metadata":{"sampler_time":{"secs":0,"nanos":66419},"constraint_time":{"secs":0,"nanos":216665},"parser_time":{"secs":0,"nanos":455920},"transformer_time":{"secs":0,"nanos":442815873},"trie_time":{"secs":0,"nanos":1078950},"total_time":{"secs":0,"nanos":578629292}},"pass":false,"entropy":4.408965791400369,"entropy_diff":3.968539107113145e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":157,"metadata":{"sampler_time":{"secs":0,"nanos":58918},"constraint_time":{"secs":0,"nanos":277875},"parser_time":{"secs":0,"nanos":420368},"transformer_time":{"secs":0,"nanos":441976213},"trie_time":{"secs":0,"nanos":1043540},"total_time":{"secs":0,"nanos":576951750}},"pass":false,"entropy":4.4089627162537814,"entropy_diff":3.075146587150357e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 \" \" \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,476,476,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":158,"metadata":{"sampler_time":{"secs":0,"nanos":45998},"constraint_time":{"secs":0,"nanos":167083},"parser_time":{"secs":0,"nanos":263416},"transformer_time":{"secs":0,"nanos":345993331},"trie_time":{"secs":0,"nanos":1073539},"total_time":{"secs":0,"nanos":451635292}},"pass":false,"entropy":4.4089522916435016,"entropy_diff":0.000010424610279891056,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,216]}
{"generation":159,"metadata":{"sampler_time":{"secs":0,"nanos":66047},"constraint_time":{"secs":0,"nanos":212463},"parser_time":{"secs":0,"nanos":316631},"transformer_time":{"secs":0,"nanos":367617960},"trie_time":{"secs":0,"nanos":1022708},"total_time":{"secs":0,"nanos":476562541}},"pass":false,"entropy":4.408944904011121,"entropy_diff":7.387632380506659e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,34,216,33,25,216,33,1292]}
{"generation":160,"metadata":{"sampler_time":{"secs":0,"nanos":77704},"constraint_time":{"secs":0,"nanos":314255},"parser_time":{"secs":0,"nanos":401456},"transformer_time":{"secs":0,"nanos":459172252},"trie_time":{"secs":0,"nanos":1030585},"total_time":{"secs":0,"nanos":599144500}},"pass":false,"entropy":4.408926284940042,"entropy_diff":0.00001861907107869598,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":161,"metadata":{"sampler_time":{"secs":0,"nanos":73334},"constraint_time":{"secs":0,"nanos":236540},"parser_time":{"secs":0,"nanos":387498},"transformer_time":{"secs":0,"nanos":434925790},"trie_time":{"secs":0,"nanos":1112548},"total_time":{"secs":0,"nanos":568494458}},"pass":false,"entropy":4.4089186242820135,"entropy_diff":7.660658028818546e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,1292]}
{"generation":162,"metadata":{"sampler_time":{"secs":0,"nanos":57710},"constraint_time":{"secs":0,"nanos":179372},"parser_time":{"secs":0,"nanos":325952},"transformer_time":{"secs":0,"nanos":368379419},"trie_time":{"secs":0,"nanos":1096708},"total_time":{"secs":0,"nanos":479503042}},"pass":false,"entropy":4.4089175077116005,"entropy_diff":1.1165704130178256e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,32,1292]}
{"generation":163,"metadata":{"sampler_time":{"secs":0,"nanos":99247},"constraint_time":{"secs":0,"nanos":330379},"parser_time":{"secs":0,"nanos":436043},"transformer_time":{"secs":0,"nanos":517336499},"trie_time":{"secs":0,"nanos":1180949},"total_time":{"secs":0,"nanos":675482333}},"pass":false,"entropy":4.408916710021145,"entropy_diff":7.976904559114928e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":164,"metadata":{"sampler_time":{"secs":0,"nanos":118752},"constraint_time":{"secs":0,"nanos":465039},"parser_time":{"secs":0,"nanos":660993},"transformer_time":{"secs":0,"nanos":676249665},"trie_time":{"secs":0,"nanos":1216419},"total_time":{"secs":0,"nanos":877709792}},"pass":false,"entropy":4.4089167043728015,"entropy_diff":5.648343126551936e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":165,"metadata":{"sampler_time":{"secs":0,"nanos":110379},"constraint_time":{"secs":0,"nanos":660625},"parser_time":{"secs":0,"nanos":569917},"transformer_time":{"secs":0,"nanos":526306705},"trie_time":{"secs":0,"nanos":1320046},"total_time":{"secs":0,"nanos":689966125}},"pass":false,"entropy":4.408916674544178,"entropy_diff":2.982862312705947e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":166,"metadata":{"sampler_time":{"secs":0,"nanos":74582},"constraint_time":{"secs":0,"nanos":345377},"parser_time":{"secs":0,"nanos":435625},"transformer_time":{"secs":0,"nanos":442714458},"trie_time":{"secs":0,"nanos":1319748},"total_time":{"secs":0,"nanos":582148833}},"pass":false,"entropy":4.408916633450311,"entropy_diff":4.109386697592754e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,32,25,216,33,1292]}
{"generation":167,"metadata":{"sampler_time":{"secs":0,"nanos":58667},"constraint_time":{"secs":0,"nanos":310576},"parser_time":{"secs":0,"nanos":438324},"transformer_time":{"secs":0,"nanos":442510540},"trie_time":{"secs":0,"nanos":1370712},"total_time":{"secs":0,"nanos":576849458}},"pass":false,"entropy":4.408916600255848,"entropy_diff":3.319446317817665e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,34,25,216,33,1292]}
{"generation":168,"metadata":{"sampler_time":{"secs":0,"nanos":67543},"constraint_time":{"secs":0,"nanos":655375},"parser_time":{"secs":0,"nanos":546335},"transformer_time":{"secs":0,"nanos":523750877},"trie_time":{"secs":0,"nanos":1358950},"total_time":{"secs":0,"nanos":680987833}},"pass":false,"entropy":4.408916557015956,"entropy_diff":4.323989255539118e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":169,"metadata":{"sampler_time":{"secs":0,"nanos":128334},"constraint_time":{"secs":0,"nanos":465333},"parser_time":{"secs":0,"nanos":676790},"transformer_time":{"secs":0,"nanos":667359331},"trie_time":{"secs":0,"nanos":1394291},"total_time":{"secs":0,"nanos":867122250}},"pass":false,"entropy":4.408916536919696,"entropy_diff":2.009625976739926e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":170,"metadata":{"sampler_time":{"secs":0,"nanos":66086},"constraint_time":{"secs":0,"nanos":318163},"parser_time":{"secs":0,"nanos":446292},"transformer_time":{"secs":0,"nanos":450364339},"trie_time":{"secs":0,"nanos":1389996},"total_time":{"secs":0,"nanos":583990917}},"pass":false,"entropy":4.408916535816336,"entropy_diff":1.1033600699761337e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,34,1292]}
{"generation":171,"metadata":{"sampler_time":{"secs":0,"nanos":90002},"constraint_time":{"secs":0,"nanos":309542},"parser_time":{"secs":0,"nanos":475919},"transformer_time":{"secs":0,"nanos":483757790},"trie_time":{"secs":0,"nanos":1385294},"total_time":{"secs":0,"nanos":637968666}},"pass":false,"entropy":4.408916530758871,"entropy_diff":5.057464669278033e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":172,"metadata":{"sampler_time":{"secs":0,"nanos":107246},"constraint_time":{"secs":0,"nanos":339245},"parser_time":{"secs":0,"nanos":521955},"transformer_time":{"secs":0,"nanos":517560709},"trie_time":{"secs":0,"nanos":1408966},"total_time":{"secs":0,"nanos":689130000}},"pass":false,"entropy":4.408916523452405,"entropy_diff":7.306466542900125e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,1292,216,33,1292]}
{"generation":173,"metadata":{"sampler_time":{"secs":0,"nanos":69175},"constraint_time":{"secs":0,"nanos":326083},"parser_time":{"secs":0,"nanos":406623},"transformer_time":{"secs":0,"nanos":442677295},"trie_time":{"secs":0,"nanos":1379336},"total_time":{"secs":0,"nanos":582892208}},"pass":false,"entropy":4.408916522143019,"entropy_diff":1.3093854889234535e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,34,1292]}
{"generation":174,"metadata":{"sampler_time":{"secs":0,"nanos":72881},"constraint_time":{"secs":0,"nanos":316290},"parser_time":{"secs":0,"nanos":444959},"transformer_time":{"secs":0,"nanos":444543289},"trie_time":{"secs":0,"nanos":1347254},"total_time":{"secs":0,"nanos":586894500}},"pass":false,"entropy":4.408916507825011,"entropy_diff":1.4318008112468306e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,32,25,216,33,1292]}
{"generation":175,"metadata":{"sampler_time":{"secs":0,"nanos":64368},"constraint_time":{"secs":0,"nanos":604921},"parser_time":{"secs":0,"nanos":471254},"transformer_time":{"secs":0,"nanos":508569831},"trie_time":{"secs":0,"nanos":1458243},"total_time":{"secs":0,"nanos":675851375}},"pass":false,"entropy":4.408916465660287,"entropy_diff":4.216472415663475e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":176,"metadata":{"sampler_time":{"secs":0,"nanos":96621},"constraint_time":{"secs":0,"nanos":333255},"parser_time":{"secs":0,"nanos":466498},"transformer_time":{"secs":0,"nanos":440208874},"trie_time":{"secs":0,"nanos":1910176},"total_time":{"secs":0,"nanos":714533125}},"pass":false,"entropy":4.408916444489674,"entropy_diff":2.1170612818366408e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,34,216,32,25,216,33,25,216,33,1292]}
{"generation":177,"metadata":{"sampler_time":{"secs":0,"nanos":105747},"constraint_time":{"secs":0,"nanos":187125},"parser_time":{"secs":0,"nanos":380293},"transformer_time":{"secs":0,"nanos":426690375},"trie_time":{"secs":0,"nanos":1253751},"total_time":{"secs":0,"nanos":563053083}},"pass":false,"entropy":4.408915714164984,"entropy_diff":7.303246896128712e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \",\" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,42934,216,33,1292,216,33,1292]}
{"generation":178,"metadata":{"sampler_time":{"secs":0,"nanos":83001},"constraint_time":{"secs":0,"nanos":306121},"parser_time":{"secs":0,"nanos":472995},"transformer_time":{"secs":0,"nanos":477304832},"trie_time":{"secs":0,"nanos":1197709},"total_time":{"secs":0,"nanos":628704333}},"pass":false,"entropy":4.408915268120288,"entropy_diff":4.4604469628950483e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (int.to.str (str.indexof col1 \" \" 1)) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,591,30,1141,30,1321,365,1321,30,3888,1714,664,33,476,476,216,33,1292,476,476,216,33,25,216,33,1292]}
{"generation":179,"metadata":{"sampler_time":{"secs":0,"nanos":98212},"constraint_time":{"secs":0,"nanos":236460},"parser_time":{"secs":0,"nanos":382829},"transformer_time":{"secs":0,"nanos":447864583},"trie_time":{"secs":0,"nanos":1294125},"total_time":{"secs":0,"nanos":588403042}},"pass":false,"entropy":4.408900940825584,"entropy_diff":0.000014327294704408189,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":180,"metadata":{"sampler_time":{"secs":0,"nanos":93465},"constraint_time":{"secs":0,"nanos":196250},"parser_time":{"secs":0,"nanos":409920},"transformer_time":{"secs":0,"nanos":460206081},"trie_time":{"secs":0,"nanos":1280831},"total_time":{"secs":0,"nanos":610483125}},"pass":false,"entropy":4.408899364957976,"entropy_diff":1.5758676079613565e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ 1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":181,"metadata":{"sampler_time":{"secs":0,"nanos":77955},"constraint_time":{"secs":0,"nanos":294243},"parser_time":{"secs":0,"nanos":443426},"transformer_time":{"secs":0,"nanos":487078419},"trie_time":{"secs":0,"nanos":1437745},"total_time":{"secs":0,"nanos":640949625}},"pass":false,"entropy":4.408898758580514,"entropy_diff":6.063774620201912e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":182,"metadata":{"sampler_time":{"secs":0,"nanos":84879},"constraint_time":{"secs":0,"nanos":300916},"parser_time":{"secs":0,"nanos":404662},"transformer_time":{"secs":0,"nanos":450283667},"trie_time":{"secs":0,"nanos":1445045},"total_time":{"secs":0,"nanos":594718917}},"pass":false,"entropy":4.408898755079838,"entropy_diff":3.5006753051902706e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,34,1292]}
{"generation":183,"metadata":{"sampler_time":{"secs":0,"nanos":116205},"constraint_time":{"secs":0,"nanos":309794},"parser_time":{"secs":0,"nanos":537661},"transformer_time":{"secs":0,"nanos":549681963},"trie_time":{"secs":0,"nanos":1463171},"total_time":{"secs":0,"nanos":723727333}},"pass":false,"entropy":4.408898751340803,"entropy_diff":3.739035747685193e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (- (str.indexof col1 col1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":184,"metadata":{"sampler_time":{"secs":0,"nanos":115956},"constraint_time":{"secs":0,"nanos":295247},"parser_time":{"secs":0,"nanos":573759},"transformer_time":{"secs":0,"nanos":594834293},"trie_time":{"secs":0,"nanos":1479527},"total_time":{"secs":0,"nanos":778690542}},"pass":false,"entropy":4.408898745817461,"entropy_diff":5.52334178394176e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) (str.indexof col2 (str.replace col2 col2 col1) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,34,7754]}
{"generation":185,"metadata":{"sampler_time":{"secs":0,"nanos":104797},"constraint_time":{"secs":0,"nanos":712004},"parser_time":{"secs":0,"nanos":529708},"transformer_time":{"secs":0,"nanos":525126083},"trie_time":{"secs":0,"nanos":1484201},"total_time":{"secs":0,"nanos":685982166}},"pass":false,"entropy":4.408898742702657,"entropy_diff":3.114803526216292e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":186,"metadata":{"sampler_time":{"secs":0,"nanos":168124},"constraint_time":{"secs":0,"nanos":376623},"parser_time":{"secs":0,"nanos":726457},"transformer_time":{"secs":0,"nanos":674610539},"trie_time":{"secs":0,"nanos":1463084},"total_time":{"secs":0,"nanos":872642500}},"pass":false,"entropy":4.408898733325822,"entropy_diff":9.376835308216869e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col2 (str.replace col2 col1 \" \") (str.indexof col1 col2 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,365,1321,30,3888,1714,664,33,664,34,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":187,"metadata":{"sampler_time":{"secs":0,"nanos":102294},"constraint_time":{"secs":0,"nanos":537833},"parser_time":{"secs":0,"nanos":543752},"transformer_time":{"secs":0,"nanos":499777087},"trie_time":{"secs":0,"nanos":1486874},"total_time":{"secs":0,"nanos":646951500}},"pass":false,"entropy":4.408898717128972,"entropy_diff":1.6196850083360914e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,42934,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":188,"metadata":{"sampler_time":{"secs":0,"nanos":94668},"constraint_time":{"secs":0,"nanos":356003},"parser_time":{"secs":0,"nanos":445290},"transformer_time":{"secs":0,"nanos":441987874},"trie_time":{"secs":0,"nanos":1457544},"total_time":{"secs":0,"nanos":571874709}},"pass":false,"entropy":4.408898707067272,"entropy_diff":1.0061699917685019e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace \" \" col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,476,476,664,33,476,20361,216,33,25,216,33,1292]}
{"generation":189,"metadata":{"sampler_time":{"secs":0,"nanos":82959},"constraint_time":{"secs":0,"nanos":180416},"parser_time":{"secs":0,"nanos":358953},"transformer_time":{"secs":0,"nanos":376280877},"trie_time":{"secs":0,"nanos":1368046},"total_time":{"secs":0,"nanos":485143167}},"pass":false,"entropy":4.4088979826087185,"entropy_diff":7.244585535914894e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,34,25,216,33,1292]}
{"generation":190,"metadata":{"sampler_time":{"secs":0,"nanos":100292},"constraint_time":{"secs":0,"nanos":216332},"parser_time":{"secs":0,"nanos":350541},"transformer_time":{"secs":0,"nanos":376598962},"trie_time":{"secs":0,"nanos":1328782},"total_time":{"secs":0,"nanos":485284750}},"pass":false,"entropy":4.40889718613655,"entropy_diff":7.964721682185427e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,25,216,33,1292]}
{"generation":191,"metadata":{"sampler_time":{"secs":0,"nanos":118794},"constraint_time":{"secs":0,"nanos":275080},"parser_time":{"secs":0,"nanos":466201},"transformer_time":{"secs":0,"nanos":494863790},"trie_time":{"secs":0,"nanos":1389636},"total_time":{"secs":0,"nanos":637869750}},"pass":false,"entropy":4.408889279453763,"entropy_diff":7.9066827876062e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof \" \" \",\" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,476,476,42934,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":192,"metadata":{"sampler_time":{"secs":0,"nanos":112170},"constraint_time":{"secs":0,"nanos":328090},"parser_time":{"secs":0,"nanos":475202},"transformer_time":{"secs":0,"nanos":491743498},"trie_time":{"secs":0,"nanos":1464540},"total_time":{"secs":0,"nanos":632410167}},"pass":false,"entropy":4.40888890353021,"entropy_diff":3.759235527311944e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":193,"metadata":{"sampler_time":{"secs":0,"nanos":85914},"constraint_time":{"secs":0,"nanos":263463},"parser_time":{"secs":0,"nanos":471583},"transformer_time":{"secs":0,"nanos":459065126},"trie_time":{"secs":0,"nanos":1475288},"total_time":{"secs":0,"nanos":592303084}},"pass":false,"entropy":4.408888880213254,"entropy_diff":2.331695547752588e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,34,25,216,33,1292]}
{"generation":194,"metadata":{"sampler_time":{"secs":0,"nanos":159419},"constraint_time":{"secs":0,"nanos":438042},"parser_time":{"secs":0,"nanos":757256},"transformer_time":{"secs":0,"nanos":708810416},"trie_time":{"secs":0,"nanos":1478948},"total_time":{"secs":0,"nanos":910312042}},"pass":false,"entropy":4.4088888504995545,"entropy_diff":2.9713699944977634e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) (str.indexof col2 (str.substr col2 0 1) (str.indexof col2 \" \" 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":195,"metadata":{"sampler_time":{"secs":0,"nanos":105254},"constraint_time":{"secs":0,"nanos":314917},"parser_time":{"secs":0,"nanos":414913},"transformer_time":{"secs":0,"nanos":458056914},"trie_time":{"secs":0,"nanos":1499248},"total_time":{"secs":0,"nanos":589639125}},"pass":false,"entropy":4.408888805438471,"entropy_diff":4.506108375323947e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,34,25,216,33,25,216,33,1292]}
{"generation":196,"metadata":{"sampler_time":{"secs":0,"nanos":106503},"constraint_time":{"secs":0,"nanos":305284},"parser_time":{"secs":0,"nanos":503707},"transformer_time":{"secs":0,"nanos":503713957},"trie_time":{"secs":0,"nanos":1546128},"total_time":{"secs":0,"nanos":646046542}},"pass":false,"entropy":4.408888729204255,"entropy_diff":7.623421538482944e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (- (str.indexof col1 \" \" 1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":197,"metadata":{"sampler_time":{"secs":0,"nanos":63040},"constraint_time":{"secs":0,"nanos":303667},"parser_time":{"secs":0,"nanos":492890},"transformer_time":{"secs":0,"nanos":491814914},"trie_time":{"secs":0,"nanos":1548785},"total_time":{"secs":0,"nanos":626837500}},"pass":false,"entropy":4.408887946669839,"entropy_diff":7.825344159329006e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":198,"metadata":{"sampler_time":{"secs":0,"nanos":115842},"constraint_time":{"secs":0,"nanos":420660},"parser_time":{"secs":0,"nanos":710837},"transformer_time":{"secs":0,"nanos":709437627},"trie_time":{"secs":0,"nanos":1634033},"total_time":{"secs":0,"nanos":906650917}},"pass":false,"entropy":4.408887928557226,"entropy_diff":1.8112613631160457e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) (str.indexof col1 (str.substr col1 0 1) (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":199,"metadata":{"sampler_time":{"secs":0,"nanos":47793},"constraint_time":{"secs":0,"nanos":368500},"parser_time":{"secs":0,"nanos":444704},"transformer_time":{"secs":0,"nanos":460370544},"trie_time":{"secs":0,"nanos":1616790},"total_time":{"secs":0,"nanos":589214250}},"pass":false,"entropy":4.408887882211927,"entropy_diff":4.6345299153927044e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,34,25,216,33,1292]}
{"generation":200,"metadata":{"sampler_time":{"secs":0,"nanos":68206},"constraint_time":{"secs":0,"nanos":317503},"parser_time":{"secs":0,"nanos":419496},"transformer_time":{"secs":0,"nanos":458484417},"trie_time":{"secs":0,"nanos":1628549},"total_time":{"secs":0,"nanos":587609875}},"pass":false,"entropy":4.408887847731811,"entropy_diff":3.4480115651547294e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,32,25,216,33,1292]}
{"generation":201,"metadata":{"sampler_time":{"secs":0,"nanos":59546},"constraint_time":{"secs":0,"nanos":309123},"parser_time":{"secs":0,"nanos":420950},"transformer_time":{"secs":0,"nanos":458871084},"trie_time":{"secs":0,"nanos":1593387},"total_time":{"secs":0,"nanos":589093000}},"pass":false,"entropy":4.408887822719865,"entropy_diff":2.5011946291897402e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,32,25,216,33,25,216,33,1292]}
{"generation":202,"metadata":{"sampler_time":{"secs":0,"nanos":78792},"constraint_time":{"secs":0,"nanos":357459},"parser_time":{"secs":0,"nanos":427046},"transformer_time":{"secs":0,"nanos":443203373},"trie_time":{"secs":0,"nanos":1502040},"total_time":{"secs":0,"nanos":570801333}},"pass":false,"entropy":4.408887735895429,"entropy_diff":8.682443564111963e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":203,"metadata":{"sampler_time":{"secs":0,"nanos":76128},"constraint_time":{"secs":0,"nanos":215206},"parser_time":{"secs":0,"nanos":334753},"transformer_time":{"secs":0,"nanos":378245041},"trie_time":{"secs":0,"nanos":1492115},"total_time":{"secs":0,"nanos":484633125}},"pass":false,"entropy":4.408886215023618,"entropy_diff":1.5208718107118102e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,216,32,25,216,33,1292]}
{"generation":204,"metadata":{"sampler_time":{"secs":0,"nanos":88417},"constraint_time":{"secs":0,"nanos":383548},"parser_time":{"secs":0,"nanos":507628},"transformer_time":{"secs":0,"nanos":525442630},"trie_time":{"secs":0,"nanos":1614866},"total_time":{"secs":0,"nanos":674465958}},"pass":false,"entropy":4.408885530211113,"entropy_diff":6.848125053693366e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 (str.indexof col2 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":205,"metadata":{"sampler_time":{"secs":0,"nanos":136327},"constraint_time":{"secs":0,"nanos":442495},"parser_time":{"secs":0,"nanos":724696},"transformer_time":{"secs":0,"nanos":709198542},"trie_time":{"secs":0,"nanos":1676637},"total_time":{"secs":0,"nanos":905441125}},"pass":false,"entropy":4.40888547681949,"entropy_diff":5.33916226785891e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) (str.indexof col2 (str.substr col2 1 2) (str.indexof col2 \" \" 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,33,216,34,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":206,"metadata":{"sampler_time":{"secs":0,"nanos":82746},"constraint_time":{"secs":0,"nanos":246375},"parser_time":{"secs":0,"nanos":450671},"transformer_time":{"secs":0,"nanos":458276086},"trie_time":{"secs":0,"nanos":1648825},"total_time":{"secs":0,"nanos":588568542}},"pass":false,"entropy":4.408885456656059,"entropy_diff":2.016343092492434e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,34,25,216,33,1292]}
{"generation":207,"metadata":{"sampler_time":{"secs":0,"nanos":85827},"constraint_time":{"secs":0,"nanos":322910},"parser_time":{"secs":0,"nanos":462128},"transformer_time":{"secs":0,"nanos":452106835},"trie_time":{"secs":0,"nanos":1953125},"total_time":{"secs":0,"nanos":581701833}},"pass":false,"entropy":4.408885434592516,"entropy_diff":2.206354299261193e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 2 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,34,216,34,25,216,33,25,216,33,1292]}
{"generation":208,"metadata":{"sampler_time":{"secs":0,"nanos":148992},"constraint_time":{"secs":0,"nanos":461665},"parser_time":{"secs":0,"nanos":781633},"transformer_time":{"secs":0,"nanos":743110501},"trie_time":{"secs":0,"nanos":1907715},"total_time":{"secs":0,"nanos":952980209}},"pass":false,"entropy":4.408885394293551,"entropy_diff":4.029896505386432e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) (str.indexof col1 (str.substr col1 1 2) (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":209,"metadata":{"sampler_time":{"secs":0,"nanos":87914},"constraint_time":{"secs":0,"nanos":589795},"parser_time":{"secs":0,"nanos":559042},"transformer_time":{"secs":0,"nanos":535495209},"trie_time":{"secs":0,"nanos":1822457},"total_time":{"secs":0,"nanos":683845125}},"pass":false,"entropy":4.408885370644172,"entropy_diff":2.3649379343737564e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 (str.indexof col1 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":210,"metadata":{"sampler_time":{"secs":0,"nanos":64747},"constraint_time":{"secs":0,"nanos":360917},"parser_time":{"secs":0,"nanos":358370},"transformer_time":{"secs":0,"nanos":376568834},"trie_time":{"secs":0,"nanos":1703708},"total_time":{"secs":0,"nanos":484019125}},"pass":false,"entropy":4.408885224953556,"entropy_diff":1.4569061601577005e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,34,1292]}
{"generation":211,"metadata":{"sampler_time":{"secs":0,"nanos":96662},"constraint_time":{"secs":0,"nanos":330080},"parser_time":{"secs":0,"nanos":433626},"transformer_time":{"secs":0,"nanos":458345664},"trie_time":{"secs":0,"nanos":1757297},"total_time":{"secs":0,"nanos":588500208}},"pass":false,"entropy":4.408884477499241,"entropy_diff":7.474543153307422e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr \" \" 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,476,476,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":212,"metadata":{"sampler_time":{"secs":0,"nanos":53080},"constraint_time":{"secs":0,"nanos":192375},"parser_time":{"secs":0,"nanos":326418},"transformer_time":{"secs":0,"nanos":369518126},"trie_time":{"secs":0,"nanos":1644716},"total_time":{"secs":0,"nanos":473664959}},"pass":false,"entropy":4.408883903628858,"entropy_diff":5.738703823254809e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,42934,216,33,25,216,33,1292]}
{"generation":213,"metadata":{"sampler_time":{"secs":0,"nanos":64959},"constraint_time":{"secs":0,"nanos":193079},"parser_time":{"secs":0,"nanos":378247},"transformer_time":{"secs":0,"nanos":376097875},"trie_time":{"secs":0,"nanos":1691958},"total_time":{"secs":0,"nanos":483452458}},"pass":false,"entropy":4.40888105304682,"entropy_diff":2.8505820379720603e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,34,1292]}
{"generation":214,"metadata":{"sampler_time":{"secs":0,"nanos":58506},"constraint_time":{"secs":0,"nanos":216498},"parser_time":{"secs":0,"nanos":307329},"transformer_time":{"secs":0,"nanos":335064250},"trie_time":{"secs":0,"nanos":1574745},"total_time":{"secs":0,"nanos":429706625}},"pass":false,"entropy":4.408880383210624,"entropy_diff":6.698361962875765e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,216]}
{"generation":215,"metadata":{"sampler_time":{"secs":0,"nanos":66044},"constraint_time":{"secs":0,"nanos":186122},"parser_time":{"secs":0,"nanos":347754},"transformer_time":{"secs":0,"nanos":368322373},"trie_time":{"secs":0,"nanos":1702501},"total_time":{"secs":0,"nanos":471367041}},"pass":false,"entropy":4.4088731162876265,"entropy_diff":7.266922997573033e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,34,25,216,34,1292]}
{"generation":216,"metadata":{"sampler_time":{"secs":0,"nanos":95372},"constraint_time":{"secs":0,"nanos":301621},"parser_time":{"secs":0,"nanos":416833},"transformer_time":{"secs":0,"nanos":433418170},"trie_time":{"secs":0,"nanos":1790417},"total_time":{"secs":0,"nanos":556605875}},"pass":false,"entropy":4.408872794665387,"entropy_diff":3.216222390634016e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,216,34,25,216,33,1292]}
{"generation":217,"metadata":{"sampler_time":{"secs":0,"nanos":67130},"constraint_time":{"secs":0,"nanos":271744},"parser_time":{"secs":0,"nanos":425044},"transformer_time":{"secs":0,"nanos":442856081},"trie_time":{"secs":0,"nanos":1857376},"total_time":{"secs":0,"nanos":568780083}},"pass":false,"entropy":4.408872761095949,"entropy_diff":3.3569438784297745e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,34,25,216,33,1292]}
{"generation":218,"metadata":{"sampler_time":{"secs":0,"nanos":75326},"constraint_time":{"secs":0,"nanos":565172},"parser_time":{"secs":0,"nanos":552077},"transformer_time":{"secs":0,"nanos":499634957},"trie_time":{"secs":0,"nanos":1878917},"total_time":{"secs":0,"nanos":643509625}},"pass":false,"entropy":4.408872752101885,"entropy_diff":8.994063271927644e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,34,25,216,33,1292]}
{"generation":219,"metadata":{"sampler_time":{"secs":0,"nanos":102123},"constraint_time":{"secs":0,"nanos":581998},"parser_time":{"secs":0,"nanos":593791},"transformer_time":{"secs":0,"nanos":558930249},"trie_time":{"secs":0,"nanos":1863711},"total_time":{"secs":0,"nanos":715125416}},"pass":false,"entropy":4.408872749126608,"entropy_diff":2.9752769137303403e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":220,"metadata":{"sampler_time":{"secs":0,"nanos":94249},"constraint_time":{"secs":0,"nanos":389420},"parser_time":{"secs":0,"nanos":575954},"transformer_time":{"secs":0,"nanos":511391126},"trie_time":{"secs":0,"nanos":1861334},"total_time":{"secs":0,"nanos":659025875}},"pass":false,"entropy":4.4088727459291075,"entropy_diff":3.197500930696151e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":221,"metadata":{"sampler_time":{"secs":0,"nanos":143162},"constraint_time":{"secs":0,"nanos":328582},"parser_time":{"secs":0,"nanos":613579},"transformer_time":{"secs":0,"nanos":583922416},"trie_time":{"secs":0,"nanos":1841873},"total_time":{"secs":0,"nanos":749524667}},"pass":false,"entropy":4.408872724055206,"entropy_diff":2.1873901800972817e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) (str.indexof col1 (str.substr col1 1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":222,"metadata":{"sampler_time":{"secs":0,"nanos":70077},"constraint_time":{"secs":0,"nanos":605212},"parser_time":{"secs":0,"nanos":509591},"transformer_time":{"secs":0,"nanos":500279547},"trie_time":{"secs":0,"nanos":1960911},"total_time":{"secs":0,"nanos":643199792}},"pass":false,"entropy":4.408872685530162,"entropy_diff":3.852504359969089e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,42934,25,216,33,25,216,33,1292]}
{"generation":223,"metadata":{"sampler_time":{"secs":0,"nanos":88914},"constraint_time":{"secs":0,"nanos":383752},"parser_time":{"secs":0,"nanos":611838},"transformer_time":{"secs":0,"nanos":592885793},"trie_time":{"secs":0,"nanos":1927083},"total_time":{"secs":0,"nanos":765666250}},"pass":false,"entropy":4.40887267859632,"entropy_diff":6.933841945055974e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":224,"metadata":{"sampler_time":{"secs":0,"nanos":48750},"constraint_time":{"secs":0,"nanos":309755},"parser_time":{"secs":0,"nanos":437956},"transformer_time":{"secs":0,"nanos":442534249},"trie_time":{"secs":0,"nanos":1999373},"total_time":{"secs":0,"nanos":569528000}},"pass":false,"entropy":4.408872677052539,"entropy_diff":1.5437811029528348e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,32,1292]}
{"generation":225,"metadata":{"sampler_time":{"secs":0,"nanos":81172},"constraint_time":{"secs":0,"nanos":643296},"parser_time":{"secs":0,"nanos":537874},"transformer_time":{"secs":0,"nanos":525567165},"trie_time":{"secs":0,"nanos":2027463},"total_time":{"secs":0,"nanos":676015916}},"pass":false,"entropy":4.408872665810188,"entropy_diff":1.1242351050100297e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,34,25,216,33,1292]}
{"generation":226,"metadata":{"sampler_time":{"secs":0,"nanos":102334},"constraint_time":{"secs":0,"nanos":377250},"parser_time":{"secs":0,"nanos":542131},"transformer_time":{"secs":0,"nanos":502124166},"trie_time":{"secs":0,"nanos":1872949},"total_time":{"secs":0,"nanos":645238083}},"pass":false,"entropy":4.408872663495361,"entropy_diff":2.3148265526629075e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (str.indexof \" \" \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":227,"metadata":{"sampler_time":{"secs":0,"nanos":87548},"constraint_time":{"secs":0,"nanos":381365},"parser_time":{"secs":0,"nanos":569375},"transformer_time":{"secs":0,"nanos":476413919},"trie_time":{"secs":0,"nanos":1799538},"total_time":{"secs":0,"nanos":612432000}},"pass":false,"entropy":4.40887263275232,"entropy_diff":3.07430410018128e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (+ (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":228,"metadata":{"sampler_time":{"secs":0,"nanos":79122},"constraint_time":{"secs":0,"nanos":657793},"parser_time":{"secs":0,"nanos":543042},"transformer_time":{"secs":0,"nanos":524878210},"trie_time":{"secs":0,"nanos":2053629},"total_time":{"secs":0,"nanos":675587333}},"pass":false,"entropy":4.408872408183748,"entropy_diff":2.2456857262653784e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,32,25,216,33,1292]}
{"generation":229,"metadata":{"sampler_time":{"secs":0,"nanos":103957},"constraint_time":{"secs":0,"nanos":581542},"parser_time":{"secs":0,"nanos":547873},"transformer_time":{"secs":0,"nanos":508308710},"trie_time":{"secs":0,"nanos":2022710},"total_time":{"secs":0,"nanos":655092292}},"pass":false,"entropy":4.408872406574786,"entropy_diff":1.6089618526393679e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col2 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,34,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":230,"metadata":{"sampler_time":{"secs":0,"nanos":86127},"constraint_time":{"secs":0,"nanos":399042},"parser_time":{"secs":0,"nanos":579502},"transformer_time":{"secs":0,"nanos":510678122},"trie_time":{"secs":0,"nanos":2047198},"total_time":{"secs":0,"nanos":663323292}},"pass":false,"entropy":4.408872386070838,"entropy_diff":2.0503947872896333e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":231,"metadata":{"sampler_time":{"secs":0,"nanos":89172},"constraint_time":{"secs":0,"nanos":359207},"parser_time":{"secs":0,"nanos":481920},"transformer_time":{"secs":0,"nanos":458820916},"trie_time":{"secs":0,"nanos":1950459},"total_time":{"secs":0,"nanos":591917417}},"pass":false,"entropy":4.4088723599785435,"entropy_diff":2.6092294547197525e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (- 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,17481,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":232,"metadata":{"sampler_time":{"secs":0,"nanos":74707},"constraint_time":{"secs":0,"nanos":195083},"parser_time":{"secs":0,"nanos":319538},"transformer_time":{"secs":0,"nanos":400980833},"trie_time":{"secs":0,"nanos":1988707},"total_time":{"secs":0,"nanos":512937666}},"pass":false,"entropy":4.408872269582634,"entropy_diff":9.039590942450104e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.to.int col2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,1141,30,591,664,34,1292,216,33,1292]}
{"generation":233,"metadata":{"sampler_time":{"secs":0,"nanos":124999},"constraint_time":{"secs":0,"nanos":350341},"parser_time":{"secs":0,"nanos":460828},"transformer_time":{"secs":0,"nanos":506622708},"trie_time":{"secs":0,"nanos":1964042},"total_time":{"secs":0,"nanos":652498792}},"pass":false,"entropy":4.408872066886263,"entropy_diff":2.0269637079906033e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":234,"metadata":{"sampler_time":{"secs":0,"nanos":116629},"constraint_time":{"secs":0,"nanos":608077},"parser_time":{"secs":0,"nanos":549501},"transformer_time":{"secs":0,"nanos":525076122},"trie_time":{"secs":0,"nanos":1964918},"total_time":{"secs":0,"nanos":675223500}},"pass":false,"entropy":4.408872032657396,"entropy_diff":3.422886774018252e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":235,"metadata":{"sampler_time":{"secs":0,"nanos":78248},"constraint_time":{"secs":0,"nanos":491871},"parser_time":{"secs":0,"nanos":403122},"transformer_time":{"secs":0,"nanos":452242544},"trie_time":{"secs":0,"nanos":1977419},"total_time":{"secs":0,"nanos":581960333}},"pass":false,"entropy":4.408872016685473,"entropy_diff":1.5971922451285536e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,32,1292]}
{"generation":236,"metadata":{"sampler_time":{"secs":0,"nanos":98212},"constraint_time":{"secs":0,"nanos":317536},"parser_time":{"secs":0,"nanos":536675},"transformer_time":{"secs":0,"nanos":507891412},"trie_time":{"secs":0,"nanos":1925204},"total_time":{"secs":0,"nanos":657992084}},"pass":false,"entropy":4.408872013946449,"entropy_diff":2.739024118625366e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 \" \" \",\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,476,476,42934,1292,216,33,25,216,33,1292]}
{"generation":237,"metadata":{"sampler_time":{"secs":0,"nanos":85749},"constraint_time":{"secs":0,"nanos":555333},"parser_time":{"secs":0,"nanos":501788},"transformer_time":{"secs":0,"nanos":500033625},"trie_time":{"secs":0,"nanos":1960865},"total_time":{"secs":0,"nanos":642367166}},"pass":false,"entropy":4.408872008141143,"entropy_diff":5.805305569595021e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,32,25,216,33,1292]}
{"generation":238,"metadata":{"sampler_time":{"secs":0,"nanos":102495},"constraint_time":{"secs":0,"nanos":531832},"parser_time":{"secs":0,"nanos":495620},"transformer_time":{"secs":0,"nanos":500607245},"trie_time":{"secs":0,"nanos":1988386},"total_time":{"secs":0,"nanos":643985458}},"pass":false,"entropy":4.408872005201408,"entropy_diff":2.93973556608762e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":239,"metadata":{"sampler_time":{"secs":0,"nanos":123959},"constraint_time":{"secs":0,"nanos":413332},"parser_time":{"secs":0,"nanos":592663},"transformer_time":{"secs":0,"nanos":584999374},"trie_time":{"secs":0,"nanos":2001164},"total_time":{"secs":0,"nanos":753052917}},"pass":false,"entropy":4.408871997674871,"entropy_diff":7.526536727198163e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col2 (str.indexof col2 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,7754,216,33,1292]}
{"generation":240,"metadata":{"sampler_time":{"secs":0,"nanos":143089},"constraint_time":{"secs":0,"nanos":488162},"parser_time":{"secs":0,"nanos":571880},"transformer_time":{"secs":0,"nanos":592080084},"trie_time":{"secs":0,"nanos":2040621},"total_time":{"secs":0,"nanos":764520625}},"pass":false,"entropy":4.4088719971036605,"entropy_diff":5.712106343480627e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,216,33,1292]}
{"generation":241,"metadata":{"sampler_time":{"secs":0,"nanos":162626},"constraint_time":{"secs":0,"nanos":415422},"parser_time":{"secs":0,"nanos":717787},"transformer_time":{"secs":0,"nanos":685331044},"trie_time":{"secs":0,"nanos":2024131},"total_time":{"secs":0,"nanos":880479708}},"pass":false,"entropy":4.408871996998124,"entropy_diff":1.0553691254244768e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col2 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,3888,1714,664,34,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":242,"metadata":{"sampler_time":{"secs":0,"nanos":94458},"constraint_time":{"secs":0,"nanos":336205},"parser_time":{"secs":0,"nanos":651748},"transformer_time":{"secs":0,"nanos":625797164},"trie_time":{"secs":0,"nanos":2086378},"total_time":{"secs":0,"nanos":804819167}},"pass":false,"entropy":4.408871996868265,"entropy_diff":1.298587903875159e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":243,"metadata":{"sampler_time":{"secs":0,"nanos":99457},"constraint_time":{"secs":0,"nanos":417505},"parser_time":{"secs":0,"nanos":687920},"transformer_time":{"secs":0,"nanos":623353870},"trie_time":{"secs":0,"nanos":2148499},"total_time":{"secs":0,"nanos":806359458}},"pass":false,"entropy":4.408871996847298,"entropy_diff":2.0967227953860856e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (- 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,216,33,216,33,7754,216,33,1292]}
{"generation":244,"metadata":{"sampler_time":{"secs":0,"nanos":95833},"constraint_time":{"secs":0,"nanos":417542},"parser_time":{"secs":0,"nanos":654417},"transformer_time":{"secs":0,"nanos":595583787},"trie_time":{"secs":0,"nanos":2080920},"total_time":{"secs":0,"nanos":769029292}},"pass":false,"entropy":4.40887199682712,"entropy_diff":2.0177637338747445e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 0)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,1292,216,33,1292]}
{"generation":245,"metadata":{"sampler_time":{"secs":0,"nanos":127748},"constraint_time":{"secs":0,"nanos":345115},"parser_time":{"secs":0,"nanos":752246},"transformer_time":{"secs":0,"nanos":618836460},"trie_time":{"secs":0,"nanos":2121006},"total_time":{"secs":0,"nanos":801130042}},"pass":false,"entropy":4.4088719968170915,"entropy_diff":1.0028422536834114e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (+ 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,216,33,7754,216,33,1292]}
{"generation":246,"metadata":{"sampler_time":{"secs":0,"nanos":85499},"constraint_time":{"secs":0,"nanos":317872},"parser_time":{"secs":0,"nanos":495419},"transformer_time":{"secs":0,"nanos":451012128},"trie_time":{"secs":0,"nanos":2030665},"total_time":{"secs":0,"nanos":582222333}},"pass":false,"entropy":4.40887199679951,"entropy_diff":1.758149181796398e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,32,1292]}
{"generation":247,"metadata":{"sampler_time":{"secs":0,"nanos":156754},"constraint_time":{"secs":0,"nanos":450335},"parser_time":{"secs":0,"nanos":642254},"transformer_time":{"secs":0,"nanos":584297421},"trie_time":{"secs":0,"nanos":1992907},"total_time":{"secs":0,"nanos":753769959}},"pass":false,"entropy":4.408871995250775,"entropy_diff":1.548735362177922e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 (str.replace col1 col2 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,1292,216,33,1292]}
{"generation":248,"metadata":{"sampler_time":{"secs":0,"nanos":122122},"constraint_time":{"secs":0,"nanos":407207},"parser_time":{"secs":0,"nanos":654083},"transformer_time":{"secs":0,"nanos":659364168},"trie_time":{"secs":0,"nanos":2113421},"total_time":{"secs":0,"nanos":851235750}},"pass":false,"entropy":4.408871994295447,"entropy_diff":9.553273727647138e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":249,"metadata":{"sampler_time":{"secs":0,"nanos":137712},"constraint_time":{"secs":0,"nanos":425629},"parser_time":{"secs":0,"nanos":747086},"transformer_time":{"secs":0,"nanos":722029204},"trie_time":{"secs":0,"nanos":2216587},"total_time":{"secs":0,"nanos":929460084}},"pass":false,"entropy":4.40887199427017,"entropy_diff":2.5277557824665564e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":250,"metadata":{"sampler_time":{"secs":0,"nanos":196958},"constraint_time":{"secs":0,"nanos":517750},"parser_time":{"secs":0,"nanos":751922},"transformer_time":{"secs":0,"nanos":770547916},"trie_time":{"secs":0,"nanos":2101624},"total_time":{"secs":0,"nanos":992807334}},"pass":false,"entropy":4.408871994168607,"entropy_diff":1.0156231411428962e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof (str.replace col1 col1 col1) (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":251,"metadata":{"sampler_time":{"secs":0,"nanos":80582},"constraint_time":{"secs":0,"nanos":302916},"parser_time":{"secs":0,"nanos":444083},"transformer_time":{"secs":0,"nanos":450360207},"trie_time":{"secs":0,"nanos":2135084},"total_time":{"secs":0,"nanos":580734458}},"pass":false,"entropy":4.408871993051564,"entropy_diff":1.1170433467100338e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,34,1292]}
{"generation":252,"metadata":{"sampler_time":{"secs":0,"nanos":119126},"constraint_time":{"secs":0,"nanos":294959},"parser_time":{"secs":0,"nanos":452792},"transformer_time":{"secs":0,"nanos":442144458},"trie_time":{"secs":0,"nanos":2225088},"total_time":{"secs":0,"nanos":568416208}},"pass":false,"entropy":4.4088719906755385,"entropy_diff":2.376025598493925e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,34,1292]}
{"generation":253,"metadata":{"sampler_time":{"secs":0,"nanos":85040},"constraint_time":{"secs":0,"nanos":231372},"parser_time":{"secs":0,"nanos":430041},"transformer_time":{"secs":0,"nanos":409714789},"trie_time":{"secs":0,"nanos":1916117},"total_time":{"secs":0,"nanos":523691709}},"pass":false,"entropy":4.408871968215401,"entropy_diff":2.2460137749646947e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.to.int col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,1141,30,591,664,33,1292,216,33,1292]}
{"generation":254,"metadata":{"sampler_time":{"secs":0,"nanos":95336},"constraint_time":{"secs":0,"nanos":294537},"parser_time":{"secs":0,"nanos":417382},"transformer_time":{"secs":0,"nanos":434155500},"trie_time":{"secs":0,"nanos":2002789},"total_time":{"secs":0,"nanos":557648584}},"pass":false,"entropy":4.408871476914682,"entropy_diff":4.913007183304785e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,33,25,216,34,25,216,33,1292]}
{"generation":255,"metadata":{"sampler_time":{"secs":0,"nanos":99333},"constraint_time":{"secs":0,"nanos":358623},"parser_time":{"secs":0,"nanos":552747},"transformer_time":{"secs":0,"nanos":507851046},"trie_time":{"secs":0,"nanos":2122993},"total_time":{"secs":0,"nanos":658863667}},"pass":false,"entropy":4.408871443145869,"entropy_diff":3.376881352323835e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,476,49088,216,33,25,216,33,1292]}
{"generation":256,"metadata":{"sampler_time":{"secs":0,"nanos":100500},"constraint_time":{"secs":0,"nanos":564295},"parser_time":{"secs":0,"nanos":508680},"transformer_time":{"secs":0,"nanos":499522043},"trie_time":{"secs":0,"nanos":2151787},"total_time":{"secs":0,"nanos":642813333}},"pass":false,"entropy":4.408871441707207,"entropy_diff":1.4386616342676461e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,476,20361,216,34,25,216,33,1292]}
{"generation":257,"metadata":{"sampler_time":{"secs":0,"nanos":108546},"constraint_time":{"secs":0,"nanos":340336},"parser_time":{"secs":0,"nanos":454372},"transformer_time":{"secs":0,"nanos":442261749},"trie_time":{"secs":0,"nanos":2141878},"total_time":{"secs":0,"nanos":569720667}},"pass":false,"entropy":4.408871439973028,"entropy_diff":1.734179022605531e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,32,25,216,33,1292]}
{"generation":258,"metadata":{"sampler_time":{"secs":0,"nanos":151914},"constraint_time":{"secs":0,"nanos":655752},"parser_time":{"secs":0,"nanos":784671},"transformer_time":{"secs":0,"nanos":737270379},"trie_time":{"secs":0,"nanos":2136246},"total_time":{"secs":0,"nanos":945932291}},"pass":false,"entropy":4.408871435020665,"entropy_diff":4.952362964161239e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") (str.indexof col1 (str.replace col1 \" \" \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":259,"metadata":{"sampler_time":{"secs":0,"nanos":108585},"constraint_time":{"secs":0,"nanos":654417},"parser_time":{"secs":0,"nanos":513872},"transformer_time":{"secs":0,"nanos":525761962},"trie_time":{"secs":0,"nanos":2197212},"total_time":{"secs":0,"nanos":675100500}},"pass":false,"entropy":4.408871432871598,"entropy_diff":2.1490675905511125e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":260,"metadata":{"sampler_time":{"secs":0,"nanos":110461},"constraint_time":{"secs":0,"nanos":379372},"parser_time":{"secs":0,"nanos":535914},"transformer_time":{"secs":0,"nanos":525328415},"trie_time":{"secs":0,"nanos":2183587},"total_time":{"secs":0,"nanos":677690333}},"pass":false,"entropy":4.408871429764112,"entropy_diff":3.1074858242163828e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":261,"metadata":{"sampler_time":{"secs":0,"nanos":103254},"constraint_time":{"secs":0,"nanos":594953},"parser_time":{"secs":0,"nanos":554088},"transformer_time":{"secs":0,"nanos":500152628},"trie_time":{"secs":0,"nanos":2173837},"total_time":{"secs":0,"nanos":643435959}},"pass":false,"entropy":4.408871427461053,"entropy_diff":2.3030590767803005e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":262,"metadata":{"sampler_time":{"secs":0,"nanos":130955},"constraint_time":{"secs":0,"nanos":776748},"parser_time":{"secs":0,"nanos":564498},"transformer_time":{"secs":0,"nanos":516028710},"trie_time":{"secs":0,"nanos":2042539},"total_time":{"secs":0,"nanos":662176583}},"pass":false,"entropy":4.408871423988196,"entropy_diff":3.472856668906843e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at (str.substr col1 0 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":263,"metadata":{"sampler_time":{"secs":0,"nanos":88376},"constraint_time":{"secs":0,"nanos":239082},"parser_time":{"secs":0,"nanos":437415},"transformer_time":{"secs":0,"nanos":393180499},"trie_time":{"secs":0,"nanos":1997468},"total_time":{"secs":0,"nanos":507563250}},"pass":false,"entropy":4.4088710658051244,"entropy_diff":3.5818307164703356e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ 2 2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,216,34,216,34,1292,216,33,1292]}
{"generation":264,"metadata":{"sampler_time":{"secs":0,"nanos":79340},"constraint_time":{"secs":0,"nanos":239753},"parser_time":{"secs":0,"nanos":498252},"transformer_time":{"secs":0,"nanos":509667167},"trie_time":{"secs":0,"nanos":2308620},"total_time":{"secs":0,"nanos":655691709}},"pass":false,"entropy":4.408870958273034,"entropy_diff":1.0753209078728787e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col1 col1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":265,"metadata":{"sampler_time":{"secs":0,"nanos":121132},"constraint_time":{"secs":0,"nanos":247915},"parser_time":{"secs":0,"nanos":477844},"transformer_time":{"secs":0,"nanos":509881623},"trie_time":{"secs":0,"nanos":1991544},"total_time":{"secs":0,"nanos":656665000}},"pass":false,"entropy":4.40887077183707,"entropy_diff":1.864359635561641e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":266,"metadata":{"sampler_time":{"secs":0,"nanos":85246},"constraint_time":{"secs":0,"nanos":182370},"parser_time":{"secs":0,"nanos":388374},"transformer_time":{"secs":0,"nanos":435121374},"trie_time":{"secs":0,"nanos":2057504},"total_time":{"secs":0,"nanos":558029667}},"pass":false,"entropy":4.40886893427518,"entropy_diff":1.8375618902055635e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) (str.indexof col1 \" \" 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,34,7754]}
{"generation":267,"metadata":{"sampler_time":{"secs":0,"nanos":81960},"constraint_time":{"secs":0,"nanos":190208},"parser_time":{"secs":0,"nanos":423331},"transformer_time":{"secs":0,"nanos":434175916},"trie_time":{"secs":0,"nanos":1918796},"total_time":{"secs":0,"nanos":558216125}},"pass":false,"entropy":4.408868690753021,"entropy_diff":2.435221588825698e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":268,"metadata":{"sampler_time":{"secs":0,"nanos":115170},"constraint_time":{"secs":0,"nanos":213707},"parser_time":{"secs":0,"nanos":446334},"transformer_time":{"secs":0,"nanos":442734833},"trie_time":{"secs":0,"nanos":2039081},"total_time":{"secs":0,"nanos":569235541}},"pass":false,"entropy":4.408866616486881,"entropy_diff":2.0742661401840223e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) (str.indexof col2 col1 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754]}
{"generation":269,"metadata":{"sampler_time":{"secs":0,"nanos":87123},"constraint_time":{"secs":0,"nanos":290873},"parser_time":{"secs":0,"nanos":410786},"transformer_time":{"secs":0,"nanos":459066085},"trie_time":{"secs":0,"nanos":1956754},"total_time":{"secs":0,"nanos":588804458}},"pass":false,"entropy":4.408866247574608,"entropy_diff":3.6891227317426e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 1 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":270,"metadata":{"sampler_time":{"secs":0,"nanos":142914},"constraint_time":{"secs":0,"nanos":385459},"parser_time":{"secs":0,"nanos":677254},"transformer_time":{"secs":0,"nanos":660104669},"trie_time":{"secs":0,"nanos":2374667},"total_time":{"secs":0,"nanos":852193542}},"pass":false,"entropy":4.408862383530607,"entropy_diff":3.864044000323474e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 (str.replace col2 col2 col2) (str.indexof col2 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,34,25,365,1321,30,3888,1714,664,34,664,34,216,33,7754,216,33,1292]}
{"generation":271,"metadata":{"sampler_time":{"secs":0,"nanos":118966},"constraint_time":{"secs":0,"nanos":396999},"parser_time":{"secs":0,"nanos":688458},"transformer_time":{"secs":0,"nanos":642416459},"trie_time":{"secs":0,"nanos":2393057},"total_time":{"secs":0,"nanos":828335541}},"pass":false,"entropy":4.408862383355382,"entropy_diff":1.752251677089589e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.at col1 0) (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":272,"metadata":{"sampler_time":{"secs":0,"nanos":82044},"constraint_time":{"secs":0,"nanos":291042},"parser_time":{"secs":0,"nanos":430045},"transformer_time":{"secs":0,"nanos":442614422},"trie_time":{"secs":0,"nanos":2313835},"total_time":{"secs":0,"nanos":569859375}},"pass":false,"entropy":4.408862383206762,"entropy_diff":1.4861978314684166e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,32,1292]}
{"generation":273,"metadata":{"sampler_time":{"secs":0,"nanos":117909},"constraint_time":{"secs":0,"nanos":594962},"parser_time":{"secs":0,"nanos":552802},"transformer_time":{"secs":0,"nanos":524901209},"trie_time":{"secs":0,"nanos":2330492},"total_time":{"secs":0,"nanos":674943375}},"pass":false,"entropy":4.4088623744171045,"entropy_diff":8.789657890417857e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":274,"metadata":{"sampler_time":{"secs":0,"nanos":95166},"constraint_time":{"secs":0,"nanos":291080},"parser_time":{"secs":0,"nanos":470908},"transformer_time":{"secs":0,"nanos":442294043},"trie_time":{"secs":0,"nanos":2257415},"total_time":{"secs":0,"nanos":570797625}},"pass":false,"entropy":4.40886236872491,"entropy_diff":5.69219427148937e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,476,476,476,20361,216,33,25,216,33,1292]}
{"generation":275,"metadata":{"sampler_time":{"secs":0,"nanos":87838},"constraint_time":{"secs":0,"nanos":252500},"parser_time":{"secs":0,"nanos":431921},"transformer_time":{"secs":0,"nanos":492890128},"trie_time":{"secs":0,"nanos":2124246},"total_time":{"secs":0,"nanos":634525750}},"pass":false,"entropy":4.4088621783013515,"entropy_diff":1.9042355869913763e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col2 \",\" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,34,42934,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":276,"metadata":{"sampler_time":{"secs":0,"nanos":70878},"constraint_time":{"secs":0,"nanos":228955},"parser_time":{"secs":0,"nanos":357585},"transformer_time":{"secs":0,"nanos":376268875},"trie_time":{"secs":0,"nanos":2214131},"total_time":{"secs":0,"nanos":483802000}},"pass":false,"entropy":4.408861989838319,"entropy_diff":1.8846303273534204e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,32,1292]}
{"generation":277,"metadata":{"sampler_time":{"secs":0,"nanos":101997},"constraint_time":{"secs":0,"nanos":613331},"parser_time":{"secs":0,"nanos":525918},"transformer_time":{"secs":0,"nanos":508979121},"trie_time":{"secs":0,"nanos":2442834},"total_time":{"secs":0,"nanos":656666666}},"pass":false,"entropy":4.408861721235533,"entropy_diff":2.6860278534712734e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":278,"metadata":{"sampler_time":{"secs":0,"nanos":106789},"constraint_time":{"secs":0,"nanos":421494},"parser_time":{"secs":0,"nanos":618665},"transformer_time":{"secs":0,"nanos":586710120},"trie_time":{"secs":0,"nanos":2539339},"total_time":{"secs":0,"nanos":756501458}},"pass":false,"entropy":4.408861716799659,"entropy_diff":4.43587477860774e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,1292,216,33,1292]}
{"generation":279,"metadata":{"sampler_time":{"secs":0,"nanos":102964},"constraint_time":{"secs":0,"nanos":334702},"parser_time":{"secs":0,"nanos":471665},"transformer_time":{"secs":0,"nanos":449773084},"trie_time":{"secs":0,"nanos":2454622},"total_time":{"secs":0,"nanos":582315167}},"pass":false,"entropy":4.40886171677728,"entropy_diff":2.2378543462764355e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,32,1292]}
{"generation":280,"metadata":{"sampler_time":{"secs":0,"nanos":133623},"constraint_time":{"secs":0,"nanos":422791},"parser_time":{"secs":0,"nanos":732004},"transformer_time":{"secs":0,"nanos":659132207},"trie_time":{"secs":0,"nanos":2529997},"total_time":{"secs":0,"nanos":852725042}},"pass":false,"entropy":4.408861715960929,"entropy_diff":8.163514308989761e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":281,"metadata":{"sampler_time":{"secs":0,"nanos":123708},"constraint_time":{"secs":0,"nanos":395005},"parser_time":{"secs":0,"nanos":643252},"transformer_time":{"secs":0,"nanos":592903960},"trie_time":{"secs":0,"nanos":2578745},"total_time":{"secs":0,"nanos":766523000}},"pass":false,"entropy":4.408861715957156,"entropy_diff":3.772981926886132e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,1292,216,33,1292]}
{"generation":282,"metadata":{"sampler_time":{"secs":0,"nanos":133750},"constraint_time":{"secs":0,"nanos":544043},"parser_time":{"secs":0,"nanos":710846},"transformer_time":{"secs":0,"nanos":625737921},"trie_time":{"secs":0,"nanos":2561121},"total_time":{"secs":0,"nanos":807686000}},"pass":false,"entropy":4.408861715949666,"entropy_diff":7.490008613331156e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,7754,216,33,1292]}
{"generation":283,"metadata":{"sampler_time":{"secs":0,"nanos":127914},"constraint_time":{"secs":0,"nanos":461340},"parser_time":{"secs":0,"nanos":759010},"transformer_time":{"secs":0,"nanos":684435998},"trie_time":{"secs":0,"nanos":2576008},"total_time":{"secs":0,"nanos":880940167}},"pass":false,"entropy":4.40886171594477,"entropy_diff":4.89563944938709e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":284,"metadata":{"sampler_time":{"secs":0,"nanos":131080},"constraint_time":{"secs":0,"nanos":354331},"parser_time":{"secs":0,"nanos":586164},"transformer_time":{"secs":0,"nanos":587780541},"trie_time":{"secs":0,"nanos":2595414},"total_time":{"secs":0,"nanos":758371750}},"pass":false,"entropy":4.408861715932243,"entropy_diff":1.2526868431450566e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":285,"metadata":{"sampler_time":{"secs":0,"nanos":139626},"constraint_time":{"secs":0,"nanos":562506},"parser_time":{"secs":0,"nanos":453909},"transformer_time":{"secs":0,"nanos":524332043},"trie_time":{"secs":0,"nanos":2375173},"total_time":{"secs":0,"nanos":671365542}},"pass":false,"entropy":4.4088617157165135,"entropy_diff":2.1572965636096342e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \",\" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":286,"metadata":{"sampler_time":{"secs":0,"nanos":125749},"constraint_time":{"secs":0,"nanos":334205},"parser_time":{"secs":0,"nanos":646244},"transformer_time":{"secs":0,"nanos":543837749},"trie_time":{"secs":0,"nanos":2752959},"total_time":{"secs":0,"nanos":705259667}},"pass":false,"entropy":4.408861686658823,"entropy_diff":2.9057690476008702e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (+ 1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":287,"metadata":{"sampler_time":{"secs":0,"nanos":105917},"constraint_time":{"secs":0,"nanos":337247},"parser_time":{"secs":0,"nanos":610413},"transformer_time":{"secs":0,"nanos":575493332},"trie_time":{"secs":0,"nanos":2465420},"total_time":{"secs":0,"nanos":742071084}},"pass":false,"entropy":4.408861684244071,"entropy_diff":2.4147519539496898e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":288,"metadata":{"sampler_time":{"secs":0,"nanos":117038},"constraint_time":{"secs":0,"nanos":547541},"parser_time":{"secs":0,"nanos":490160},"transformer_time":{"secs":0,"nanos":501875078},"trie_time":{"secs":0,"nanos":2496178},"total_time":{"secs":0,"nanos":645474625}},"pass":false,"entropy":4.408861680290104,"entropy_diff":3.953966931646846e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col2 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,34,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":289,"metadata":{"sampler_time":{"secs":0,"nanos":69168},"constraint_time":{"secs":0,"nanos":300665},"parser_time":{"secs":0,"nanos":402959},"transformer_time":{"secs":0,"nanos":442641746},"trie_time":{"secs":0,"nanos":2507714},"total_time":{"secs":0,"nanos":571225667}},"pass":false,"entropy":4.408861669282255,"entropy_diff":1.1007848854660551e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,32,1292]}
{"generation":290,"metadata":{"sampler_time":{"secs":0,"nanos":65579},"constraint_time":{"secs":0,"nanos":253668},"parser_time":{"secs":0,"nanos":375497},"transformer_time":{"secs":0,"nanos":454523043},"trie_time":{"secs":0,"nanos":2435710},"total_time":{"secs":0,"nanos":586724583}},"pass":false,"entropy":4.408861658097362,"entropy_diff":1.1184893011773056e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,32,25,216,33,1292]}
{"generation":291,"metadata":{"sampler_time":{"secs":0,"nanos":86169},"constraint_time":{"secs":0,"nanos":347245},"parser_time":{"secs":0,"nanos":535077},"transformer_time":{"secs":0,"nanos":509757625},"trie_time":{"secs":0,"nanos":2508585},"total_time":{"secs":0,"nanos":659728417}},"pass":false,"entropy":4.4088616368108955,"entropy_diff":2.1286466811432092e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":292,"metadata":{"sampler_time":{"secs":0,"nanos":90704},"constraint_time":{"secs":0,"nanos":372541},"parser_time":{"secs":0,"nanos":584670},"transformer_time":{"secs":0,"nanos":509501080},"trie_time":{"secs":0,"nanos":2550204},"total_time":{"secs":0,"nanos":663493833}},"pass":false,"entropy":4.4088616356350725,"entropy_diff":1.175822994525788e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col2 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,34,664,34,476,49088,216,33,25,216,33,1292]}
{"generation":293,"metadata":{"sampler_time":{"secs":0,"nanos":98290},"constraint_time":{"secs":0,"nanos":288671},"parser_time":{"secs":0,"nanos":489006},"transformer_time":{"secs":0,"nanos":443046209},"trie_time":{"secs":0,"nanos":2456134},"total_time":{"secs":0,"nanos":570248000}},"pass":false,"entropy":4.4088616349297265,"entropy_diff":7.053460038264348e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,42934,25,216,33,25,216,33,1292]}
{"generation":294,"metadata":{"sampler_time":{"secs":0,"nanos":134581},"constraint_time":{"secs":0,"nanos":329333},"parser_time":{"secs":0,"nanos":598958},"transformer_time":{"secs":0,"nanos":567610794},"trie_time":{"secs":0,"nanos":2447867},"total_time":{"secs":0,"nanos":730842250}},"pass":false,"entropy":4.408861622960414,"entropy_diff":1.1969312652126973e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) (str.indexof col1 (str.replace col1 \" \" \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,7754]}
{"generation":295,"metadata":{"sampler_time":{"secs":0,"nanos":80452},"constraint_time":{"secs":0,"nanos":177129},"parser_time":{"secs":0,"nanos":413752},"transformer_time":{"secs":0,"nanos":393535710},"trie_time":{"secs":0,"nanos":2292119},"total_time":{"secs":0,"nanos":508288417}},"pass":false,"entropy":4.408861607566198,"entropy_diff":1.5394215679975787e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ 1 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,216,33,216,33,1292,216,33,1292]}
{"generation":296,"metadata":{"sampler_time":{"secs":0,"nanos":92454},"constraint_time":{"secs":0,"nanos":304668},"parser_time":{"secs":0,"nanos":448546},"transformer_time":{"secs":0,"nanos":458454960},"trie_time":{"secs":0,"nanos":2438246},"total_time":{"secs":0,"nanos":589251583}},"pass":false,"entropy":4.408861544255712,"entropy_diff":6.331048574281795e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,32,25,216,33,1292]}
{"generation":297,"metadata":{"sampler_time":{"secs":0,"nanos":101039},"constraint_time":{"secs":0,"nanos":665784},"parser_time":{"secs":0,"nanos":504507},"transformer_time":{"secs":0,"nanos":502438042},"trie_time":{"secs":0,"nanos":3043081},"total_time":{"secs":0,"nanos":651752208}},"pass":false,"entropy":4.408861532135908,"entropy_diff":1.2119804715382543e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":298,"metadata":{"sampler_time":{"secs":0,"nanos":94630},"constraint_time":{"secs":0,"nanos":415585},"parser_time":{"secs":0,"nanos":438748},"transformer_time":{"secs":0,"nanos":490761539},"trie_time":{"secs":0,"nanos":2501453},"total_time":{"secs":0,"nanos":627495208}},"pass":false,"entropy":4.408861523172136,"entropy_diff":8.963771946923771e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.len col1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,4152,664,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":299,"metadata":{"sampler_time":{"secs":0,"nanos":110169},"constraint_time":{"secs":0,"nanos":212293},"parser_time":{"secs":0,"nanos":413924},"transformer_time":{"secs":0,"nanos":469822753},"trie_time":{"secs":0,"nanos":2344248},"total_time":{"secs":0,"nanos":606672458}},"pass":false,"entropy":4.408861478223901,"entropy_diff":4.4948234467767634e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (+ 1 (str.indexof col1 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,30425,216,33,365,1321,30,3888,1714,664,33,664,33,216,33,7754,216,33,1292]}
{"generation":300,"metadata":{"sampler_time":{"secs":0,"nanos":113667},"constraint_time":{"secs":0,"nanos":300750},"parser_time":{"secs":0,"nanos":404214},"transformer_time":{"secs":0,"nanos":442606541},"trie_time":{"secs":0,"nanos":2568575},"total_time":{"secs":0,"nanos":569991959}},"pass":false,"entropy":4.408861186247165,"entropy_diff":2.919767361220238e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,34,1292]}
{"generation":301,"metadata":{"sampler_time":{"secs":0,"nanos":86587},"constraint_time":{"secs":0,"nanos":249959},"parser_time":{"secs":0,"nanos":444790},"transformer_time":{"secs":0,"nanos":459310828},"trie_time":{"secs":0,"nanos":2337992},"total_time":{"secs":0,"nanos":588211292}},"pass":false,"entropy":4.408861170959985,"entropy_diff":1.5287180410439305e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ (str.len col1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,365,1321,30,4152,664,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":302,"metadata":{"sampler_time":{"secs":0,"nanos":114000},"constraint_time":{"secs":0,"nanos":336840},"parser_time":{"secs":0,"nanos":647750},"transformer_time":{"secs":0,"nanos":585357039},"trie_time":{"secs":0,"nanos":2667907},"total_time":{"secs":0,"nanos":754341458}},"pass":false,"entropy":4.4088610911460195,"entropy_diff":7.981396521472561e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":303,"metadata":{"sampler_time":{"secs":0,"nanos":124701},"constraint_time":{"secs":0,"nanos":367999},"parser_time":{"secs":0,"nanos":495032},"transformer_time":{"secs":0,"nanos":501261126},"trie_time":{"secs":0,"nanos":2657750},"total_time":{"secs":0,"nanos":648092875}},"pass":false,"entropy":4.408861090552362,"entropy_diff":5.93657567549144e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.at col1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,261,664,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":304,"metadata":{"sampler_time":{"secs":0,"nanos":126673},"constraint_time":{"secs":0,"nanos":367785},"parser_time":{"secs":0,"nanos":577039},"transformer_time":{"secs":0,"nanos":586427377},"trie_time":{"secs":0,"nanos":2693010},"total_time":{"secs":0,"nanos":757074792}},"pass":false,"entropy":4.408861088375875,"entropy_diff":2.176486546545675e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":305,"metadata":{"sampler_time":{"secs":0,"nanos":159334},"constraint_time":{"secs":0,"nanos":794331},"parser_time":{"secs":0,"nanos":782675},"transformer_time":{"secs":0,"nanos":759110251},"trie_time":{"secs":0,"nanos":2679486},"total_time":{"secs":0,"nanos":975811708}},"pass":false,"entropy":4.408861087746609,"entropy_diff":6.292664167517614e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") (str.indexof col1 (str.replace col1 \" \" \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":306,"metadata":{"sampler_time":{"secs":0,"nanos":88502},"constraint_time":{"secs":0,"nanos":288129},"parser_time":{"secs":0,"nanos":517117},"transformer_time":{"secs":0,"nanos":508378376},"trie_time":{"secs":0,"nanos":2714005},"total_time":{"secs":0,"nanos":656401500}},"pass":false,"entropy":4.408861086172177,"entropy_diff":1.574432140216686e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":307,"metadata":{"sampler_time":{"secs":0,"nanos":97083},"constraint_time":{"secs":0,"nanos":186872},"parser_time":{"secs":0,"nanos":405548},"transformer_time":{"secs":0,"nanos":412943082},"trie_time":{"secs":0,"nanos":2610375},"total_time":{"secs":0,"nanos":526418709}},"pass":false,"entropy":4.408861080940647,"entropy_diff":5.231529875970864e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":308,"metadata":{"sampler_time":{"secs":0,"nanos":89336},"constraint_time":{"secs":0,"nanos":335914},"parser_time":{"secs":0,"nanos":479459},"transformer_time":{"secs":0,"nanos":458455128},"trie_time":{"secs":0,"nanos":2361087},"total_time":{"secs":0,"nanos":589364292}},"pass":false,"entropy":4.408860912972057,"entropy_diff":1.6796859014789334e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col2 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":309,"metadata":{"sampler_time":{"secs":0,"nanos":73415},"constraint_time":{"secs":0,"nanos":208244},"parser_time":{"secs":0,"nanos":398121},"transformer_time":{"secs":0,"nanos":368124960},"trie_time":{"secs":0,"nanos":2270586},"total_time":{"secs":0,"nanos":473072125}},"pass":false,"entropy":4.408860136644726,"entropy_diff":7.763273304206564e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,664,34,216,32,25,216,33,1292]}
{"generation":310,"metadata":{"sampler_time":{"secs":0,"nanos":86829},"constraint_time":{"secs":0,"nanos":687909},"parser_time":{"secs":0,"nanos":593793},"transformer_time":{"secs":0,"nanos":530670626},"trie_time":{"secs":0,"nanos":2817382},"total_time":{"secs":0,"nanos":681794292}},"pass":false,"entropy":4.408858508939879,"entropy_diff":1.6277048473511968e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":311,"metadata":{"sampler_time":{"secs":0,"nanos":101086},"constraint_time":{"secs":0,"nanos":692121},"parser_time":{"secs":0,"nanos":562539},"transformer_time":{"secs":0,"nanos":523945000},"trie_time":{"secs":0,"nanos":2726913},"total_time":{"secs":0,"nanos":676010334}},"pass":false,"entropy":4.408858506919229,"entropy_diff":2.02065031373877e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,216,34,25,216,33,1292]}
{"generation":312,"metadata":{"sampler_time":{"secs":0,"nanos":92828},"constraint_time":{"secs":0,"nanos":670247},"parser_time":{"secs":0,"nanos":587581},"transformer_time":{"secs":0,"nanos":526093499},"trie_time":{"secs":0,"nanos":2724881},"total_time":{"secs":0,"nanos":676798125}},"pass":false,"entropy":4.408858506308446,"entropy_diff":6.107825356593821e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":313,"metadata":{"sampler_time":{"secs":0,"nanos":87792},"constraint_time":{"secs":0,"nanos":290082},"parser_time":{"secs":0,"nanos":446339},"transformer_time":{"secs":0,"nanos":437670417},"trie_time":{"secs":0,"nanos":2731538},"total_time":{"secs":0,"nanos":562390750}},"pass":false,"entropy":4.408858504884915,"entropy_diff":1.4235315148880545e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,42934,25,216,33,25,216,33,1292]}
{"generation":314,"metadata":{"sampler_time":{"secs":0,"nanos":83214},"constraint_time":{"secs":0,"nanos":278547},"parser_time":{"secs":0,"nanos":503002},"transformer_time":{"secs":0,"nanos":458784086},"trie_time":{"secs":0,"nanos":2603952},"total_time":{"secs":0,"nanos":588561959}},"pass":false,"entropy":4.40885848214383,"entropy_diff":2.274108457100965e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,34,1292]}
{"generation":315,"metadata":{"sampler_time":{"secs":0,"nanos":83417},"constraint_time":{"secs":0,"nanos":290291},"parser_time":{"secs":0,"nanos":472582},"transformer_time":{"secs":0,"nanos":458814002},"trie_time":{"secs":0,"nanos":2598957},"total_time":{"secs":0,"nanos":589300833}},"pass":false,"entropy":4.408858479749624,"entropy_diff":2.3942057225667668e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,34,1292]}
{"generation":316,"metadata":{"sampler_time":{"secs":0,"nanos":92960},"constraint_time":{"secs":0,"nanos":304002},"parser_time":{"secs":0,"nanos":506332},"transformer_time":{"secs":0,"nanos":491872335},"trie_time":{"secs":0,"nanos":2689087},"total_time":{"secs":0,"nanos":628970166}},"pass":false,"entropy":4.4088584719719615,"entropy_diff":7.777662958119436e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":317,"metadata":{"sampler_time":{"secs":0,"nanos":172419},"constraint_time":{"secs":0,"nanos":509456},"parser_time":{"secs":0,"nanos":766208},"transformer_time":{"secs":0,"nanos":742923962},"trie_time":{"secs":0,"nanos":2644875},"total_time":{"secs":0,"nanos":954476125}},"pass":false,"entropy":4.408858466629332,"entropy_diff":5.3426294499558935e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":318,"metadata":{"sampler_time":{"secs":0,"nanos":93956},"constraint_time":{"secs":0,"nanos":620214},"parser_time":{"secs":0,"nanos":573789},"transformer_time":{"secs":0,"nanos":558662711},"trie_time":{"secs":0,"nanos":2833629},"total_time":{"secs":0,"nanos":715987125}},"pass":false,"entropy":4.408858459953517,"entropy_diff":6.6758145678136316e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":319,"metadata":{"sampler_time":{"secs":0,"nanos":132079},"constraint_time":{"secs":0,"nanos":302001},"parser_time":{"secs":0,"nanos":619297},"transformer_time":{"secs":0,"nanos":584763500},"trie_time":{"secs":0,"nanos":2872544},"total_time":{"secs":0,"nanos":753130917}},"pass":false,"entropy":4.408858459436174,"entropy_diff":5.173435013716698e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":320,"metadata":{"sampler_time":{"secs":0,"nanos":96542},"constraint_time":{"secs":0,"nanos":555833},"parser_time":{"secs":0,"nanos":499584},"transformer_time":{"secs":0,"nanos":524424712},"trie_time":{"secs":0,"nanos":2795752},"total_time":{"secs":0,"nanos":674561125}},"pass":false,"entropy":4.408858458959044,"entropy_diff":4.77130335241327e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":321,"metadata":{"sampler_time":{"secs":0,"nanos":145411},"constraint_time":{"secs":0,"nanos":386534},"parser_time":{"secs":0,"nanos":621830},"transformer_time":{"secs":0,"nanos":592601379},"trie_time":{"secs":0,"nanos":2833298},"total_time":{"secs":0,"nanos":766549750}},"pass":false,"entropy":4.408858458062427,"entropy_diff":8.966170028656961e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) (str.indexof col2 (str.replace col2 col2 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,33,7754]}
{"generation":322,"metadata":{"sampler_time":{"secs":0,"nanos":132006},"constraint_time":{"secs":0,"nanos":469789},"parser_time":{"secs":0,"nanos":660917},"transformer_time":{"secs":0,"nanos":686879330},"trie_time":{"secs":0,"nanos":2912077},"total_time":{"secs":0,"nanos":882911125}},"pass":false,"entropy":4.408858457575889,"entropy_diff":4.865379210627907e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col2 col2 \" \") (str.indexof col2 col2 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,34,476,20361,365,1321,30,3888,1714,664,34,664,34,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":323,"metadata":{"sampler_time":{"secs":0,"nanos":132500},"constraint_time":{"secs":0,"nanos":355460},"parser_time":{"secs":0,"nanos":625835},"transformer_time":{"secs":0,"nanos":574939290},"trie_time":{"secs":0,"nanos":2839716},"total_time":{"secs":0,"nanos":742534875}},"pass":false,"entropy":4.408858457539192,"entropy_diff":3.6696867766750074e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":324,"metadata":{"sampler_time":{"secs":0,"nanos":89167},"constraint_time":{"secs":0,"nanos":765048},"parser_time":{"secs":0,"nanos":529970},"transformer_time":{"secs":0,"nanos":524509667},"trie_time":{"secs":0,"nanos":2881782},"total_time":{"secs":0,"nanos":675457666}},"pass":false,"entropy":4.408858456728277,"entropy_diff":8.109148907919916e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,216,32,25,216,33,1292]}
{"generation":325,"metadata":{"sampler_time":{"secs":0,"nanos":91748},"constraint_time":{"secs":0,"nanos":686086},"parser_time":{"secs":0,"nanos":545255},"transformer_time":{"secs":0,"nanos":524203456},"trie_time":{"secs":0,"nanos":2853330},"total_time":{"secs":0,"nanos":674903000}},"pass":false,"entropy":4.408858456331046,"entropy_diff":3.972306927835234e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,42934,25,216,33,25,216,33,1292]}
{"generation":326,"metadata":{"sampler_time":{"secs":0,"nanos":91705},"constraint_time":{"secs":0,"nanos":517378},"parser_time":{"secs":0,"nanos":487868},"transformer_time":{"secs":0,"nanos":519584084},"trie_time":{"secs":0,"nanos":2929960},"total_time":{"secs":0,"nanos":670402208}},"pass":false,"entropy":4.408858455958709,"entropy_diff":3.723368280361683e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,216,33,1292]}
{"generation":327,"metadata":{"sampler_time":{"secs":0,"nanos":101502},"constraint_time":{"secs":0,"nanos":689954},"parser_time":{"secs":0,"nanos":501588},"transformer_time":{"secs":0,"nanos":558365752},"trie_time":{"secs":0,"nanos":2848584},"total_time":{"secs":0,"nanos":715748000}},"pass":false,"entropy":4.408858455909888,"entropy_diff":4.8821391374076484e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 2) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,34,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":328,"metadata":{"sampler_time":{"secs":0,"nanos":105622},"constraint_time":{"secs":0,"nanos":416501},"parser_time":{"secs":0,"nanos":611669},"transformer_time":{"secs":0,"nanos":586203584},"trie_time":{"secs":0,"nanos":2996212},"total_time":{"secs":0,"nanos":756141250}},"pass":false,"entropy":4.408858455645966,"entropy_diff":2.639222174138922e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col2 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,1292,216,33,1292]}
{"generation":329,"metadata":{"sampler_time":{"secs":0,"nanos":137381},"constraint_time":{"secs":0,"nanos":459500},"parser_time":{"secs":0,"nanos":608956},"transformer_time":{"secs":0,"nanos":601835874},"trie_time":{"secs":0,"nanos":3015879},"total_time":{"secs":0,"nanos":774545708}},"pass":false,"entropy":4.408858455631984,"entropy_diff":1.3981704682919371e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col1 0 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,1292,216,33,1292]}
{"generation":330,"metadata":{"sampler_time":{"secs":0,"nanos":157462},"constraint_time":{"secs":0,"nanos":523870},"parser_time":{"secs":0,"nanos":878547},"transformer_time":{"secs":0,"nanos":760871873},"trie_time":{"secs":0,"nanos":2930157},"total_time":{"secs":0,"nanos":985007666}},"pass":false,"entropy":4.408858455600891,"entropy_diff":3.1093350116861984e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":331,"metadata":{"sampler_time":{"secs":0,"nanos":87917},"constraint_time":{"secs":0,"nanos":603206},"parser_time":{"secs":0,"nanos":584588},"transformer_time":{"secs":0,"nanos":529768956},"trie_time":{"secs":0,"nanos":3038300},"total_time":{"secs":0,"nanos":680657041}},"pass":false,"entropy":4.408858455274429,"entropy_diff":3.2646152448023713e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,476,20361,216,33,25,216,33,1292]}
{"generation":332,"metadata":{"sampler_time":{"secs":0,"nanos":84286},"constraint_time":{"secs":0,"nanos":296584},"parser_time":{"secs":0,"nanos":486421},"transformer_time":{"secs":0,"nanos":458175419},"trie_time":{"secs":0,"nanos":2784165},"total_time":{"secs":0,"nanos":588530583}},"pass":false,"entropy":4.4088584535673965,"entropy_diff":1.7070327373858163e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,32,1292]}
{"generation":333,"metadata":{"sampler_time":{"secs":0,"nanos":84163},"constraint_time":{"secs":0,"nanos":382630},"parser_time":{"secs":0,"nanos":583087},"transformer_time":{"secs":0,"nanos":476062913},"trie_time":{"secs":0,"nanos":3044371},"total_time":{"secs":0,"nanos":615017542}},"pass":false,"entropy":4.40885844978268,"entropy_diff":3.78471654016721e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.len col1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,4152,664,33,1292,216,33,1292]}
{"generation":334,"metadata":{"sampler_time":{"secs":0,"nanos":87172},"constraint_time":{"secs":0,"nanos":363921},"parser_time":{"secs":0,"nanos":606798},"transformer_time":{"secs":0,"nanos":525573873},"trie_time":{"secs":0,"nanos":2997287},"total_time":{"secs":0,"nanos":680110334}},"pass":false,"entropy":4.408858448971944,"entropy_diff":8.107363669296319e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col2 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,1292,216,33,25,216,33,1292]}
{"generation":335,"metadata":{"sampler_time":{"secs":0,"nanos":106543},"constraint_time":{"secs":0,"nanos":336252},"parser_time":{"secs":0,"nanos":485877},"transformer_time":{"secs":0,"nanos":492259835},"trie_time":{"secs":0,"nanos":2806614},"total_time":{"secs":0,"nanos":630262500}},"pass":false,"entropy":4.408858447113836,"entropy_diff":1.858107445684709e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (str.to.int col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,365,1321,30,1141,30,591,664,33,1292,216,33,25,216,33,1292]}
{"generation":336,"metadata":{"sampler_time":{"secs":0,"nanos":84836},"constraint_time":{"secs":0,"nanos":333376},"parser_time":{"secs":0,"nanos":597005},"transformer_time":{"secs":0,"nanos":509421873},"trie_time":{"secs":0,"nanos":2898874},"total_time":{"secs":0,"nanos":657067625}},"pass":false,"entropy":4.408858439759752,"entropy_diff":7.354084452515508e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":337,"metadata":{"sampler_time":{"secs":0,"nanos":113161},"constraint_time":{"secs":0,"nanos":259128},"parser_time":{"secs":0,"nanos":533206},"transformer_time":{"secs":0,"nanos":516868583},"trie_time":{"secs":0,"nanos":2695674},"total_time":{"secs":0,"nanos":663067750}},"pass":false,"entropy":4.408858423427595,"entropy_diff":1.633215696017487e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof (str.substr col1 1 1) \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,476,216,33,1292,216,33,1292]}
{"generation":338,"metadata":{"sampler_time":{"secs":0,"nanos":75377},"constraint_time":{"secs":0,"nanos":277332},"parser_time":{"secs":0,"nanos":503210},"transformer_time":{"secs":0,"nanos":495131336},"trie_time":{"secs":0,"nanos":2850911},"total_time":{"secs":0,"nanos":632525542}},"pass":false,"entropy":4.408858288064986,"entropy_diff":1.3536260912161424e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 2) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,34,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":339,"metadata":{"sampler_time":{"secs":0,"nanos":80460},"constraint_time":{"secs":0,"nanos":322913},"parser_time":{"secs":0,"nanos":477333},"transformer_time":{"secs":0,"nanos":458936456},"trie_time":{"secs":0,"nanos":2943836},"total_time":{"secs":0,"nanos":588915334}},"pass":false,"entropy":4.408858285199708,"entropy_diff":2.865277792807319e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 0) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,216,34,25,216,33,1292]}
{"generation":340,"metadata":{"sampler_time":{"secs":0,"nanos":105998},"constraint_time":{"secs":0,"nanos":355410},"parser_time":{"secs":0,"nanos":415339},"transformer_time":{"secs":0,"nanos":458159583},"trie_time":{"secs":0,"nanos":2899549},"total_time":{"secs":0,"nanos":589286417}},"pass":false,"entropy":4.408858281509368,"entropy_diff":3.6903395894682944e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,216,34,25,216,33,1292]}
{"generation":341,"metadata":{"sampler_time":{"secs":0,"nanos":78916},"constraint_time":{"secs":0,"nanos":256170},"parser_time":{"secs":0,"nanos":429753},"transformer_time":{"secs":0,"nanos":458099415},"trie_time":{"secs":0,"nanos":2887170},"total_time":{"secs":0,"nanos":588620000}},"pass":false,"entropy":4.408858277741661,"entropy_diff":3.767707035251533e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,34,1292]}
{"generation":342,"metadata":{"sampler_time":{"secs":0,"nanos":124367},"constraint_time":{"secs":0,"nanos":564250},"parser_time":{"secs":0,"nanos":524000},"transformer_time":{"secs":0,"nanos":570756164},"trie_time":{"secs":0,"nanos":2879118},"total_time":{"secs":0,"nanos":727891916}},"pass":false,"entropy":4.408858275692857,"entropy_diff":2.0488037932864245e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col1) (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":343,"metadata":{"sampler_time":{"secs":0,"nanos":72298},"constraint_time":{"secs":0,"nanos":682867},"parser_time":{"secs":0,"nanos":514215},"transformer_time":{"secs":0,"nanos":517130376},"trie_time":{"secs":0,"nanos":3070120},"total_time":{"secs":0,"nanos":669108042}},"pass":false,"entropy":4.408858258800248,"entropy_diff":1.6892609089325106e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":344,"metadata":{"sampler_time":{"secs":0,"nanos":78380},"constraint_time":{"secs":0,"nanos":528828},"parser_time":{"secs":0,"nanos":517042},"transformer_time":{"secs":0,"nanos":533878836},"trie_time":{"secs":0,"nanos":3089126},"total_time":{"secs":0,"nanos":686585125}},"pass":false,"entropy":4.40885825774912,"entropy_diff":1.0511280734704087e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":345,"metadata":{"sampler_time":{"secs":0,"nanos":82332},"constraint_time":{"secs":0,"nanos":250075},"parser_time":{"secs":0,"nanos":436172},"transformer_time":{"secs":0,"nanos":453979456},"trie_time":{"secs":0,"nanos":3064327},"total_time":{"secs":0,"nanos":586508583}},"pass":false,"entropy":4.408858256315976,"entropy_diff":1.433144269924469e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,664,33,25,216,33,25,216,33,1292]}
{"generation":346,"metadata":{"sampler_time":{"secs":0,"nanos":103667},"constraint_time":{"secs":0,"nanos":615590},"parser_time":{"secs":0,"nanos":576045},"transformer_time":{"secs":0,"nanos":524760078},"trie_time":{"secs":0,"nanos":3043791},"total_time":{"secs":0,"nanos":675742125}},"pass":false,"entropy":4.408858246259302,"entropy_diff":1.0056673716007936e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":347,"metadata":{"sampler_time":{"secs":0,"nanos":109085},"constraint_time":{"secs":0,"nanos":667585},"parser_time":{"secs":0,"nanos":537291},"transformer_time":{"secs":0,"nanos":524311752},"trie_time":{"secs":0,"nanos":3080079},"total_time":{"secs":0,"nanos":674624000}},"pass":false,"entropy":4.408858245417894,"entropy_diff":8.414078322971363e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,216,34,1292]}
{"generation":348,"metadata":{"sampler_time":{"secs":0,"nanos":103252},"constraint_time":{"secs":0,"nanos":578124},"parser_time":{"secs":0,"nanos":487792},"transformer_time":{"secs":0,"nanos":524268372},"trie_time":{"secs":0,"nanos":3083295},"total_time":{"secs":0,"nanos":677852292}},"pass":false,"entropy":4.408858245048491,"entropy_diff":3.694031747158988e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,664,34,25,216,33,25,216,33,1292]}
{"generation":349,"metadata":{"sampler_time":{"secs":0,"nanos":85461},"constraint_time":{"secs":0,"nanos":632172},"parser_time":{"secs":0,"nanos":519835},"transformer_time":{"secs":0,"nanos":523236161},"trie_time":{"secs":0,"nanos":3125327},"total_time":{"secs":0,"nanos":674172500}},"pass":false,"entropy":4.4088582434307115,"entropy_diff":1.6177796879901507e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 0) \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,476,20361,216,34,25,216,33,1292]}
{"generation":350,"metadata":{"sampler_time":{"secs":0,"nanos":111452},"constraint_time":{"secs":0,"nanos":680793},"parser_time":{"secs":0,"nanos":557702},"transformer_time":{"secs":0,"nanos":525331705},"trie_time":{"secs":0,"nanos":3078959},"total_time":{"secs":0,"nanos":676742208}},"pass":false,"entropy":4.408858243292958,"entropy_diff":1.3775380836023032e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,216,32,1292]}
{"generation":351,"metadata":{"sampler_time":{"secs":0,"nanos":68077},"constraint_time":{"secs":0,"nanos":639373},"parser_time":{"secs":0,"nanos":576462},"transformer_time":{"secs":0,"nanos":558824376},"trie_time":{"secs":0,"nanos":3631418},"total_time":{"secs":0,"nanos":716306958}},"pass":false,"entropy":4.408858243160383,"entropy_diff":1.325748399949589e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":352,"metadata":{"sampler_time":{"secs":0,"nanos":132712},"constraint_time":{"secs":0,"nanos":631880},"parser_time":{"secs":0,"nanos":566124},"transformer_time":{"secs":0,"nanos":584145750},"trie_time":{"secs":0,"nanos":3123160},"total_time":{"secs":0,"nanos":753214708}},"pass":false,"entropy":4.408858243052791,"entropy_diff":1.0759215740563377e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":353,"metadata":{"sampler_time":{"secs":0,"nanos":74669},"constraint_time":{"secs":0,"nanos":378584},"parser_time":{"secs":0,"nanos":391924},"transformer_time":{"secs":0,"nanos":458769620},"trie_time":{"secs":0,"nanos":2941709},"total_time":{"secs":0,"nanos":590340458}},"pass":false,"entropy":4.408858241268128,"entropy_diff":1.784663083981286e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,34,25,216,33,1292]}
{"generation":354,"metadata":{"sampler_time":{"secs":0,"nanos":140495},"constraint_time":{"secs":0,"nanos":758452},"parser_time":{"secs":0,"nanos":955287},"transformer_time":{"secs":0,"nanos":763638376},"trie_time":{"secs":0,"nanos":3123578},"total_time":{"secs":1,"nanos":101443500}},"pass":false,"entropy":4.408858230905213,"entropy_diff":1.036291497058528e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") (str.indexof col1 (str.replace col1 \" \" \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,7754]}
{"generation":355,"metadata":{"sampler_time":{"secs":0,"nanos":85667},"constraint_time":{"secs":0,"nanos":633702},"parser_time":{"secs":0,"nanos":537963},"transformer_time":{"secs":0,"nanos":560706085},"trie_time":{"secs":0,"nanos":3326710},"total_time":{"secs":0,"nanos":722399250}},"pass":false,"entropy":4.4088582306840145,"entropy_diff":2.211981708910571e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":356,"metadata":{"sampler_time":{"secs":0,"nanos":101914},"constraint_time":{"secs":0,"nanos":613954},"parser_time":{"secs":0,"nanos":600862},"transformer_time":{"secs":0,"nanos":558548540},"trie_time":{"secs":0,"nanos":3186886},"total_time":{"secs":0,"nanos":715811708}},"pass":false,"entropy":4.408858230259721,"entropy_diff":4.242934892317862e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 2) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,34,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":357,"metadata":{"sampler_time":{"secs":0,"nanos":89880},"constraint_time":{"secs":0,"nanos":718541},"parser_time":{"secs":0,"nanos":697752},"transformer_time":{"secs":0,"nanos":617232751},"trie_time":{"secs":0,"nanos":3190537},"total_time":{"secs":0,"nanos":802271958}},"pass":false,"entropy":4.408858230087886,"entropy_diff":1.7183499068096353e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) (str.replace col1 \" \" \" \")) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,9630,664,33,476,476,476,49088,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":358,"metadata":{"sampler_time":{"secs":0,"nanos":120292},"constraint_time":{"secs":0,"nanos":662586},"parser_time":{"secs":0,"nanos":656091},"transformer_time":{"secs":0,"nanos":594624457},"trie_time":{"secs":0,"nanos":3194002},"total_time":{"secs":0,"nanos":784537875}},"pass":false,"entropy":4.408858229703842,"entropy_diff":3.8404390778623565e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,216,33,1292]}
{"generation":359,"metadata":{"sampler_time":{"secs":0,"nanos":91749},"constraint_time":{"secs":0,"nanos":654994},"parser_time":{"secs":0,"nanos":526078},"transformer_time":{"secs":0,"nanos":525082876},"trie_time":{"secs":0,"nanos":3165419},"total_time":{"secs":0,"nanos":682208000}},"pass":false,"entropy":4.4088582288433,"entropy_diff":8.605418599927361e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,32,25,476,20361,216,33,25,216,33,1292]}
{"generation":360,"metadata":{"sampler_time":{"secs":0,"nanos":77960},"constraint_time":{"secs":0,"nanos":671545},"parser_time":{"secs":0,"nanos":555366},"transformer_time":{"secs":0,"nanos":527235541},"trie_time":{"secs":0,"nanos":3226080},"total_time":{"secs":0,"nanos":682386708}},"pass":false,"entropy":4.408858228202029,"entropy_diff":6.412710362724283e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 0) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,476,20361,216,32,25,216,33,1292]}
{"generation":361,"metadata":{"sampler_time":{"secs":0,"nanos":63040},"constraint_time":{"secs":0,"nanos":705791},"parser_time":{"secs":0,"nanos":518015},"transformer_time":{"secs":0,"nanos":524225127},"trie_time":{"secs":0,"nanos":3229622},"total_time":{"secs":0,"nanos":677942750}},"pass":false,"entropy":4.408858228081365,"entropy_diff":1.2066436738678021e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,32,25,216,33,1292]}
{"generation":362,"metadata":{"sampler_time":{"secs":0,"nanos":93039},"constraint_time":{"secs":0,"nanos":632130},"parser_time":{"secs":0,"nanos":474905},"transformer_time":{"secs":0,"nanos":499729709},"trie_time":{"secs":0,"nanos":3227958},"total_time":{"secs":0,"nanos":646133541}},"pass":false,"entropy":4.408858227971636,"entropy_diff":1.0972911468343227e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace \",\" \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,42934,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":363,"metadata":{"sampler_time":{"secs":0,"nanos":104375},"constraint_time":{"secs":0,"nanos":344956},"parser_time":{"secs":0,"nanos":675344},"transformer_time":{"secs":0,"nanos":606075957},"trie_time":{"secs":0,"nanos":3238207},"total_time":{"secs":0,"nanos":788719834}},"pass":false,"entropy":4.4088582239146055,"entropy_diff":4.057030267290429e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (+ (str.indexof col1 (str.replace col1 col1 \" \") 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,30425,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,33,7754]}
{"generation":364,"metadata":{"sampler_time":{"secs":0,"nanos":153412},"constraint_time":{"secs":0,"nanos":446043},"parser_time":{"secs":0,"nanos":694701},"transformer_time":{"secs":0,"nanos":659659000},"trie_time":{"secs":0,"nanos":3297703},"total_time":{"secs":0,"nanos":856021375}},"pass":false,"entropy":4.40885822279261,"entropy_diff":1.1219958295782817e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col2 col1) (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":365,"metadata":{"sampler_time":{"secs":0,"nanos":79582},"constraint_time":{"secs":0,"nanos":315426},"parser_time":{"secs":0,"nanos":492909},"transformer_time":{"secs":0,"nanos":483946667},"trie_time":{"secs":0,"nanos":3289295},"total_time":{"secs":0,"nanos":624336209}},"pass":false,"entropy":4.408858222498841,"entropy_diff":2.937685650294952e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.to.int col2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,1141,30,591,664,34,1292,216,33,1292]}
{"generation":366,"metadata":{"sampler_time":{"secs":0,"nanos":90374},"constraint_time":{"secs":0,"nanos":298830},"parser_time":{"secs":0,"nanos":449370},"transformer_time":{"secs":0,"nanos":451438377},"trie_time":{"secs":0,"nanos":3287219},"total_time":{"secs":0,"nanos":585273250}},"pass":false,"entropy":4.408858222005259,"entropy_diff":4.935820641094324e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,32,1292]}
{"generation":367,"metadata":{"sampler_time":{"secs":0,"nanos":139286},"constraint_time":{"secs":0,"nanos":373584},"parser_time":{"secs":0,"nanos":579703},"transformer_time":{"secs":0,"nanos":607700669},"trie_time":{"secs":0,"nanos":3107419},"total_time":{"secs":0,"nanos":783548625}},"pass":false,"entropy":4.408858221490347,"entropy_diff":5.149116688585309e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) (str.indexof col1 (str.substr col1 1 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,7754]}
{"generation":368,"metadata":{"sampler_time":{"secs":0,"nanos":122968},"constraint_time":{"secs":0,"nanos":797248},"parser_time":{"secs":0,"nanos":833912},"transformer_time":{"secs":0,"nanos":741707796},"trie_time":{"secs":0,"nanos":3340250},"total_time":{"secs":0,"nanos":955963166}},"pass":false,"entropy":4.408858218641521,"entropy_diff":2.8488260639392138e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 1) \" \") 2) (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,20361,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,33,7754]}
{"generation":369,"metadata":{"sampler_time":{"secs":0,"nanos":133917},"constraint_time":{"secs":0,"nanos":338582},"parser_time":{"secs":0,"nanos":520917},"transformer_time":{"secs":0,"nanos":508702626},"trie_time":{"secs":0,"nanos":3294593},"total_time":{"secs":0,"nanos":658508042}},"pass":false,"entropy":4.408858218256985,"entropy_diff":3.845359586307495e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":370,"metadata":{"sampler_time":{"secs":0,"nanos":85120},"constraint_time":{"secs":0,"nanos":605458},"parser_time":{"secs":0,"nanos":494415},"transformer_time":{"secs":0,"nanos":503161455},"trie_time":{"secs":0,"nanos":3610165},"total_time":{"secs":0,"nanos":649813166}},"pass":false,"entropy":4.40885821691214,"entropy_diff":1.3448451241515613e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,476,20361,216,32,25,216,33,1292]}
{"generation":371,"metadata":{"sampler_time":{"secs":0,"nanos":74629},"constraint_time":{"secs":0,"nanos":331838},"parser_time":{"secs":0,"nanos":478295},"transformer_time":{"secs":0,"nanos":492409208},"trie_time":{"secs":0,"nanos":3205249},"total_time":{"secs":0,"nanos":631032125}},"pass":false,"entropy":4.4088582155816125,"entropy_diff":1.3305276880259953e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":372,"metadata":{"sampler_time":{"secs":0,"nanos":99128},"constraint_time":{"secs":0,"nanos":305834},"parser_time":{"secs":0,"nanos":572326},"transformer_time":{"secs":0,"nanos":592459957},"trie_time":{"secs":0,"nanos":3408918},"total_time":{"secs":0,"nanos":772787833}},"pass":false,"entropy":4.4088582096173745,"entropy_diff":5.9642379923730005e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,7754]}
{"generation":373,"metadata":{"sampler_time":{"secs":0,"nanos":87667},"constraint_time":{"secs":0,"nanos":630666},"parser_time":{"secs":0,"nanos":522925},"transformer_time":{"secs":0,"nanos":558055586},"trie_time":{"secs":0,"nanos":3421533},"total_time":{"secs":0,"nanos":724470167}},"pass":false,"entropy":4.408858209211154,"entropy_diff":4.062208347477281e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \" \") 2) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,216,34,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":374,"metadata":{"sampler_time":{"secs":0,"nanos":72203},"constraint_time":{"secs":0,"nanos":583459},"parser_time":{"secs":0,"nanos":531585},"transformer_time":{"secs":0,"nanos":525594500},"trie_time":{"secs":0,"nanos":3397669},"total_time":{"secs":0,"nanos":681435667}},"pass":false,"entropy":4.408858208946655,"entropy_diff":2.644986452082776e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 0) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,42934,25,216,33,25,216,33,1292]}
{"generation":375,"metadata":{"sampler_time":{"secs":0,"nanos":85371},"constraint_time":{"secs":0,"nanos":372585},"parser_time":{"secs":0,"nanos":474206},"transformer_time":{"secs":0,"nanos":500801879},"trie_time":{"secs":0,"nanos":3389173},"total_time":{"secs":0,"nanos":648620500}},"pass":false,"entropy":4.408858208749109,"entropy_diff":1.9754597957444275e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace \" \" \",\" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,476,476,42934,476,49088,216,33,25,216,33,1292]}
{"generation":376,"metadata":{"sampler_time":{"secs":0,"nanos":78296},"constraint_time":{"secs":0,"nanos":622255},"parser_time":{"secs":0,"nanos":516045},"transformer_time":{"secs":0,"nanos":526639620},"trie_time":{"secs":0,"nanos":3394248},"total_time":{"secs":0,"nanos":677865791}},"pass":false,"entropy":4.408858207114849,"entropy_diff":1.6342598385676865e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 2 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,34,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":377,"metadata":{"sampler_time":{"secs":0,"nanos":100831},"constraint_time":{"secs":0,"nanos":682707},"parser_time":{"secs":0,"nanos":445709},"transformer_time":{"secs":0,"nanos":509399293},"trie_time":{"secs":0,"nanos":3396701},"total_time":{"secs":0,"nanos":657921667}},"pass":false,"entropy":4.4088582062610175,"entropy_diff":8.538316720319017e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,664,33,25,216,33,25,216,33,1292]}
{"generation":378,"metadata":{"sampler_time":{"secs":0,"nanos":89630},"constraint_time":{"secs":0,"nanos":253209},"parser_time":{"secs":0,"nanos":472126},"transformer_time":{"secs":0,"nanos":443900462},"trie_time":{"secs":0,"nanos":3365126},"total_time":{"secs":0,"nanos":572882333}},"pass":false,"entropy":4.408858205131098,"entropy_diff":1.1299192692604265e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,32,1292]}
{"generation":379,"metadata":{"sampler_time":{"secs":0,"nanos":117450},"constraint_time":{"secs":0,"nanos":299126},"parser_time":{"secs":0,"nanos":567586},"transformer_time":{"secs":0,"nanos":607744793},"trie_time":{"secs":0,"nanos":3237534},"total_time":{"secs":0,"nanos":780745000}},"pass":false,"entropy":4.408858197994516,"entropy_diff":7.136581992028823e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 2) (str.indexof col1 (str.substr col1 0 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,7754]}
{"generation":380,"metadata":{"sampler_time":{"secs":0,"nanos":73325},"constraint_time":{"secs":0,"nanos":327831},"parser_time":{"secs":0,"nanos":446622},"transformer_time":{"secs":0,"nanos":458833792},"trie_time":{"secs":0,"nanos":3346586},"total_time":{"secs":0,"nanos":590753834}},"pass":false,"entropy":4.4088581960576,"entropy_diff":1.936916405043121e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,34,25,216,34,1292]}
{"generation":381,"metadata":{"sampler_time":{"secs":0,"nanos":64918},"constraint_time":{"secs":0,"nanos":348125},"parser_time":{"secs":0,"nanos":457128},"transformer_time":{"secs":0,"nanos":484358667},"trie_time":{"secs":0,"nanos":3665332},"total_time":{"secs":0,"nanos":621482125}},"pass":false,"entropy":4.408858193693888,"entropy_diff":2.3637118928832024e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (str.len col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,365,1321,30,4152,664,33,1292,216,33,25,216,33,1292]}
{"generation":382,"metadata":{"sampler_time":{"secs":0,"nanos":131009},"constraint_time":{"secs":0,"nanos":299337},"parser_time":{"secs":0,"nanos":583714},"transformer_time":{"secs":0,"nanos":584449831},"trie_time":{"secs":0,"nanos":3542705},"total_time":{"secs":0,"nanos":755146625}},"pass":false,"entropy":4.408858188059568,"entropy_diff":5.6343196774832904e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":383,"metadata":{"sampler_time":{"secs":0,"nanos":117921},"constraint_time":{"secs":0,"nanos":379754},"parser_time":{"secs":0,"nanos":563748},"transformer_time":{"secs":0,"nanos":549601125},"trie_time":{"secs":0,"nanos":3513588},"total_time":{"secs":0,"nanos":711467584}},"pass":false,"entropy":4.4088581880081374,"entropy_diff":5.143085957115545e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (- (str.indexof col1 col2 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,17481,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,1292,216,33,1292]}
{"generation":384,"metadata":{"sampler_time":{"secs":0,"nanos":105372},"constraint_time":{"secs":0,"nanos":919499},"parser_time":{"secs":0,"nanos":534788},"transformer_time":{"secs":0,"nanos":520776252},"trie_time":{"secs":0,"nanos":4278919},"total_time":{"secs":0,"nanos":673210375}},"pass":false,"entropy":4.408858186871658,"entropy_diff":1.1364793550683316e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr \" \" 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,476,476,216,33,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":385,"metadata":{"sampler_time":{"secs":0,"nanos":79784},"constraint_time":{"secs":0,"nanos":321625},"parser_time":{"secs":0,"nanos":460887},"transformer_time":{"secs":0,"nanos":458678248},"trie_time":{"secs":0,"nanos":3337418},"total_time":{"secs":0,"nanos":590802417}},"pass":false,"entropy":4.408858182739212,"entropy_diff":4.132446385085586e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,32,25,216,33,1292]}
{"generation":386,"metadata":{"sampler_time":{"secs":0,"nanos":101291},"constraint_time":{"secs":0,"nanos":213955},"parser_time":{"secs":0,"nanos":469408},"transformer_time":{"secs":0,"nanos":467663915},"trie_time":{"secs":0,"nanos":3110417},"total_time":{"secs":0,"nanos":604658083}},"pass":false,"entropy":4.408858175919724,"entropy_diff":6.819488085341163e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ 1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":387,"metadata":{"sampler_time":{"secs":0,"nanos":100869},"constraint_time":{"secs":0,"nanos":293874},"parser_time":{"secs":0,"nanos":459578},"transformer_time":{"secs":0,"nanos":442191416},"trie_time":{"secs":0,"nanos":3545593},"total_time":{"secs":0,"nanos":570415834}},"pass":false,"entropy":4.408857976259582,"entropy_diff":1.9966014175309965e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,216,34,1292]}
{"generation":388,"metadata":{"sampler_time":{"secs":0,"nanos":112335},"constraint_time":{"secs":0,"nanos":407418},"parser_time":{"secs":0,"nanos":677047},"transformer_time":{"secs":0,"nanos":659631418},"trie_time":{"secs":0,"nanos":3639048},"total_time":{"secs":0,"nanos":854922333}},"pass":false,"entropy":4.408857975158256,"entropy_diff":1.1013261413950204e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,1292]}
{"generation":389,"metadata":{"sampler_time":{"secs":0,"nanos":113298},"constraint_time":{"secs":0,"nanos":390424},"parser_time":{"secs":0,"nanos":613208},"transformer_time":{"secs":0,"nanos":576234832},"trie_time":{"secs":0,"nanos":3597418},"total_time":{"secs":0,"nanos":744468958}},"pass":false,"entropy":4.408857975156841,"entropy_diff":1.4148682225822995e-12,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \",\" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":390,"metadata":{"sampler_time":{"secs":0,"nanos":144167},"constraint_time":{"secs":0,"nanos":379827},"parser_time":{"secs":0,"nanos":643293},"transformer_time":{"secs":0,"nanos":617681623},"trie_time":{"secs":0,"nanos":3600207},"total_time":{"secs":0,"nanos":802402583}},"pass":false,"entropy":4.408857975064307,"entropy_diff":9.253398047803785e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (+ 1 (str.indexof col1 (str.replace col1 col1 col1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,30425,216,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,38799]}
{"generation":391,"metadata":{"sampler_time":{"secs":0,"nanos":86128},"constraint_time":{"secs":0,"nanos":331748},"parser_time":{"secs":0,"nanos":544584},"transformer_time":{"secs":0,"nanos":518346497},"trie_time":{"secs":0,"nanos":3955877},"total_time":{"secs":0,"nanos":673495667}},"pass":false,"entropy":4.408857974634205,"entropy_diff":4.3010217609662504e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,32,25,216,33,1292]}
{"generation":392,"metadata":{"sampler_time":{"secs":0,"nanos":89165},"constraint_time":{"secs":0,"nanos":357044},"parser_time":{"secs":0,"nanos":555086},"transformer_time":{"secs":0,"nanos":520119129},"trie_time":{"secs":0,"nanos":3518629},"total_time":{"secs":0,"nanos":675547708}},"pass":false,"entropy":4.408857974587807,"entropy_diff":4.639755246671484e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,34,25,216,33,1292]}
{"generation":393,"metadata":{"sampler_time":{"secs":0,"nanos":99749},"constraint_time":{"secs":0,"nanos":350503},"parser_time":{"secs":0,"nanos":480210},"transformer_time":{"secs":0,"nanos":508870625},"trie_time":{"secs":0,"nanos":3504453},"total_time":{"secs":0,"nanos":659718208}},"pass":false,"entropy":4.408857974544452,"entropy_diff":4.335554137924191e-11,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \",\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,42934,1292,216,33,25,216,33,1292]}
{"generation":394,"metadata":{"sampler_time":{"secs":0,"nanos":91622},"constraint_time":{"secs":0,"nanos":290751},"parser_time":{"secs":0,"nanos":516918},"transformer_time":{"secs":0,"nanos":500130415},"trie_time":{"secs":0,"nanos":3508329},"total_time":{"secs":0,"nanos":648622500}},"pass":false,"entropy":4.408857974394727,"entropy_diff":1.497246771009486e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 \",\" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,42934,476,49088,216,33,25,216,33,1292]}
{"generation":395,"metadata":{"sampler_time":{"secs":0,"nanos":85168},"constraint_time":{"secs":0,"nanos":291255},"parser_time":{"secs":0,"nanos":540006},"transformer_time":{"secs":0,"nanos":520517917},"trie_time":{"secs":0,"nanos":3596130},"total_time":{"secs":0,"nanos":671961250}},"pass":false,"entropy":4.408857974103574,"entropy_diff":2.9115287958347835e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof \" \" \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,476,476,476,476,216,33,1292,216,33,1292]}
{"generation":396,"metadata":{"sampler_time":{"secs":0,"nanos":99365},"constraint_time":{"secs":0,"nanos":445120},"parser_time":{"secs":0,"nanos":572621},"transformer_time":{"secs":0,"nanos":576659336},"trie_time":{"secs":0,"nanos":3566289},"total_time":{"secs":0,"nanos":744499166}},"pass":false,"entropy":4.408857973672807,"entropy_diff":4.3076742173298044e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 col1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":397,"metadata":{"sampler_time":{"secs":0,"nanos":104416},"constraint_time":{"secs":0,"nanos":358953},"parser_time":{"secs":0,"nanos":579409},"transformer_time":{"secs":0,"nanos":527799751},"trie_time":{"secs":0,"nanos":3595256},"total_time":{"secs":0,"nanos":682551917}},"pass":false,"entropy":4.408857973202676,"entropy_diff":4.701306011156703e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col2 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":398,"metadata":{"sampler_time":{"secs":0,"nanos":86622},"constraint_time":{"secs":0,"nanos":257959},"parser_time":{"secs":0,"nanos":416920},"transformer_time":{"secs":0,"nanos":450752169},"trie_time":{"secs":0,"nanos":3580874},"total_time":{"secs":0,"nanos":582685583}},"pass":false,"entropy":4.408857972607921,"entropy_diff":5.947553560758934e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,34,1292]}
{"generation":399,"metadata":{"sampler_time":{"secs":0,"nanos":73002},"constraint_time":{"secs":0,"nanos":311752},"parser_time":{"secs":0,"nanos":429718},"transformer_time":{"secs":0,"nanos":458638546},"trie_time":{"secs":0,"nanos":3322911},"total_time":{"secs":0,"nanos":588662834}},"pass":false,"entropy":4.408857972134526,"entropy_diff":4.733946568080682e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 0) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,216,32,25,216,33,1292]}
{"generation":400,"metadata":{"sampler_time":{"secs":0,"nanos":81169},"constraint_time":{"secs":0,"nanos":439961},"parser_time":{"secs":0,"nanos":471464},"transformer_time":{"secs":0,"nanos":476584082},"trie_time":{"secs":0,"nanos":3519996},"total_time":{"secs":0,"nanos":611727083}},"pass":false,"entropy":4.408857969590731,"entropy_diff":2.543795396547921e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (int.to.str 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,591,30,1141,30,1321,216,33,25,476,20361,216,33,25,216,33,1292]}
{"generation":401,"metadata":{"sampler_time":{"secs":0,"nanos":84833},"constraint_time":{"secs":0,"nanos":367162},"parser_time":{"secs":0,"nanos":426753},"transformer_time":{"secs":0,"nanos":458630247},"trie_time":{"secs":0,"nanos":3355130},"total_time":{"secs":0,"nanos":589261792}},"pass":false,"entropy":4.408857951006451,"entropy_diff":1.858427989276379e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,32,25,216,33,1292]}
{"generation":402,"metadata":{"sampler_time":{"secs":0,"nanos":77919},"constraint_time":{"secs":0,"nanos":326752},"parser_time":{"secs":0,"nanos":462878},"transformer_time":{"secs":0,"nanos":468217212},"trie_time":{"secs":0,"nanos":3332043},"total_time":{"secs":0,"nanos":600513875}},"pass":false,"entropy":4.408857932656873,"entropy_diff":1.834957785717961e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (str.to.int col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,365,1321,30,1141,30,591,664,33,1292,216,33,25,216,33,1292]}
{"generation":403,"metadata":{"sampler_time":{"secs":0,"nanos":70084},"constraint_time":{"secs":0,"nanos":224873},"parser_time":{"secs":0,"nanos":353880},"transformer_time":{"secs":0,"nanos":368538873},"trie_time":{"secs":0,"nanos":3342583},"total_time":{"secs":0,"nanos":474220334}},"pass":false,"entropy":4.408857892854879,"entropy_diff":3.9801993700905314e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,32,25,216,34,1292]}
{"generation":404,"metadata":{"sampler_time":{"secs":0,"nanos":125665},"constraint_time":{"secs":0,"nanos":291005},"parser_time":{"secs":0,"nanos":593878},"transformer_time":{"secs":0,"nanos":575234251},"trie_time":{"secs":0,"nanos":3616840},"total_time":{"secs":0,"nanos":744535125}},"pass":false,"entropy":4.408857787848777,"entropy_diff":1.0500610247987652e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 2) (str.indexof col2 (str.replace col2 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,216,33,7754]}
{"generation":405,"metadata":{"sampler_time":{"secs":0,"nanos":109039},"constraint_time":{"secs":0,"nanos":350001},"parser_time":{"secs":0,"nanos":542507},"transformer_time":{"secs":0,"nanos":486293294},"trie_time":{"secs":0,"nanos":3498331},"total_time":{"secs":0,"nanos":628898875}},"pass":false,"entropy":4.408857784771521,"entropy_diff":3.0772557835234693e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 (+ 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,30425,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":406,"metadata":{"sampler_time":{"secs":0,"nanos":89040},"constraint_time":{"secs":0,"nanos":240246},"parser_time":{"secs":0,"nanos":464249},"transformer_time":{"secs":0,"nanos":433590168},"trie_time":{"secs":0,"nanos":3627760},"total_time":{"secs":0,"nanos":558939792}},"pass":false,"entropy":4.408857774777028,"entropy_diff":9.99449323302315e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,476,20361,216,34,25,216,33,1292]}
{"generation":407,"metadata":{"sampler_time":{"secs":0,"nanos":64454},"constraint_time":{"secs":0,"nanos":500419},"parser_time":{"secs":0,"nanos":399581},"transformer_time":{"secs":0,"nanos":450959708},"trie_time":{"secs":0,"nanos":3554583},"total_time":{"secs":0,"nanos":579389333}},"pass":false,"entropy":4.408857768476764,"entropy_diff":6.3002634220765685e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \" ","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,216]}
{"generation":408,"metadata":{"sampler_time":{"secs":0,"nanos":63749},"constraint_time":{"secs":0,"nanos":219252},"parser_time":{"secs":0,"nanos":368207},"transformer_time":{"secs":0,"nanos":379015291},"trie_time":{"secs":0,"nanos":3278540},"total_time":{"secs":0,"nanos":488530042}},"pass":false,"entropy":4.408857746474732,"entropy_diff":2.2002032196155596e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,32,1292]}
{"generation":409,"metadata":{"sampler_time":{"secs":0,"nanos":110919},"constraint_time":{"secs":0,"nanos":546665},"parser_time":{"secs":0,"nanos":580045},"transformer_time":{"secs":0,"nanos":533279702},"trie_time":{"secs":0,"nanos":3119165},"total_time":{"secs":0,"nanos":682917833}},"pass":false,"entropy":4.408857582837581,"entropy_diff":1.6363715094058762e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"generation":410,"metadata":{"sampler_time":{"secs":0,"nanos":116084},"constraint_time":{"secs":0,"nanos":538378},"parser_time":{"secs":0,"nanos":552912},"transformer_time":{"secs":0,"nanos":508838953},"trie_time":{"secs":0,"nanos":3602371},"total_time":{"secs":0,"nanos":658696958}},"pass":false,"entropy":4.408857037281257,"entropy_diff":5.455563236722583e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 (str.replace col1 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,365,1321,30,9630,664,33,476,476,476,20361,476,20361,216,33,25,216,33,1292]}
{"generation":411,"metadata":{"sampler_time":{"secs":0,"nanos":124332},"constraint_time":{"secs":0,"nanos":379082},"parser_time":{"secs":0,"nanos":527081},"transformer_time":{"secs":0,"nanos":524933582},"trie_time":{"secs":0,"nanos":3503913},"total_time":{"secs":0,"nanos":674982000}},"pass":false,"entropy":4.408856990512109,"entropy_diff":4.676914855394898e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 (str.indexof col2 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":412,"metadata":{"sampler_time":{"secs":0,"nanos":60916},"constraint_time":{"secs":0,"nanos":232872},"parser_time":{"secs":0,"nanos":404334},"transformer_time":{"secs":0,"nanos":393457042},"trie_time":{"secs":0,"nanos":3304701},"total_time":{"secs":0,"nanos":508771917}},"pass":false,"entropy":4.40885696440539,"entropy_diff":2.6106718564733455e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ 0 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,216,32,216,33,1292,216,33,1292]}
{"generation":413,"metadata":{"sampler_time":{"secs":0,"nanos":89339},"constraint_time":{"secs":0,"nanos":306208},"parser_time":{"secs":0,"nanos":465502},"transformer_time":{"secs":0,"nanos":461528832},"trie_time":{"secs":0,"nanos":3509871},"total_time":{"secs":0,"nanos":596403167}},"pass":false,"entropy":4.408856907534417,"entropy_diff":5.687097370810079e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (+ 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,30425,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":414,"metadata":{"sampler_time":{"secs":0,"nanos":118546},"constraint_time":{"secs":0,"nanos":224417},"parser_time":{"secs":0,"nanos":506244},"transformer_time":{"secs":0,"nanos":509621791},"trie_time":{"secs":0,"nanos":3320377},"total_time":{"secs":0,"nanos":658633375}},"pass":false,"entropy":4.408856847018903,"entropy_diff":6.051551348917883e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col2 \" \" (str.indexof col2 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,34,476,476,365,1321,30,3888,1714,664,34,476,476,216,33,7754,216,33,1292]}
{"generation":415,"metadata":{"sampler_time":{"secs":0,"nanos":74668},"constraint_time":{"secs":0,"nanos":224251},"parser_time":{"secs":0,"nanos":464210},"transformer_time":{"secs":0,"nanos":444239041},"trie_time":{"secs":0,"nanos":3655415},"total_time":{"secs":0,"nanos":573827875}},"pass":false,"entropy":4.408856618336518,"entropy_diff":2.2868238502837812e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,1292]}
{"generation":416,"metadata":{"sampler_time":{"secs":0,"nanos":86919},"constraint_time":{"secs":0,"nanos":263120},"parser_time":{"secs":0,"nanos":509629},"transformer_time":{"secs":0,"nanos":493270876},"trie_time":{"secs":0,"nanos":3336703},"total_time":{"secs":0,"nanos":637535458}},"pass":false,"entropy":4.4088543208529245,"entropy_diff":2.297483593594052e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ (- 1 1) 1)) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,17481,216,33,216,33,25,216,33,1292,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":417,"metadata":{"sampler_time":{"secs":0,"nanos":89503},"constraint_time":{"secs":0,"nanos":299078},"parser_time":{"secs":0,"nanos":408465},"transformer_time":{"secs":0,"nanos":452744583},"trie_time":{"secs":0,"nanos":3165916},"total_time":{"secs":0,"nanos":580000208}},"pass":false,"entropy":4.408854222041934,"entropy_diff":9.881099050090825e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,1292]}
{"generation":418,"metadata":{"sampler_time":{"secs":0,"nanos":80452},"constraint_time":{"secs":0,"nanos":323085},"parser_time":{"secs":0,"nanos":497041},"transformer_time":{"secs":0,"nanos":525290044},"trie_time":{"secs":0,"nanos":3552797},"total_time":{"secs":0,"nanos":675645250}},"pass":false,"entropy":4.408851448241603,"entropy_diff":2.773800330757581e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":419,"metadata":{"sampler_time":{"secs":0,"nanos":84377},"constraint_time":{"secs":0,"nanos":345334},"parser_time":{"secs":0,"nanos":534754},"transformer_time":{"secs":0,"nanos":509091701},"trie_time":{"secs":0,"nanos":3689961},"total_time":{"secs":0,"nanos":660130125}},"pass":false,"entropy":4.408851433230556,"entropy_diff":1.5011047516111375e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" (str.replace col1 \" \" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,365,1321,30,9630,664,33,476,476,476,49088,216,33,25,216,33,1292]}
{"generation":420,"metadata":{"sampler_time":{"secs":0,"nanos":84125},"constraint_time":{"secs":0,"nanos":275000},"parser_time":{"secs":0,"nanos":470626},"transformer_time":{"secs":0,"nanos":459621541},"trie_time":{"secs":0,"nanos":3629456},"total_time":{"secs":0,"nanos":596858625}},"pass":false,"entropy":4.408851421236244,"entropy_diff":1.1994311321927853e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,34,1292]}
{"generation":421,"metadata":{"sampler_time":{"secs":0,"nanos":104125},"constraint_time":{"secs":0,"nanos":259703},"parser_time":{"secs":0,"nanos":518042},"transformer_time":{"secs":0,"nanos":509972833},"trie_time":{"secs":0,"nanos":3352132},"total_time":{"secs":0,"nanos":666616959}},"pass":false,"entropy":4.408851413184977,"entropy_diff":8.051267208486479e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col2 col2 (str.indexof col2 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,7754,216,33,1292]}
{"generation":422,"metadata":{"sampler_time":{"secs":0,"nanos":75794},"constraint_time":{"secs":0,"nanos":287002},"parser_time":{"secs":0,"nanos":429127},"transformer_time":{"secs":0,"nanos":442954494},"trie_time":{"secs":0,"nanos":3279418},"total_time":{"secs":0,"nanos":575760125}},"pass":false,"entropy":4.408851342862033,"entropy_diff":7.032294391251526e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,476,20361,216,33,25,216,33,1292]}
{"generation":423,"metadata":{"sampler_time":{"secs":0,"nanos":79793},"constraint_time":{"secs":0,"nanos":305376},"parser_time":{"secs":0,"nanos":415049},"transformer_time":{"secs":0,"nanos":442153458},"trie_time":{"secs":0,"nanos":3764668},"total_time":{"secs":0,"nanos":573257834}},"pass":false,"entropy":4.408851219706035,"entropy_diff":1.231559982883823e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,216,34,1292]}
{"generation":424,"metadata":{"sampler_time":{"secs":0,"nanos":77499},"constraint_time":{"secs":0,"nanos":357080},"parser_time":{"secs":0,"nanos":483534},"transformer_time":{"secs":0,"nanos":499760000},"trie_time":{"secs":0,"nanos":3601996},"total_time":{"secs":0,"nanos":637422458}},"pass":false,"entropy":4.408851218265999,"entropy_diff":1.4400356462829222e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col1) 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,33,25,216,34,25,216,33,25,216,33,1292]}
{"generation":425,"metadata":{"sampler_time":{"secs":0,"nanos":85874},"constraint_time":{"secs":0,"nanos":341792},"parser_time":{"secs":0,"nanos":531422},"transformer_time":{"secs":0,"nanos":509134956},"trie_time":{"secs":0,"nanos":3823332},"total_time":{"secs":0,"nanos":657533833}},"pass":false,"entropy":4.408851209303156,"entropy_diff":8.962842912296765e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":426,"metadata":{"sampler_time":{"secs":0,"nanos":109505},"constraint_time":{"secs":0,"nanos":432253},"parser_time":{"secs":0,"nanos":601541},"transformer_time":{"secs":0,"nanos":575683249},"trie_time":{"secs":0,"nanos":3854913},"total_time":{"secs":0,"nanos":743191916}},"pass":false,"entropy":4.408851209106406,"entropy_diff":1.9675017171039144e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 0) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,7754]}
{"generation":427,"metadata":{"sampler_time":{"secs":0,"nanos":84708},"constraint_time":{"secs":0,"nanos":347789},"parser_time":{"secs":0,"nanos":487539},"transformer_time":{"secs":0,"nanos":477316166},"trie_time":{"secs":0,"nanos":3974877},"total_time":{"secs":0,"nanos":616370250}},"pass":false,"entropy":4.40885120852875,"entropy_diff":5.776561451398265e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (int.to.str 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,591,30,1141,30,1321,216,33,1292,216,33,25,216,33,1292]}
{"generation":428,"metadata":{"sampler_time":{"secs":0,"nanos":116865},"constraint_time":{"secs":0,"nanos":346747},"parser_time":{"secs":0,"nanos":648702},"transformer_time":{"secs":0,"nanos":574390501},"trie_time":{"secs":0,"nanos":3870341},"total_time":{"secs":0,"nanos":742922750}},"pass":false,"entropy":4.4088512059885385,"entropy_diff":2.540211596624431e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) (str.indexof col2 (str.replace col2 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,216,33,7754]}
{"generation":429,"metadata":{"sampler_time":{"secs":0,"nanos":83381},"constraint_time":{"secs":0,"nanos":305880},"parser_time":{"secs":0,"nanos":411169},"transformer_time":{"secs":0,"nanos":437098208},"trie_time":{"secs":0,"nanos":3859083},"total_time":{"secs":0,"nanos":563379792}},"pass":false,"entropy":4.408851205500015,"entropy_diff":4.885238880092402e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,476,20361,216,33,25,216,34,1292]}
{"generation":430,"metadata":{"sampler_time":{"secs":0,"nanos":124457},"constraint_time":{"secs":0,"nanos":598871},"parser_time":{"secs":0,"nanos":596628},"transformer_time":{"secs":0,"nanos":525569752},"trie_time":{"secs":0,"nanos":3729079},"total_time":{"secs":0,"nanos":676709083}},"pass":false,"entropy":4.408851201604051,"entropy_diff":3.89596355176991e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace (str.substr col1 0 1) \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,42934,25,216,33,25,216,33,1292]}
{"generation":431,"metadata":{"sampler_time":{"secs":0,"nanos":92457},"constraint_time":{"secs":0,"nanos":311454},"parser_time":{"secs":0,"nanos":487831},"transformer_time":{"secs":0,"nanos":458510579},"trie_time":{"secs":0,"nanos":3391450},"total_time":{"secs":0,"nanos":590407459}},"pass":false,"entropy":4.408851109703181,"entropy_diff":9.190087002508562e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.substr col1 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,1292]}
{"generation":432,"metadata":{"sampler_time":{"secs":0,"nanos":113630},"constraint_time":{"secs":0,"nanos":316086},"parser_time":{"secs":0,"nanos":478037},"transformer_time":{"secs":0,"nanos":459525127},"trie_time":{"secs":0,"nanos":3323418},"total_time":{"secs":0,"nanos":590930917}},"pass":false,"entropy":4.408850862060103,"entropy_diff":2.476430784881245e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col2 0 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,476,216,33,25,216,33,1292]}
{"generation":433,"metadata":{"sampler_time":{"secs":0,"nanos":89955},"constraint_time":{"secs":0,"nanos":247463},"parser_time":{"secs":0,"nanos":550384},"transformer_time":{"secs":0,"nanos":503905877},"trie_time":{"secs":0,"nanos":3546500},"total_time":{"secs":0,"nanos":641869041}},"pass":false,"entropy":4.408848954640038,"entropy_diff":1.9074200645619044e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.to.int col1)) (str.indexof col1 \" \" (str.to.int col1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,1141,30,591,664,33,1292,365,1321,30,3888,1714,664,33,476,476,365,1321,30,1141,30,591,664,33,38799]}
{"generation":434,"metadata":{"sampler_time":{"secs":0,"nanos":109422},"constraint_time":{"secs":0,"nanos":260875},"parser_time":{"secs":0,"nanos":498706},"transformer_time":{"secs":0,"nanos":510394917},"trie_time":{"secs":0,"nanos":3554081},"total_time":{"secs":0,"nanos":657641458}},"pass":false,"entropy":4.4088488694561985,"entropy_diff":8.518383953770581e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (str.indexof col1 col2 (str.indexof col1 col2 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,33,1292]}
{"generation":435,"metadata":{"sampler_time":{"secs":0,"nanos":65121},"constraint_time":{"secs":0,"nanos":429874},"parser_time":{"secs":0,"nanos":440786},"transformer_time":{"secs":0,"nanos":375813122},"trie_time":{"secs":0,"nanos":3431541},"total_time":{"secs":0,"nanos":484556292}},"pass":false,"entropy":4.408848730938149,"entropy_diff":1.3851804947506707e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,32,25,216,33,1292]}
{"generation":436,"metadata":{"sampler_time":{"secs":0,"nanos":76001},"constraint_time":{"secs":0,"nanos":312454},"parser_time":{"secs":0,"nanos":477161},"transformer_time":{"secs":0,"nanos":458088873},"trie_time":{"secs":0,"nanos":3785466},"total_time":{"secs":0,"nanos":590238875}},"pass":false,"entropy":4.408848116065114,"entropy_diff":6.148730351540621e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,34,216,32,25,216,33,25,216,33,1292]}
{"generation":437,"metadata":{"sampler_time":{"secs":0,"nanos":59207},"constraint_time":{"secs":0,"nanos":334956},"parser_time":{"secs":0,"nanos":448924},"transformer_time":{"secs":0,"nanos":433822457},"trie_time":{"secs":0,"nanos":3829585},"total_time":{"secs":0,"nanos":559536958}},"pass":false,"entropy":4.408848087492999,"entropy_diff":2.8572114452174446e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,34,216,33,25,216,33,25,216,33,1292]}
{"generation":438,"metadata":{"sampler_time":{"secs":0,"nanos":90744},"constraint_time":{"secs":0,"nanos":239706},"parser_time":{"secs":0,"nanos":433173},"transformer_time":{"secs":0,"nanos":433892371},"trie_time":{"secs":0,"nanos":3535673},"total_time":{"secs":0,"nanos":559978125}},"pass":false,"entropy":4.408847949643218,"entropy_diff":1.3784978136754944e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,32,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":439,"metadata":{"sampler_time":{"secs":0,"nanos":59919},"constraint_time":{"secs":0,"nanos":184962},"parser_time":{"secs":0,"nanos":459874},"transformer_time":{"secs":0,"nanos":444198502},"trie_time":{"secs":0,"nanos":3890958},"total_time":{"secs":0,"nanos":573265666}},"pass":false,"entropy":4.408847816066303,"entropy_diff":1.3357691486248768e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":440,"metadata":{"sampler_time":{"secs":0,"nanos":106878},"constraint_time":{"secs":0,"nanos":304047},"parser_time":{"secs":0,"nanos":518865},"transformer_time":{"secs":0,"nanos":527751587},"trie_time":{"secs":0,"nanos":3538130},"total_time":{"secs":0,"nanos":679007791}},"pass":false,"entropy":4.408847716630302,"entropy_diff":9.94360007666728e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col1 (str.substr col1 0 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,1292,216,33,1292]}
{"generation":441,"metadata":{"sampler_time":{"secs":0,"nanos":77085},"constraint_time":{"secs":0,"nanos":372337},"parser_time":{"secs":0,"nanos":490749},"transformer_time":{"secs":0,"nanos":476527623},"trie_time":{"secs":0,"nanos":3536491},"total_time":{"secs":0,"nanos":616019625}},"pass":false,"entropy":4.408847661880617,"entropy_diff":5.474968567398264e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (- (str.indexof col1 \" \" 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,216,33,1292]}
{"generation":442,"metadata":{"sampler_time":{"secs":0,"nanos":90295},"constraint_time":{"secs":0,"nanos":318005},"parser_time":{"secs":0,"nanos":472586},"transformer_time":{"secs":0,"nanos":458663040},"trie_time":{"secs":0,"nanos":3815286},"total_time":{"secs":0,"nanos":590982916}},"pass":false,"entropy":4.408847458162328,"entropy_diff":2.0371828846066364e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,34,25,216,34,1292]}
{"generation":443,"metadata":{"sampler_time":{"secs":0,"nanos":76624},"constraint_time":{"secs":0,"nanos":317544},"parser_time":{"secs":0,"nanos":454457},"transformer_time":{"secs":0,"nanos":458050376},"trie_time":{"secs":0,"nanos":3788252},"total_time":{"secs":0,"nanos":589078208}},"pass":false,"entropy":4.408847456963787,"entropy_diff":1.1985408221448779e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,216,32,25,216,33,1292]}
{"generation":444,"metadata":{"sampler_time":{"secs":0,"nanos":75121},"constraint_time":{"secs":0,"nanos":336287},"parser_time":{"secs":0,"nanos":513331},"transformer_time":{"secs":0,"nanos":484768459},"trie_time":{"secs":0,"nanos":3784706},"total_time":{"secs":0,"nanos":624300542}},"pass":false,"entropy":4.408847455758812,"entropy_diff":1.2049756747956053e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (+ 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,30425,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":445,"metadata":{"sampler_time":{"secs":0,"nanos":70789},"constraint_time":{"secs":0,"nanos":281372},"parser_time":{"secs":0,"nanos":431246},"transformer_time":{"secs":0,"nanos":433807497},"trie_time":{"secs":0,"nanos":3418751},"total_time":{"secs":0,"nanos":556830125}},"pass":false,"entropy":4.40884744808293,"entropy_diff":7.6758821521139e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.at col2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,261,664,34,216,32,25,216,33,25,216,33,1292]}
{"generation":446,"metadata":{"sampler_time":{"secs":0,"nanos":53751},"constraint_time":{"secs":0,"nanos":185208},"parser_time":{"secs":0,"nanos":373957},"transformer_time":{"secs":0,"nanos":376967878},"trie_time":{"secs":0,"nanos":3334912},"total_time":{"secs":0,"nanos":486466791}},"pass":false,"entropy":4.408847025332896,"entropy_diff":4.22750033202135e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,34,216,32,25,216,33,1292]}
{"generation":447,"metadata":{"sampler_time":{"secs":0,"nanos":62244},"constraint_time":{"secs":0,"nanos":356500},"parser_time":{"secs":0,"nanos":452546},"transformer_time":{"secs":0,"nanos":499558917},"trie_time":{"secs":0,"nanos":3773961},"total_time":{"secs":0,"nanos":637434917}},"pass":false,"entropy":4.408844807998705,"entropy_diff":2.217334191811915e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col2) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,34,25,216,33,25,216,33,25,216,33,1292]}
{"generation":448,"metadata":{"sampler_time":{"secs":0,"nanos":78662},"constraint_time":{"secs":0,"nanos":319913},"parser_time":{"secs":0,"nanos":406455},"transformer_time":{"secs":0,"nanos":460365878},"trie_time":{"secs":0,"nanos":3868672},"total_time":{"secs":0,"nanos":591087791}},"pass":false,"entropy":4.408844797011367,"entropy_diff":1.0987337262235997e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,34,25,216,34,1292]}
{"generation":449,"metadata":{"sampler_time":{"secs":0,"nanos":59373},"constraint_time":{"secs":0,"nanos":313956},"parser_time":{"secs":0,"nanos":443167},"transformer_time":{"secs":0,"nanos":458524329},"trie_time":{"secs":0,"nanos":3815259},"total_time":{"secs":0,"nanos":590270583}},"pass":false,"entropy":4.408844795603475,"entropy_diff":1.4078924692739747e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,32,1292]}
{"generation":450,"metadata":{"sampler_time":{"secs":0,"nanos":97624},"constraint_time":{"secs":0,"nanos":310126},"parser_time":{"secs":0,"nanos":535243},"transformer_time":{"secs":0,"nanos":508615831},"trie_time":{"secs":0,"nanos":3760876},"total_time":{"secs":0,"nanos":655435292}},"pass":false,"entropy":4.408844794205868,"entropy_diff":1.3976064749954276e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.++ col1 (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,11444,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,25,216,33,1292]}
{"generation":451,"metadata":{"sampler_time":{"secs":0,"nanos":67003},"constraint_time":{"secs":0,"nanos":308417},"parser_time":{"secs":0,"nanos":501991},"transformer_time":{"secs":0,"nanos":510176331},"trie_time":{"secs":0,"nanos":4034293},"total_time":{"secs":0,"nanos":654178834}},"pass":false,"entropy":4.408844607608339,"entropy_diff":1.865975294279565e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (- (str.indexof col1 \" \" 1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":452,"metadata":{"sampler_time":{"secs":0,"nanos":107660},"constraint_time":{"secs":0,"nanos":306917},"parser_time":{"secs":0,"nanos":437245},"transformer_time":{"secs":0,"nanos":458380667},"trie_time":{"secs":0,"nanos":3418755},"total_time":{"secs":0,"nanos":590240417}},"pass":false,"entropy":4.408844359456149,"entropy_diff":2.481521903519024e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 1 2) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,476,216,33,25,216,33,1292]}
{"generation":453,"metadata":{"sampler_time":{"secs":0,"nanos":95373},"constraint_time":{"secs":0,"nanos":593334},"parser_time":{"secs":0,"nanos":496751},"transformer_time":{"secs":0,"nanos":510815962},"trie_time":{"secs":0,"nanos":3503255},"total_time":{"secs":0,"nanos":661269958}},"pass":false,"entropy":4.408843263643253,"entropy_diff":1.0958128955351754e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 (str.replace col2 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,365,1321,30,9630,664,34,476,476,42934,25,476,20361,216,33,25,216,33,1292]}
{"generation":454,"metadata":{"sampler_time":{"secs":0,"nanos":64376},"constraint_time":{"secs":0,"nanos":197914},"parser_time":{"secs":0,"nanos":382702},"transformer_time":{"secs":0,"nanos":401012496},"trie_time":{"secs":0,"nanos":3611175},"total_time":{"secs":0,"nanos":513789917}},"pass":false,"entropy":4.408843101715003,"entropy_diff":1.6192825036398517e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.to.int col1)) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,1141,30,591,664,33,1292,216,34,1292]}
{"generation":455,"metadata":{"sampler_time":{"secs":0,"nanos":94589},"constraint_time":{"secs":0,"nanos":202290},"parser_time":{"secs":0,"nanos":476117},"transformer_time":{"secs":0,"nanos":458083671},"trie_time":{"secs":0,"nanos":3601755},"total_time":{"secs":0,"nanos":594418416}},"pass":false,"entropy":4.408843049292919,"entropy_diff":5.2422083562930766e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ 2 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,216,34,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":456,"metadata":{"sampler_time":{"secs":0,"nanos":92836},"constraint_time":{"secs":0,"nanos":248460},"parser_time":{"secs":0,"nanos":430666},"transformer_time":{"secs":0,"nanos":446198583},"trie_time":{"secs":0,"nanos":3604669},"total_time":{"secs":0,"nanos":581611834}},"pass":false,"entropy":4.408843018368887,"entropy_diff":3.092403222382245e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ (+ 1 1) (+ 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,30425,216,33,216,33,25,30425,216,33,216,33,7754,216,33,1292]}
{"generation":457,"metadata":{"sampler_time":{"secs":0,"nanos":114748},"constraint_time":{"secs":0,"nanos":283875},"parser_time":{"secs":0,"nanos":544873},"transformer_time":{"secs":0,"nanos":517877041},"trie_time":{"secs":0,"nanos":3619634},"total_time":{"secs":0,"nanos":664900209}},"pass":false,"entropy":4.408842933947289,"entropy_diff":8.44215977124918e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 (str.substr col1 1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,1292,216,33,1292]}
{"generation":458,"metadata":{"sampler_time":{"secs":0,"nanos":66083},"constraint_time":{"secs":0,"nanos":226668},"parser_time":{"secs":0,"nanos":363202},"transformer_time":{"secs":0,"nanos":376683460},"trie_time":{"secs":0,"nanos":3509711},"total_time":{"secs":0,"nanos":485206042}},"pass":false,"entropy":4.408842910169492,"entropy_diff":2.3777797508728327e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,34,25,216,33,1292]}
{"generation":459,"metadata":{"sampler_time":{"secs":0,"nanos":74000},"constraint_time":{"secs":0,"nanos":191455},"parser_time":{"secs":0,"nanos":326907},"transformer_time":{"secs":0,"nanos":367740081},"trie_time":{"secs":0,"nanos":3383672},"total_time":{"secs":0,"nanos":472525083}},"pass":false,"entropy":4.4088423412218205,"entropy_diff":5.689476711978614e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \",\" \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,476,476,216,33,25,216,33,1292]}
{"generation":460,"metadata":{"sampler_time":{"secs":0,"nanos":74782},"constraint_time":{"secs":0,"nanos":181543},"parser_time":{"secs":0,"nanos":365167},"transformer_time":{"secs":0,"nanos":376463295},"trie_time":{"secs":0,"nanos":3637161},"total_time":{"secs":0,"nanos":485014833}},"pass":false,"entropy":4.408839911141217,"entropy_diff":2.430080603410545e-6,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,34,25,216,34,1292]}
{"generation":461,"metadata":{"sampler_time":{"secs":0,"nanos":125545},"constraint_time":{"secs":0,"nanos":362257},"parser_time":{"secs":0,"nanos":684659},"transformer_time":{"secs":0,"nanos":641321787},"trie_time":{"secs":0,"nanos":3857249},"total_time":{"secs":0,"nanos":825169792}},"pass":false,"entropy":4.408839834890213,"entropy_diff":7.625100373331861e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) (+ (str.indexof col1 (str.substr col1 0 1) 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,30425,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,7754]}
{"generation":462,"metadata":{"sampler_time":{"secs":0,"nanos":169796},"constraint_time":{"secs":0,"nanos":439034},"parser_time":{"secs":0,"nanos":744868},"transformer_time":{"secs":0,"nanos":741557871},"trie_time":{"secs":0,"nanos":3978506},"total_time":{"secs":0,"nanos":954611250}},"pass":false,"entropy":4.408839834482444,"entropy_diff":4.077689297332654e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 2) (str.indexof col1 (str.substr col1 1 2) (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,34,7754]}
{"generation":463,"metadata":{"sampler_time":{"secs":0,"nanos":88787},"constraint_time":{"secs":0,"nanos":422629},"parser_time":{"secs":0,"nanos":524620},"transformer_time":{"secs":0,"nanos":527801832},"trie_time":{"secs":0,"nanos":4735501},"total_time":{"secs":0,"nanos":679679917}},"pass":false,"entropy":4.408839832461556,"entropy_diff":2.0208883455552495e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 (str.indexof col2 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":464,"metadata":{"sampler_time":{"secs":0,"nanos":71585},"constraint_time":{"secs":0,"nanos":341709},"parser_time":{"secs":0,"nanos":531335},"transformer_time":{"secs":0,"nanos":484042290},"trie_time":{"secs":0,"nanos":3769500},"total_time":{"secs":0,"nanos":622477375}},"pass":false,"entropy":4.40883982927157,"entropy_diff":3.1899860530870683e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \",\" (str.indexof col1 \",\" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,42934,216,33,7754,216,33,1292]}
{"generation":465,"metadata":{"sampler_time":{"secs":0,"nanos":76879},"constraint_time":{"secs":0,"nanos":295287},"parser_time":{"secs":0,"nanos":427164},"transformer_time":{"secs":0,"nanos":442870043},"trie_time":{"secs":0,"nanos":3520201},"total_time":{"secs":0,"nanos":571114042}},"pass":false,"entropy":4.408839812071089,"entropy_diff":1.720048103948102e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.replace col1 col2 \" \") \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,34,476,20361,476,476,216,33,25,216,33,1292]}
{"generation":466,"metadata":{"sampler_time":{"secs":0,"nanos":88086},"constraint_time":{"secs":0,"nanos":305376},"parser_time":{"secs":0,"nanos":454042},"transformer_time":{"secs":0,"nanos":456102709},"trie_time":{"secs":0,"nanos":3976165},"total_time":{"secs":0,"nanos":587910083}},"pass":false,"entropy":4.408839334595132,"entropy_diff":4.77475956550677e-7,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,32,25,216,33,25,216,33,1292]}
{"generation":467,"metadata":{"sampler_time":{"secs":0,"nanos":76998},"constraint_time":{"secs":0,"nanos":287294},"parser_time":{"secs":0,"nanos":532330},"transformer_time":{"secs":0,"nanos":470157125},"trie_time":{"secs":0,"nanos":3827748},"total_time":{"secs":0,"nanos":605134292}},"pass":false,"entropy":4.408839317482081,"entropy_diff":1.7113051420380998e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) (+ (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,7754]}
{"generation":468,"metadata":{"sampler_time":{"secs":0,"nanos":93040},"constraint_time":{"secs":0,"nanos":380589},"parser_time":{"secs":0,"nanos":481466},"transformer_time":{"secs":0,"nanos":524261453},"trie_time":{"secs":0,"nanos":4070423},"total_time":{"secs":0,"nanos":679639083}},"pass":false,"entropy":4.408839261950777,"entropy_diff":5.553130399960082e-8,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (str.indexof col2 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,216,33,1292]}
{"generation":469,"metadata":{"sampler_time":{"secs":0,"nanos":108162},"constraint_time":{"secs":0,"nanos":602702},"parser_time":{"secs":0,"nanos":554164},"transformer_time":{"secs":0,"nanos":559060371},"trie_time":{"secs":0,"nanos":4040380},"total_time":{"secs":0,"nanos":724124916}},"pass":false,"entropy":4.408839259042162,"entropy_diff":2.9086146824397474e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof \",\" \" \" 1) 1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,42934,476,476,216,33,25,216,33,25,216,33,25,365,1321,30,1141,30,591,664,33,7754]}
{"generation":470,"metadata":{"sampler_time":{"secs":0,"nanos":66289},"constraint_time":{"secs":0,"nanos":256127},"parser_time":{"secs":0,"nanos":485659},"transformer_time":{"secs":0,"nanos":460465212},"trie_time":{"secs":0,"nanos":4107545},"total_time":{"secs":0,"nanos":597961459}},"pass":false,"entropy":4.408839252591008,"entropy_diff":6.451154277442583e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,32,1292]}
{"generation":471,"metadata":{"sampler_time":{"secs":0,"nanos":70418},"constraint_time":{"secs":0,"nanos":262005},"parser_time":{"secs":0,"nanos":464988},"transformer_time":{"secs":0,"nanos":457804793},"trie_time":{"secs":0,"nanos":4078625},"total_time":{"secs":0,"nanos":591114833}},"pass":false,"entropy":4.408839251264891,"entropy_diff":1.3261169939937645e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,216,34,25,216,33,1292]}
{"generation":472,"metadata":{"sampler_time":{"secs":0,"nanos":79122},"constraint_time":{"secs":0,"nanos":298084},"parser_time":{"secs":0,"nanos":434083},"transformer_time":{"secs":0,"nanos":454497041},"trie_time":{"secs":0,"nanos":4089494},"total_time":{"secs":0,"nanos":587314833}},"pass":false,"entropy":4.408839247696643,"entropy_diff":3.568247919361056e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 0) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,32,25,216,32,1292]}
{"generation":473,"metadata":{"sampler_time":{"secs":0,"nanos":120208},"constraint_time":{"secs":0,"nanos":452710},"parser_time":{"secs":0,"nanos":631043},"transformer_time":{"secs":0,"nanos":551229087},"trie_time":{"secs":0,"nanos":4114586},"total_time":{"secs":0,"nanos":711811917}},"pass":false,"entropy":4.4088392475076095,"entropy_diff":1.8903367760003675e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) (+ 1 (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,30425,216,33,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,1292]}
{"generation":474,"metadata":{"sampler_time":{"secs":0,"nanos":78291},"constraint_time":{"secs":0,"nanos":420583},"parser_time":{"secs":0,"nanos":466540},"transformer_time":{"secs":0,"nanos":502420917},"trie_time":{"secs":0,"nanos":4128923},"total_time":{"secs":0,"nanos":643167084}},"pass":false,"entropy":4.40883924667992,"entropy_diff":8.276890284264482e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col1) 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,33,25,216,32,25,216,33,25,216,33,1292]}
{"generation":475,"metadata":{"sampler_time":{"secs":0,"nanos":88581},"constraint_time":{"secs":0,"nanos":316874},"parser_time":{"secs":0,"nanos":468375},"transformer_time":{"secs":0,"nanos":458284458},"trie_time":{"secs":0,"nanos":4146621},"total_time":{"secs":0,"nanos":589550291}},"pass":false,"entropy":4.408839241326962,"entropy_diff":5.352958076798586e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,34,25,216,34,1292]}
{"generation":476,"metadata":{"sampler_time":{"secs":0,"nanos":94870},"constraint_time":{"secs":0,"nanos":246670},"parser_time":{"secs":0,"nanos":491829},"transformer_time":{"secs":0,"nanos":457896335},"trie_time":{"secs":0,"nanos":4074497},"total_time":{"secs":0,"nanos":590459833}},"pass":false,"entropy":4.4088392380118515,"entropy_diff":3.3151108524975825e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,216,34,1292]}
{"generation":477,"metadata":{"sampler_time":{"secs":0,"nanos":92375},"constraint_time":{"secs":0,"nanos":313245},"parser_time":{"secs":0,"nanos":451747},"transformer_time":{"secs":0,"nanos":493223460},"trie_time":{"secs":0,"nanos":4100752},"total_time":{"secs":0,"nanos":631638875}},"pass":false,"entropy":4.408839236464265,"entropy_diff":1.5475869474812498e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,365,1321,30,1141,30,591,664,34,7754]}
{"generation":478,"metadata":{"sampler_time":{"secs":0,"nanos":152876},"constraint_time":{"secs":0,"nanos":399954},"parser_time":{"secs":0,"nanos":804956},"transformer_time":{"secs":0,"nanos":736463002},"trie_time":{"secs":0,"nanos":4151289},"total_time":{"secs":0,"nanos":949795291}},"pass":false,"entropy":4.4088392345033744,"entropy_diff":1.9608901169476667e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 0) (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 \" \" 1))) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,476,476,216,33,7754]}
{"generation":479,"metadata":{"sampler_time":{"secs":0,"nanos":87668},"constraint_time":{"secs":0,"nanos":324414},"parser_time":{"secs":0,"nanos":482876},"transformer_time":{"secs":0,"nanos":460216295},"trie_time":{"secs":0,"nanos":4173581},"total_time":{"secs":0,"nanos":591950709}},"pass":false,"entropy":4.408839232672422,"entropy_diff":1.8309522786807975e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,33,25,216,34,1292]}
{"generation":480,"metadata":{"sampler_time":{"secs":0,"nanos":105712},"constraint_time":{"secs":0,"nanos":384875},"parser_time":{"secs":0,"nanos":632334},"transformer_time":{"secs":0,"nanos":592250543},"trie_time":{"secs":0,"nanos":4138161},"total_time":{"secs":0,"nanos":758971708}},"pass":false,"entropy":4.408839230450698,"entropy_diff":2.2217241379962616e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) (- (str.indexof col1 \" \" 1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,7754]}
{"generation":481,"metadata":{"sampler_time":{"secs":0,"nanos":102419},"constraint_time":{"secs":0,"nanos":324506},"parser_time":{"secs":0,"nanos":462083},"transformer_time":{"secs":0,"nanos":458447704},"trie_time":{"secs":0,"nanos":4198040},"total_time":{"secs":0,"nanos":589874166}},"pass":false,"entropy":4.408839229765615,"entropy_diff":6.850831013593961e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 0) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,216,32,25,216,33,1292]}
{"generation":482,"metadata":{"sampler_time":{"secs":0,"nanos":94296},"constraint_time":{"secs":0,"nanos":339125},"parser_time":{"secs":0,"nanos":501330},"transformer_time":{"secs":0,"nanos":492795748},"trie_time":{"secs":0,"nanos":4238253},"total_time":{"secs":0,"nanos":631268625}},"pass":false,"entropy":4.408839228999839,"entropy_diff":7.657758871459919e-10,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 (str.to.int col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,365,1321,30,1141,30,591,664,33,1292,216,33,25,216,33,1292]}
{"generation":483,"metadata":{"sampler_time":{"secs":0,"nanos":159207},"constraint_time":{"secs":0,"nanos":460788},"parser_time":{"secs":0,"nanos":792747},"transformer_time":{"secs":0,"nanos":708752172},"trie_time":{"secs":0,"nanos":4173544},"total_time":{"secs":0,"nanos":908869334}},"pass":false,"entropy":4.408839225786536,"entropy_diff":3.2133034011394557e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) (str.indexof col2 (str.substr col2 1 1) (str.indexof col2 \" \" 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,33,216,33,25,365,1321,30,3888,1714,664,34,476,476,216,33,7754,365,1321,30,1141,30,591,664,34,7754]}
{"generation":484,"metadata":{"sampler_time":{"secs":0,"nanos":86298},"constraint_time":{"secs":0,"nanos":561248},"parser_time":{"secs":0,"nanos":584248},"transformer_time":{"secs":0,"nanos":535597507},"trie_time":{"secs":0,"nanos":4304429},"total_time":{"secs":0,"nanos":688635458}},"pass":false,"entropy":4.408839221708568,"entropy_diff":4.07796729717802e-9,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 col2 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,25,216,33,25,216,33,1292]}
{"average_metadata":{"sampler_time":{"secs":0,"nanos":87816},"constraint_time":{"secs":0,"nanos":351338},"parser_time":{"secs":0,"nanos":468004},"transformer_time":{"secs":0,"nanos":473992208},"trie_time":{"secs":0,"nanos":2016478},"total_time":{"secs":0,"nanos":615007825}},"average_entropy":4.415250478326551,"average_entropy_diff":2.0736795602958864,"average_tokenization_error":0.0,"average_tokens_after_first_token_error":0.0,"total_duration":{"secs":301,"nanos":266093584},"average_token_count":0.0}
