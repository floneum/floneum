[2m2025-09-10T01:36:20.512602Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:36:20.512651Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:36:22.215402Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:36:22.215428Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:36:22.461961Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
[2m2025-09-10T01:36:22.462073Z[0m [32m INFO[0m [2mhf_hub[0m[2m:[0m Token file not found "/Users/sankha/.cache/huggingface/token"    
{"generation":0,"metadata":{"sampler_time":{"secs":0,"nanos":143417},"constraint_time":{"secs":0,"nanos":1073502},"parser_time":{"secs":0,"nanos":558164},"transformer_time":{"secs":0,"nanos":401334624},"trie_time":{"secs":0,"nanos":43674},"total_time":{"secs":0,"nanos":540016833}},"pass":false,"entropy":0.0,"entropy_diff":1000.0,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":1,"metadata":{"sampler_time":{"secs":0,"nanos":31625},"constraint_time":{"secs":0,"nanos":177623},"parser_time":{"secs":0,"nanos":180542},"transformer_time":{"secs":0,"nanos":161605748},"trie_time":{"secs":0,"nanos":38244},"total_time":{"secs":0,"nanos":209748709}},"pass":false,"entropy":2.5582612770096547,"entropy_diff":-2.5582612770096547,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,476,476,25]}
{"generation":2,"metadata":{"sampler_time":{"secs":0,"nanos":73170},"constraint_time":{"secs":0,"nanos":217419},"parser_time":{"secs":0,"nanos":293665},"transformer_time":{"secs":0,"nanos":228624082},"trie_time":{"secs":0,"nanos":38332},"total_time":{"secs":0,"nanos":305156375}},"pass":false,"entropy":3.19830676046672,"entropy_diff":-0.6400454834570652,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,34,25,25]}
{"generation":3,"metadata":{"sampler_time":{"secs":0,"nanos":26333},"constraint_time":{"secs":0,"nanos":54039},"parser_time":{"secs":0,"nanos":111958},"transformer_time":{"secs":0,"nanos":97067291},"trie_time":{"secs":0,"nanos":17579},"total_time":{"secs":0,"nanos":127772625}},"pass":false,"entropy":3.1953453058152115,"entropy_diff":0.002961454651508433,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ col1 col2)","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,664,33,664,34,25]}
{"generation":4,"metadata":{"sampler_time":{"secs":0,"nanos":47169},"constraint_time":{"secs":0,"nanos":212498},"parser_time":{"secs":0,"nanos":204801},"transformer_time":{"secs":0,"nanos":178771334},"trie_time":{"secs":0,"nanos":33161},"total_time":{"secs":0,"nanos":238537250}},"pass":false,"entropy":3.4434314536302226,"entropy_diff":-0.24808614781501115,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.substr col1 0 1) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25]}
{"generation":5,"metadata":{"sampler_time":{"secs":0,"nanos":143584},"constraint_time":{"secs":0,"nanos":1149873},"parser_time":{"secs":0,"nanos":509912},"transformer_time":{"secs":0,"nanos":410823166},"trie_time":{"secs":0,"nanos":51659},"total_time":{"secs":0,"nanos":552347834}},"pass":false,"entropy":3.457999523606129,"entropy_diff":-0.014568069975906539,"tokenization_error":true,"tokens_after_tokenization_error":47,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,216,24,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":6,"metadata":{"sampler_time":{"secs":0,"nanos":36620},"constraint_time":{"secs":0,"nanos":149294},"parser_time":{"secs":0,"nanos":194213},"transformer_time":{"secs":0,"nanos":162275332},"trie_time":{"secs":0,"nanos":45876},"total_time":{"secs":0,"nanos":214787042}},"pass":false,"entropy":5.167930172965846,"entropy_diff":-1.709930649359717,"tokenization_error":true,"tokens_after_tokenization_error":4,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,216,1002,18,25]}
{"generation":7,"metadata":{"sampler_time":{"secs":0,"nanos":59875},"constraint_time":{"secs":0,"nanos":190754},"parser_time":{"secs":0,"nanos":317291},"transformer_time":{"secs":0,"nanos":221063374},"trie_time":{"secs":0,"nanos":49878},"total_time":{"secs":0,"nanos":294166333}},"pass":false,"entropy":5.241207706119198,"entropy_diff":-0.07327753315335173,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,476,20361,25]}
{"generation":8,"metadata":{"sampler_time":{"secs":0,"nanos":116668},"constraint_time":{"secs":0,"nanos":307877},"parser_time":{"secs":0,"nanos":385586},"transformer_time":{"secs":0,"nanos":320171626},"trie_time":{"secs":0,"nanos":53286},"total_time":{"secs":0,"nanos":426529542}},"pass":false,"entropy":5.210820979167664,"entropy_diff":0.03038672695153366,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":9,"metadata":{"sampler_time":{"secs":0,"nanos":132670},"constraint_time":{"secs":0,"nanos":4368042},"parser_time":{"secs":0,"nanos":678871},"transformer_time":{"secs":0,"nanos":485163336},"trie_time":{"secs":0,"nanos":83172},"total_time":{"secs":0,"nanos":651870500}},"pass":false,"entropy":5.193079518427228,"entropy_diff":0.017741460740436032,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col1 \" \" 1) 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":10,"metadata":{"sampler_time":{"secs":0,"nanos":67876},"constraint_time":{"secs":0,"nanos":218414},"parser_time":{"secs":0,"nanos":289499},"transformer_time":{"secs":0,"nanos":232344165},"trie_time":{"secs":0,"nanos":89796},"total_time":{"secs":0,"nanos":309896083}},"pass":false,"entropy":5.174264158884372,"entropy_diff":0.01881535954285596,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,34,25,25]}
{"generation":11,"metadata":{"sampler_time":{"secs":0,"nanos":51454},"constraint_time":{"secs":0,"nanos":176918},"parser_time":{"secs":0,"nanos":316046},"transformer_time":{"secs":0,"nanos":228520750},"trie_time":{"secs":0,"nanos":72877},"total_time":{"secs":0,"nanos":305084209}},"pass":false,"entropy":5.160665900637724,"entropy_diff":0.013598258246648065,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,33,25,25]}
{"generation":12,"metadata":{"sampler_time":{"secs":0,"nanos":97420},"constraint_time":{"secs":0,"nanos":464083},"parser_time":{"secs":0,"nanos":434579},"transformer_time":{"secs":0,"nanos":311239874},"trie_time":{"secs":0,"nanos":81496},"total_time":{"secs":0,"nanos":417011667}},"pass":false,"entropy":5.138662658355789,"entropy_diff":0.02200324228193562,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.substr col1 0 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,25]}
{"generation":13,"metadata":{"sampler_time":{"secs":0,"nanos":112869},"constraint_time":{"secs":0,"nanos":732577},"parser_time":{"secs":0,"nanos":587664},"transformer_time":{"secs":0,"nanos":386595703},"trie_time":{"secs":0,"nanos":145843},"total_time":{"secs":0,"nanos":521258500}},"pass":false,"entropy":5.127310965548795,"entropy_diff":0.01135169280699344,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 (str.substr col1 (str.indexof col1 \" \" 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,25]}
{"generation":14,"metadata":{"sampler_time":{"secs":0,"nanos":96584},"constraint_time":{"secs":0,"nanos":1342830},"parser_time":{"secs":0,"nanos":508919},"transformer_time":{"secs":0,"nanos":402229249},"trie_time":{"secs":0,"nanos":135469},"total_time":{"secs":0,"nanos":539839417}},"pass":false,"entropy":5.120743277594948,"entropy_diff":0.006567687953847212,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 1 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":15,"metadata":{"sampler_time":{"secs":0,"nanos":52875},"constraint_time":{"secs":0,"nanos":229870},"parser_time":{"secs":0,"nanos":306089},"transformer_time":{"secs":0,"nanos":228785583},"trie_time":{"secs":0,"nanos":146913},"total_time":{"secs":0,"nanos":305233708}},"pass":false,"entropy":5.083488272872048,"entropy_diff":0.03725500472290033,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,664,33,25,25]}
{"generation":16,"metadata":{"sampler_time":{"secs":0,"nanos":83250},"constraint_time":{"secs":0,"nanos":358165},"parser_time":{"secs":0,"nanos":369739},"transformer_time":{"secs":0,"nanos":320504917},"trie_time":{"secs":0,"nanos":112092},"total_time":{"secs":0,"nanos":427461042}},"pass":false,"entropy":5.077777655166712,"entropy_diff":0.00571061770533543,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col2 \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,34,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":17,"metadata":{"sampler_time":{"secs":0,"nanos":129583},"constraint_time":{"secs":0,"nanos":6864420},"parser_time":{"secs":0,"nanos":657599},"transformer_time":{"secs":0,"nanos":486655253},"trie_time":{"secs":0,"nanos":162654},"total_time":{"secs":0,"nanos":654468458}},"pass":false,"entropy":5.1603242666400435,"entropy_diff":-0.08254661147333131,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr (str.substr col1 0 1) 1 2) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,216,34,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":18,"metadata":{"sampler_time":{"secs":0,"nanos":96958},"constraint_time":{"secs":0,"nanos":1254372},"parser_time":{"secs":0,"nanos":532003},"transformer_time":{"secs":0,"nanos":402584537},"trie_time":{"secs":0,"nanos":182782},"total_time":{"secs":0,"nanos":535776709}},"pass":false,"entropy":5.152126689430753,"entropy_diff":0.008197577209290152,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,14460,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":19,"metadata":{"sampler_time":{"secs":0,"nanos":17166},"constraint_time":{"secs":0,"nanos":166417},"parser_time":{"secs":0,"nanos":187292},"transformer_time":{"secs":0,"nanos":153923333},"trie_time":{"secs":0,"nanos":155542},"total_time":{"secs":0,"nanos":202020250}},"pass":false,"entropy":5.1279641391220325,"entropy_diff":0.02416255030872083,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) col2)","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,664,34,25]}
{"generation":20,"metadata":{"sampler_time":{"secs":0,"nanos":118418},"constraint_time":{"secs":0,"nanos":1169536},"parser_time":{"secs":0,"nanos":567470},"transformer_time":{"secs":0,"nanos":402421626},"trie_time":{"secs":0,"nanos":187538},"total_time":{"secs":0,"nanos":537682750}},"pass":false,"entropy":5.105038682862349,"entropy_diff":0.02292545625968323,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col2 0 1) \" \") (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":21,"metadata":{"sampler_time":{"secs":0,"nanos":39537},"constraint_time":{"secs":0,"nanos":231750},"parser_time":{"secs":0,"nanos":331418},"transformer_time":{"secs":0,"nanos":229450249},"trie_time":{"secs":0,"nanos":188959},"total_time":{"secs":0,"nanos":305501625}},"pass":false,"entropy":5.072650900241955,"entropy_diff":0.03238778262039421,"tokenization_error":true,"tokens_after_tokenization_error":4,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,216,1002,1715,25]}
{"generation":22,"metadata":{"sampler_time":{"secs":0,"nanos":24501},"constraint_time":{"secs":0,"nanos":188416},"parser_time":{"secs":0,"nanos":307995},"transformer_time":{"secs":0,"nanos":228738375},"trie_time":{"secs":0,"nanos":180252},"total_time":{"secs":0,"nanos":303951000}},"pass":false,"entropy":5.068396575842942,"entropy_diff":0.004254324399012965,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,34,476,476,25,25]}
{"generation":23,"metadata":{"sampler_time":{"secs":0,"nanos":21416},"constraint_time":{"secs":0,"nanos":133621},"parser_time":{"secs":0,"nanos":173161},"transformer_time":{"secs":0,"nanos":153993751},"trie_time":{"secs":0,"nanos":158959},"total_time":{"secs":0,"nanos":201788333}},"pass":false,"entropy":5.061896450157977,"entropy_diff":0.0065001256849654965,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,476,1627,25]}
{"generation":24,"metadata":{"sampler_time":{"secs":0,"nanos":108413},"constraint_time":{"secs":0,"nanos":1389999},"parser_time":{"secs":0,"nanos":551486},"transformer_time":{"secs":0,"nanos":414985084},"trie_time":{"secs":0,"nanos":212003},"total_time":{"secs":0,"nanos":553295542}},"pass":false,"entropy":5.031254813724677,"entropy_diff":0.03064163643329998,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,216,2283,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":25,"metadata":{"sampler_time":{"secs":0,"nanos":45246},"constraint_time":{"secs":0,"nanos":224330},"parser_time":{"secs":0,"nanos":265840},"transformer_time":{"secs":0,"nanos":228572668},"trie_time":{"secs":0,"nanos":203785},"total_time":{"secs":0,"nanos":305864250}},"pass":false,"entropy":4.986775100225148,"entropy_diff":0.04447971349952873,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,476,476,25,25]}
{"generation":26,"metadata":{"sampler_time":{"secs":0,"nanos":32829},"constraint_time":{"secs":0,"nanos":213001},"parser_time":{"secs":0,"nanos":294420},"transformer_time":{"secs":0,"nanos":228506207},"trie_time":{"secs":0,"nanos":183500},"total_time":{"secs":0,"nanos":307428458}},"pass":false,"entropy":4.984946399021638,"entropy_diff":0.0018287012035100858,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 \" \" col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,476,476,664,34,25,25]}
{"generation":27,"metadata":{"sampler_time":{"secs":0,"nanos":50714},"constraint_time":{"secs":0,"nanos":209370},"parser_time":{"secs":0,"nanos":282289},"transformer_time":{"secs":0,"nanos":240633083},"trie_time":{"secs":0,"nanos":210335},"total_time":{"secs":0,"nanos":324782500}},"pass":false,"entropy":4.979242917254986,"entropy_diff":0.005703481766651919,"tokenization_error":true,"tokens_after_tokenization_error":5,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,265,308,34,25,25]}
{"generation":28,"metadata":{"sampler_time":{"secs":0,"nanos":105335},"constraint_time":{"secs":0,"nanos":1207291},"parser_time":{"secs":0,"nanos":576464},"transformer_time":{"secs":0,"nanos":386015915},"trie_time":{"secs":0,"nanos":219458},"total_time":{"secs":0,"nanos":525813000}},"pass":false,"entropy":4.977098890962649,"entropy_diff":0.002144026292336676,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 (str.substr col1 (str.indexof col1 \" \" 1) 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,20361,25]}
{"generation":29,"metadata":{"sampler_time":{"secs":0,"nanos":53997},"constraint_time":{"secs":0,"nanos":203708},"parser_time":{"secs":0,"nanos":342503},"transformer_time":{"secs":0,"nanos":236588207},"trie_time":{"secs":0,"nanos":204459},"total_time":{"secs":0,"nanos":323125625}},"pass":false,"entropy":4.970971550948353,"entropy_diff":0.0061273400142960455,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,216,32,216,33,25,25]}
{"generation":30,"metadata":{"sampler_time":{"secs":0,"nanos":22791},"constraint_time":{"secs":0,"nanos":213418},"parser_time":{"secs":0,"nanos":277003},"transformer_time":{"secs":0,"nanos":221957500},"trie_time":{"secs":0,"nanos":215995},"total_time":{"secs":0,"nanos":299495667}},"pass":false,"entropy":4.965866901820041,"entropy_diff":0.005104649128312211,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,42934,25,25]}
{"generation":31,"metadata":{"sampler_time":{"secs":0,"nanos":31252},"constraint_time":{"secs":0,"nanos":218417},"parser_time":{"secs":0,"nanos":310087},"transformer_time":{"secs":0,"nanos":228620873},"trie_time":{"secs":0,"nanos":208333},"total_time":{"secs":0,"nanos":311334500}},"pass":false,"entropy":4.964133192561164,"entropy_diff":0.0017337092588771696,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,33,664,34,25,25]}
{"generation":32,"metadata":{"sampler_time":{"secs":0,"nanos":49542},"constraint_time":{"secs":0,"nanos":192666},"parser_time":{"secs":0,"nanos":292455},"transformer_time":{"secs":0,"nanos":237727625},"trie_time":{"secs":0,"nanos":209341},"total_time":{"secs":0,"nanos":324001333}},"pass":false,"entropy":4.9614671177237435,"entropy_diff":0.002666074837420318,"tokenization_error":true,"tokens_after_tokenization_error":7,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,216,2283,34,664,34,25,25]}
{"generation":33,"metadata":{"sampler_time":{"secs":0,"nanos":48372},"constraint_time":{"secs":0,"nanos":191750},"parser_time":{"secs":0,"nanos":276167},"transformer_time":{"secs":0,"nanos":237269998},"trie_time":{"secs":0,"nanos":197712},"total_time":{"secs":0,"nanos":322793625}},"pass":false,"entropy":4.957862896840511,"entropy_diff":0.003604220883232756,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,216,33,216,33,25,25]}
{"generation":34,"metadata":{"sampler_time":{"secs":0,"nanos":36168},"constraint_time":{"secs":0,"nanos":181045},"parser_time":{"secs":0,"nanos":310423},"transformer_time":{"secs":0,"nanos":221179206},"trie_time":{"secs":0,"nanos":224501},"total_time":{"secs":0,"nanos":301145042}},"pass":false,"entropy":4.952079917445675,"entropy_diff":0.005782979394835408,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,476,20361,25]}
{"generation":35,"metadata":{"sampler_time":{"secs":0,"nanos":62287},"constraint_time":{"secs":0,"nanos":564747},"parser_time":{"secs":0,"nanos":453789},"transformer_time":{"secs":0,"nanos":311563836},"trie_time":{"secs":0,"nanos":242955},"total_time":{"secs":0,"nanos":425653667}},"pass":false,"entropy":4.9502709584594,"entropy_diff":0.001808958986275755,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.substr col2 1 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,476,25,25]}
{"generation":36,"metadata":{"sampler_time":{"secs":0,"nanos":89044},"constraint_time":{"secs":0,"nanos":563250},"parser_time":{"secs":0,"nanos":546291},"transformer_time":{"secs":0,"nanos":357419288},"trie_time":{"secs":0,"nanos":259039},"total_time":{"secs":0,"nanos":491603167}},"pass":false,"entropy":4.949549588911823,"entropy_diff":0.0007213695475769555,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.at col1 (str.indexof col1 \" \" 1)) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,476,20361,25]}
{"generation":37,"metadata":{"sampler_time":{"secs":0,"nanos":50752},"constraint_time":{"secs":0,"nanos":287334},"parser_time":{"secs":0,"nanos":404549},"transformer_time":{"secs":0,"nanos":286920124},"trie_time":{"secs":0,"nanos":230498},"total_time":{"secs":0,"nanos":393270583}},"pass":false,"entropy":4.9491022337708,"entropy_diff":0.00044735514102267615,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.at col1 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,25]}
{"generation":38,"metadata":{"sampler_time":{"secs":0,"nanos":9959},"constraint_time":{"secs":0,"nanos":156789},"parser_time":{"secs":0,"nanos":162295},"transformer_time":{"secs":0,"nanos":145782081},"trie_time":{"secs":0,"nanos":216959},"total_time":{"secs":0,"nanos":193516625}},"pass":false,"entropy":4.938200986950803,"entropy_diff":0.010901246819996935,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,42934,25]}
{"generation":39,"metadata":{"sampler_time":{"secs":0,"nanos":32124},"constraint_time":{"secs":0,"nanos":222583},"parser_time":{"secs":0,"nanos":296375},"transformer_time":{"secs":0,"nanos":212104582},"trie_time":{"secs":0,"nanos":234206},"total_time":{"secs":0,"nanos":288732583}},"pass":false,"entropy":4.916044326164003,"entropy_diff":0.02215666078680023,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 \",\" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,42934,42934,25,25]}
{"generation":40,"metadata":{"sampler_time":{"secs":0,"nanos":74579},"constraint_time":{"secs":0,"nanos":280836},"parser_time":{"secs":0,"nanos":412128},"transformer_time":{"secs":0,"nanos":312602249},"trie_time":{"secs":0,"nanos":262163},"total_time":{"secs":0,"nanos":430773667}},"pass":false,"entropy":4.915347415683071,"entropy_diff":0.0006969104809320115,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col1 (str.substr col2 0 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,25,25]}
{"generation":41,"metadata":{"sampler_time":{"secs":0,"nanos":27751},"constraint_time":{"secs":0,"nanos":215795},"parser_time":{"secs":0,"nanos":275663},"transformer_time":{"secs":0,"nanos":228235628},"trie_time":{"secs":0,"nanos":270840},"total_time":{"secs":0,"nanos":311738917}},"pass":false,"entropy":4.914113238002947,"entropy_diff":0.0012341776801241267,"tokenization_error":true,"tokens_after_tokenization_error":4,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,664,34,476,1627,25,25]}
{"generation":42,"metadata":{"sampler_time":{"secs":0,"nanos":107876},"constraint_time":{"secs":0,"nanos":1128043},"parser_time":{"secs":0,"nanos":552536},"transformer_time":{"secs":0,"nanos":386011915},"trie_time":{"secs":0,"nanos":252452},"total_time":{"secs":0,"nanos":526756000}},"pass":false,"entropy":4.913260894749133,"entropy_diff":0.000852343253813892,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace (str.substr col1 (str.indexof col1 \" \" 1) 1) \" \" \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,476,476,42934,25,25]}
{"generation":43,"metadata":{"sampler_time":{"secs":0,"nanos":23916},"constraint_time":{"secs":0,"nanos":173085},"parser_time":{"secs":0,"nanos":184749},"transformer_time":{"secs":0,"nanos":154564669},"trie_time":{"secs":0,"nanos":250165},"total_time":{"secs":0,"nanos":206113250}},"pass":false,"entropy":4.9070268063229605,"entropy_diff":0.006234088426172235,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,14074,18,25]}
{"generation":44,"metadata":{"sampler_time":{"secs":0,"nanos":23289},"constraint_time":{"secs":0,"nanos":155086},"parser_time":{"secs":0,"nanos":169378},"transformer_time":{"secs":0,"nanos":154308041},"trie_time":{"secs":0,"nanos":205001},"total_time":{"secs":0,"nanos":206470375}},"pass":false,"entropy":4.888320563806373,"entropy_diff":0.018706242516587146,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col1) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,33,25,476,476,25]}
{"generation":45,"metadata":{"sampler_time":{"secs":0,"nanos":100660},"constraint_time":{"secs":0,"nanos":1057499},"parser_time":{"secs":0,"nanos":581336},"transformer_time":{"secs":0,"nanos":395072038},"trie_time":{"secs":0,"nanos":269219},"total_time":{"secs":0,"nanos":544511500}},"pass":false,"entropy":4.871315034810446,"entropy_diff":0.01700552899592722,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,14074,1715,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":46,"metadata":{"sampler_time":{"secs":0,"nanos":85414},"constraint_time":{"secs":0,"nanos":1203330},"parser_time":{"secs":0,"nanos":488169},"transformer_time":{"secs":0,"nanos":398030790},"trie_time":{"secs":0,"nanos":316163},"total_time":{"secs":0,"nanos":536497417}},"pass":false,"entropy":4.8576899012472685,"entropy_diff":0.013625133563177627,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":47,"metadata":{"sampler_time":{"secs":0,"nanos":86041},"constraint_time":{"secs":0,"nanos":1337919},"parser_time":{"secs":0,"nanos":544043},"transformer_time":{"secs":0,"nanos":395318956},"trie_time":{"secs":0,"nanos":313835},"total_time":{"secs":0,"nanos":538197125}},"pass":false,"entropy":4.8503998259392,"entropy_diff":0.007290075308068467,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":48,"metadata":{"sampler_time":{"secs":0,"nanos":48208},"constraint_time":{"secs":0,"nanos":1076040},"parser_time":{"secs":0,"nanos":431375},"transformer_time":{"secs":0,"nanos":319962835},"trie_time":{"secs":0,"nanos":342046},"total_time":{"secs":0,"nanos":432225125}},"pass":false,"entropy":4.848312528493997,"entropy_diff":0.0020872974452030846,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,216,33,216,33,25,25]}
{"generation":49,"metadata":{"sampler_time":{"secs":0,"nanos":55709},"constraint_time":{"secs":0,"nanos":1339336},"parser_time":{"secs":0,"nanos":417872},"transformer_time":{"secs":0,"nanos":319846497},"trie_time":{"secs":0,"nanos":333493},"total_time":{"secs":0,"nanos":432852500}},"pass":false,"entropy":4.8475184322888465,"entropy_diff":0.0007940962051504741,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,216,33,216,33,25,25]}
{"generation":50,"metadata":{"sampler_time":{"secs":0,"nanos":103460},"constraint_time":{"secs":0,"nanos":1271501},"parser_time":{"secs":0,"nanos":501257},"transformer_time":{"secs":0,"nanos":402652832},"trie_time":{"secs":0,"nanos":345378},"total_time":{"secs":0,"nanos":542923333}},"pass":false,"entropy":4.847089522160029,"entropy_diff":0.0004289101288170727,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":51,"metadata":{"sampler_time":{"secs":0,"nanos":94669},"constraint_time":{"secs":0,"nanos":1322668},"parser_time":{"secs":0,"nanos":526419},"transformer_time":{"secs":0,"nanos":406822708},"trie_time":{"secs":0,"nanos":352910},"total_time":{"secs":0,"nanos":543827958}},"pass":false,"entropy":4.845497321827316,"entropy_diff":0.001592200332713567,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 2 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":52,"metadata":{"sampler_time":{"secs":0,"nanos":54586},"constraint_time":{"secs":0,"nanos":191172},"parser_time":{"secs":0,"nanos":274240},"transformer_time":{"secs":0,"nanos":228794709},"trie_time":{"secs":0,"nanos":253248},"total_time":{"secs":0,"nanos":307769292}},"pass":false,"entropy":4.833061993382064,"entropy_diff":0.012435328445251415,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 \" \") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,476,20361,365,1321,30,4103,1321,664,33,216,32,216,33,25,25]}
{"generation":53,"metadata":{"sampler_time":{"secs":0,"nanos":29417},"constraint_time":{"secs":0,"nanos":217498},"parser_time":{"secs":0,"nanos":201120},"transformer_time":{"secs":0,"nanos":162823583},"trie_time":{"secs":0,"nanos":240461},"total_time":{"secs":0,"nanos":213661167}},"pass":false,"entropy":4.800974209893988,"entropy_diff":0.03208778348807684,"tokenization_error":true,"tokens_after_tokenization_error":9,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,216,2283,33,664,34,25,476,476,25]}
{"generation":54,"metadata":{"sampler_time":{"secs":0,"nanos":18586},"constraint_time":{"secs":0,"nanos":879749},"parser_time":{"secs":0,"nanos":289797},"transformer_time":{"secs":0,"nanos":228327293},"trie_time":{"secs":0,"nanos":358544},"total_time":{"secs":0,"nanos":300979708}},"pass":false,"entropy":4.765372694388615,"entropy_diff":0.03560151550537238,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,476,476,25]}
{"generation":55,"metadata":{"sampler_time":{"secs":0,"nanos":142882},"constraint_time":{"secs":0,"nanos":12882289},"parser_time":{"secs":0,"nanos":772757},"transformer_time":{"secs":0,"nanos":519507877},"trie_time":{"secs":0,"nanos":344781},"total_time":{"secs":0,"nanos":705296708}},"pass":false,"entropy":4.763080929455304,"entropy_diff":0.002291764933310958,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (+ (str.indexof col1 \" \" 1) 1) 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":56,"metadata":{"sampler_time":{"secs":0,"nanos":186455},"constraint_time":{"secs":0,"nanos":8528922},"parser_time":{"secs":0,"nanos":937629},"transformer_time":{"secs":0,"nanos":638281832},"trie_time":{"secs":0,"nanos":348584},"total_time":{"secs":0,"nanos":870767959}},"pass":false,"entropy":4.747857713420686,"entropy_diff":0.015223216034618403,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr \" \" (str.indexof col1 \" \" (str.indexof col2 \" \" 1)) 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,476,476,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,25]}
{"generation":57,"metadata":{"sampler_time":{"secs":0,"nanos":70833},"constraint_time":{"secs":0,"nanos":807664},"parser_time":{"secs":0,"nanos":432330},"transformer_time":{"secs":0,"nanos":294331502},"trie_time":{"secs":0,"nanos":416281},"total_time":{"secs":0,"nanos":427841166}},"pass":false,"entropy":4.7200333944117325,"entropy_diff":0.027824319008953324,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.at col1 0) \" \") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,261,664,33,216,32,25,476,476,25,365,1321,30,4103,1321,664,33,216,33,216,33,25,25]}
{"generation":58,"metadata":{"sampler_time":{"secs":0,"nanos":55374},"constraint_time":{"secs":0,"nanos":217126},"parser_time":{"secs":0,"nanos":331589},"transformer_time":{"secs":0,"nanos":237422126},"trie_time":{"secs":0,"nanos":355796},"total_time":{"secs":0,"nanos":315395250}},"pass":false,"entropy":4.689829073762694,"entropy_diff":0.03020432064903833,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col2 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,34,216,33,216,33,25,25]}
{"generation":59,"metadata":{"sampler_time":{"secs":0,"nanos":29042},"constraint_time":{"secs":0,"nanos":161835},"parser_time":{"secs":0,"nanos":172828},"transformer_time":{"secs":0,"nanos":162378959},"trie_time":{"secs":0,"nanos":308047},"total_time":{"secs":0,"nanos":212920583}},"pass":false,"entropy":4.68370884502298,"entropy_diff":0.006120228739714406,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,476,216,18,25]}
{"generation":60,"metadata":{"sampler_time":{"secs":0,"nanos":71710},"constraint_time":{"secs":0,"nanos":421253},"parser_time":{"secs":0,"nanos":482838},"transformer_time":{"secs":0,"nanos":312762874},"trie_time":{"secs":0,"nanos":375327},"total_time":{"secs":0,"nanos":469844000}},"pass":false,"entropy":4.667966102075799,"entropy_diff":0.015742742947180588,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 (str.substr col2 0 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,476,25,25]}
{"generation":61,"metadata":{"sampler_time":{"secs":0,"nanos":77167},"constraint_time":{"secs":0,"nanos":352874},"parser_time":{"secs":0,"nanos":444373},"transformer_time":{"secs":0,"nanos":302888793},"trie_time":{"secs":0,"nanos":344948},"total_time":{"secs":0,"nanos":400896792}},"pass":false,"entropy":4.667129531856385,"entropy_diff":0.000836570219414412,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.replace col2 col1 col2) col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,9630,664,34,664,33,664,34,25,664,34,25,25]}
{"generation":62,"metadata":{"sampler_time":{"secs":0,"nanos":36754},"constraint_time":{"secs":0,"nanos":217664},"parser_time":{"secs":0,"nanos":303709},"transformer_time":{"secs":0,"nanos":228576419},"trie_time":{"secs":0,"nanos":351582},"total_time":{"secs":0,"nanos":308786666}},"pass":false,"entropy":4.666743360014586,"entropy_diff":0.00038617184179923214,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col2 col2 col1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,34,664,34,664,33,25,25]}
{"generation":63,"metadata":{"sampler_time":{"secs":0,"nanos":21127},"constraint_time":{"secs":0,"nanos":165206},"parser_time":{"secs":0,"nanos":236422},"transformer_time":{"secs":0,"nanos":154676500},"trie_time":{"secs":0,"nanos":302330},"total_time":{"secs":0,"nanos":203694375}},"pass":false,"entropy":4.666258362659415,"entropy_diff":0.0004849973551701581,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) col1)","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,664,33,25]}
{"generation":64,"metadata":{"sampler_time":{"secs":0,"nanos":30209},"constraint_time":{"secs":0,"nanos":164413},"parser_time":{"secs":0,"nanos":187161},"transformer_time":{"secs":0,"nanos":162432002},"trie_time":{"secs":0,"nanos":290960},"total_time":{"secs":0,"nanos":215381834}},"pass":false,"entropy":4.650098963929924,"entropy_diff":0.016159398729491237,"tokenization_error":true,"tokens_after_tokenization_error":7,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,216,2283,34,25,476,476,25]}
{"generation":65,"metadata":{"sampler_time":{"secs":0,"nanos":64251},"constraint_time":{"secs":0,"nanos":228416},"parser_time":{"secs":0,"nanos":296584},"transformer_time":{"secs":0,"nanos":241332746},"trie_time":{"secs":0,"nanos":242501},"total_time":{"secs":0,"nanos":317811083}},"pass":false,"entropy":4.615702671690755,"entropy_diff":0.03439629223916896,"tokenization_error":true,"tokens_after_tokenization_error":19,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,27,27,664,33,664,34,25,365,1321,30,9630,664,33,664,34,664,34,25,25]}
{"generation":66,"metadata":{"sampler_time":{"secs":0,"nanos":113451},"constraint_time":{"secs":0,"nanos":1188960},"parser_time":{"secs":0,"nanos":555495},"transformer_time":{"secs":0,"nanos":403331833},"trie_time":{"secs":0,"nanos":417125},"total_time":{"secs":0,"nanos":538133375}},"pass":false,"entropy":4.794493017882054,"entropy_diff":-0.17879034619129897,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":67,"metadata":{"sampler_time":{"secs":0,"nanos":109125},"constraint_time":{"secs":0,"nanos":1418500},"parser_time":{"secs":0,"nanos":498206},"transformer_time":{"secs":0,"nanos":414152539},"trie_time":{"secs":0,"nanos":423283},"total_time":{"secs":0,"nanos":549537625}},"pass":false,"entropy":4.7943024461773405,"entropy_diff":0.00019057170471370455,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,216,1002,18,216,33,25,216,33,25,25]}
{"generation":68,"metadata":{"sampler_time":{"secs":0,"nanos":56582},"constraint_time":{"secs":0,"nanos":983958},"parser_time":{"secs":0,"nanos":341133},"transformer_time":{"secs":0,"nanos":245740998},"trie_time":{"secs":0,"nanos":430740},"total_time":{"secs":0,"nanos":326457084}},"pass":false,"entropy":4.794019448641953,"entropy_diff":0.00028299753538707506,"tokenization_error":true,"tokens_after_tokenization_error":6,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,216,1002,18,25]}
{"generation":69,"metadata":{"sampler_time":{"secs":0,"nanos":76210},"constraint_time":{"secs":0,"nanos":916543},"parser_time":{"secs":0,"nanos":451503},"transformer_time":{"secs":0,"nanos":311851499},"trie_time":{"secs":0,"nanos":428593},"total_time":{"secs":0,"nanos":422185833}},"pass":false,"entropy":4.793011176473355,"entropy_diff":0.0010082721685984453,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,33,216,34,25,25]}
{"generation":70,"metadata":{"sampler_time":{"secs":0,"nanos":89497},"constraint_time":{"secs":0,"nanos":1205495},"parser_time":{"secs":0,"nanos":419959},"transformer_time":{"secs":0,"nanos":311076708},"trie_time":{"secs":0,"nanos":426953},"total_time":{"secs":0,"nanos":417139792}},"pass":false,"entropy":4.792335867563843,"entropy_diff":0.0006753089095115072,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,216,33,216,33,25,25]}
{"generation":71,"metadata":{"sampler_time":{"secs":0,"nanos":48045},"constraint_time":{"secs":0,"nanos":890295},"parser_time":{"secs":0,"nanos":322041},"transformer_time":{"secs":0,"nanos":236478042},"trie_time":{"secs":0,"nanos":463336},"total_time":{"secs":0,"nanos":350361375}},"pass":false,"entropy":4.791431826285062,"entropy_diff":0.00090404127878152,"tokenization_error":true,"tokens_after_tokenization_error":5,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,476,476,25]}
{"generation":72,"metadata":{"sampler_time":{"secs":0,"nanos":75292},"constraint_time":{"secs":0,"nanos":969546},"parser_time":{"secs":0,"nanos":431336},"transformer_time":{"secs":0,"nanos":312070125},"trie_time":{"secs":0,"nanos":426736},"total_time":{"secs":0,"nanos":418345750}},"pass":false,"entropy":4.790529172831921,"entropy_diff":0.0009026534531413333,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col2 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,34,216,33,216,33,25,25]}
{"generation":73,"metadata":{"sampler_time":{"secs":0,"nanos":59372},"constraint_time":{"secs":0,"nanos":926585},"parser_time":{"secs":0,"nanos":458635},"transformer_time":{"secs":0,"nanos":311839414},"trie_time":{"secs":0,"nanos":455039},"total_time":{"secs":0,"nanos":419844667}},"pass":false,"entropy":4.79019489239053,"entropy_diff":0.00033428044139061086,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,33,216,34,25,25]}
{"generation":74,"metadata":{"sampler_time":{"secs":0,"nanos":49792},"constraint_time":{"secs":0,"nanos":946496},"parser_time":{"secs":0,"nanos":323834},"transformer_time":{"secs":0,"nanos":237297583},"trie_time":{"secs":0,"nanos":457377},"total_time":{"secs":0,"nanos":314772250}},"pass":false,"entropy":4.789987332884384,"entropy_diff":0.00020755950614592678,"tokenization_error":true,"tokens_after_tokenization_error":4,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,216,1002,18,25]}
{"generation":75,"metadata":{"sampler_time":{"secs":0,"nanos":90788},"constraint_time":{"secs":0,"nanos":1201459},"parser_time":{"secs":0,"nanos":523203},"transformer_time":{"secs":0,"nanos":403771290},"trie_time":{"secs":0,"nanos":462633},"total_time":{"secs":0,"nanos":540077375}},"pass":false,"entropy":4.788334900849187,"entropy_diff":0.001652432035196938,"tokenization_error":true,"tokens_after_tokenization_error":10,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,216,1002,18,216,33,25,216,33,25,25]}
{"generation":76,"metadata":{"sampler_time":{"secs":0,"nanos":52539},"constraint_time":{"secs":0,"nanos":980290},"parser_time":{"secs":0,"nanos":401212},"transformer_time":{"secs":0,"nanos":312621419},"trie_time":{"secs":0,"nanos":521711},"total_time":{"secs":0,"nanos":422574833}},"pass":false,"entropy":4.788171973730584,"entropy_diff":0.00016292711860277365,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,216,32,216,33,25,25]}
{"generation":77,"metadata":{"sampler_time":{"secs":0,"nanos":74837},"constraint_time":{"secs":0,"nanos":1076503},"parser_time":{"secs":0,"nanos":423381},"transformer_time":{"secs":0,"nanos":319957288},"trie_time":{"secs":0,"nanos":522251},"total_time":{"secs":0,"nanos":431314375}},"pass":false,"entropy":4.7880330499274715,"entropy_diff":0.000138923803112867,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,216,32,216,33,25,25]}
{"generation":78,"metadata":{"sampler_time":{"secs":0,"nanos":55040},"constraint_time":{"secs":0,"nanos":950038},"parser_time":{"secs":0,"nanos":403069},"transformer_time":{"secs":0,"nanos":295259082},"trie_time":{"secs":0,"nanos":505752},"total_time":{"secs":0,"nanos":401104000}},"pass":false,"entropy":4.78772036408274,"entropy_diff":0.00031268584473131966,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,476,20361,25]}
{"generation":79,"metadata":{"sampler_time":{"secs":0,"nanos":70370},"constraint_time":{"secs":0,"nanos":899543},"parser_time":{"secs":0,"nanos":431046},"transformer_time":{"secs":0,"nanos":319443415},"trie_time":{"secs":0,"nanos":501714},"total_time":{"secs":0,"nanos":429375625}},"pass":false,"entropy":4.787508171926877,"entropy_diff":0.00021219215586310014,"tokenization_error":true,"tokens_after_tokenization_error":16,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,216,33,216,33,25,25]}
{"generation":80,"metadata":{"sampler_time":{"secs":0,"nanos":99375},"constraint_time":{"secs":0,"nanos":1227956},"parser_time":{"secs":0,"nanos":516084},"transformer_time":{"secs":0,"nanos":411014712},"trie_time":{"secs":0,"nanos":514957},"total_time":{"secs":0,"nanos":555666750}},"pass":false,"entropy":4.787234046471542,"entropy_diff":0.0002741254553351169,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,216,1715,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,216,18,216,33,25,216,33,25,25]}
{"generation":81,"metadata":{"sampler_time":{"secs":0,"nanos":87793},"constraint_time":{"secs":0,"nanos":1092082},"parser_time":{"secs":0,"nanos":546216},"transformer_time":{"secs":0,"nanos":401948125},"trie_time":{"secs":0,"nanos":541331},"total_time":{"secs":0,"nanos":537914167}},"pass":false,"entropy":4.786375741083392,"entropy_diff":0.0008583053881503488,"tokenization_error":true,"tokens_after_tokenization_error":10,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,216,1002,18,216,33,25,216,33,25,25]}
{"generation":82,"metadata":{"sampler_time":{"secs":0,"nanos":71669},"constraint_time":{"secs":0,"nanos":1280500},"parser_time":{"secs":0,"nanos":445882},"transformer_time":{"secs":0,"nanos":320108039},"trie_time":{"secs":0,"nanos":561913},"total_time":{"secs":0,"nanos":431072292}},"pass":false,"entropy":4.786035484559342,"entropy_diff":0.00034025652404956475,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,216,32,216,33,25,25]}
{"generation":83,"metadata":{"sampler_time":{"secs":0,"nanos":50044},"constraint_time":{"secs":0,"nanos":1060914},"parser_time":{"secs":0,"nanos":459962},"transformer_time":{"secs":0,"nanos":313025081},"trie_time":{"secs":0,"nanos":568912},"total_time":{"secs":0,"nanos":423464917}},"pass":false,"entropy":4.785845860972334,"entropy_diff":0.0001896235870075813,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,32,216,33,25,25]}
{"generation":84,"metadata":{"sampler_time":{"secs":0,"nanos":50417},"constraint_time":{"secs":0,"nanos":922126},"parser_time":{"secs":0,"nanos":460584},"transformer_time":{"secs":0,"nanos":314791335},"trie_time":{"secs":0,"nanos":567670},"total_time":{"secs":0,"nanos":420566166}},"pass":false,"entropy":4.785687315909766,"entropy_diff":0.00015854506256829382,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,216,32,216,33,25,25]}
{"generation":85,"metadata":{"sampler_time":{"secs":0,"nanos":57838},"constraint_time":{"secs":0,"nanos":929414},"parser_time":{"secs":0,"nanos":307087},"transformer_time":{"secs":0,"nanos":245506500},"trie_time":{"secs":0,"nanos":517671},"total_time":{"secs":0,"nanos":324964292}},"pass":false,"entropy":4.785441005265614,"entropy_diff":0.00024631064415192583,"tokenization_error":true,"tokens_after_tokenization_error":7,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) col1) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,265,308,33,25,476,476,25]}
{"generation":86,"metadata":{"sampler_time":{"secs":0,"nanos":123993},"constraint_time":{"secs":0,"nanos":3964459},"parser_time":{"secs":0,"nanos":677119},"transformer_time":{"secs":0,"nanos":485524293},"trie_time":{"secs":0,"nanos":461673},"total_time":{"secs":0,"nanos":651554000}},"pass":false,"entropy":4.7837607062093275,"entropy_diff":0.0016802990562867492,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col2 \" \" 1) 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":87,"metadata":{"sampler_time":{"secs":0,"nanos":101421},"constraint_time":{"secs":0,"nanos":1769252},"parser_time":{"secs":0,"nanos":737157},"transformer_time":{"secs":0,"nanos":476858880},"trie_time":{"secs":0,"nanos":633949},"total_time":{"secs":0,"nanos":635520666}},"pass":false,"entropy":4.775089021391399,"entropy_diff":0.008671684817928238,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,476,25,216,33,25,216,33,25,25]}
{"generation":88,"metadata":{"sampler_time":{"secs":0,"nanos":72715},"constraint_time":{"secs":0,"nanos":1179626},"parser_time":{"secs":0,"nanos":543413},"transformer_time":{"secs":0,"nanos":403156502},"trie_time":{"secs":0,"nanos":640825},"total_time":{"secs":0,"nanos":536292000}},"pass":false,"entropy":4.775070136494083,"entropy_diff":0.000018884897316162608,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":89,"metadata":{"sampler_time":{"secs":0,"nanos":74913},"constraint_time":{"secs":0,"nanos":1256208},"parser_time":{"secs":0,"nanos":415793},"transformer_time":{"secs":0,"nanos":320522668},"trie_time":{"secs":0,"nanos":603546},"total_time":{"secs":0,"nanos":422717708}},"pass":false,"entropy":4.7749604920364925,"entropy_diff":0.00010964445759054087,"tokenization_error":true,"tokens_after_tokenization_error":16,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col2 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,34,216,33,216,33,25,25]}
{"generation":90,"metadata":{"sampler_time":{"secs":0,"nanos":75872},"constraint_time":{"secs":0,"nanos":934339},"parser_time":{"secs":0,"nanos":424040},"transformer_time":{"secs":0,"nanos":303286251},"trie_time":{"secs":0,"nanos":581290},"total_time":{"secs":0,"nanos":396780459}},"pass":false,"entropy":4.774866051720925,"entropy_diff":0.00009444031556782306,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.replace col1 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,9630,664,33,664,34,476,476,25,25]}
{"generation":91,"metadata":{"sampler_time":{"secs":0,"nanos":98790},"constraint_time":{"secs":0,"nanos":1054792},"parser_time":{"secs":0,"nanos":555056},"transformer_time":{"secs":0,"nanos":394583584},"trie_time":{"secs":0,"nanos":597378},"total_time":{"secs":0,"nanos":520578500}},"pass":false,"entropy":4.774583894462819,"entropy_diff":0.00028215725810554204,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":92,"metadata":{"sampler_time":{"secs":0,"nanos":92870},"constraint_time":{"secs":0,"nanos":1100251},"parser_time":{"secs":0,"nanos":533705},"transformer_time":{"secs":0,"nanos":405452709},"trie_time":{"secs":0,"nanos":671920},"total_time":{"secs":0,"nanos":532870584}},"pass":false,"entropy":4.7745265495537685,"entropy_diff":0.00005734490905062728,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":93,"metadata":{"sampler_time":{"secs":0,"nanos":64875},"constraint_time":{"secs":0,"nanos":1257419},"parser_time":{"secs":0,"nanos":416296},"transformer_time":{"secs":0,"nanos":311679584},"trie_time":{"secs":0,"nanos":611002},"total_time":{"secs":0,"nanos":411756125}},"pass":false,"entropy":4.774500106338912,"entropy_diff":0.000026443214856897157,"tokenization_error":true,"tokens_after_tokenization_error":14,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,9630,664,33,664,34,476,476,25,25]}
{"generation":94,"metadata":{"sampler_time":{"secs":0,"nanos":50209},"constraint_time":{"secs":0,"nanos":841460},"parser_time":{"secs":0,"nanos":329753},"transformer_time":{"secs":0,"nanos":237485542},"trie_time":{"secs":0,"nanos":620124},"total_time":{"secs":0,"nanos":317947042}},"pass":false,"entropy":4.774389578473786,"entropy_diff":0.00011052786512522061,"tokenization_error":true,"tokens_after_tokenization_error":4,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,1002,18,25]}
{"generation":95,"metadata":{"sampler_time":{"secs":0,"nanos":74289},"constraint_time":{"secs":0,"nanos":1144246},"parser_time":{"secs":0,"nanos":460554},"transformer_time":{"secs":0,"nanos":312537038},"trie_time":{"secs":0,"nanos":599491},"total_time":{"secs":0,"nanos":423168875}},"pass":false,"entropy":4.774111376760219,"entropy_diff":0.0002782017135674053,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col2 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,34,216,32,216,33,25,25]}
{"generation":96,"metadata":{"sampler_time":{"secs":0,"nanos":108916},"constraint_time":{"secs":0,"nanos":1157663},"parser_time":{"secs":0,"nanos":567493},"transformer_time":{"secs":0,"nanos":410546167},"trie_time":{"secs":0,"nanos":621628},"total_time":{"secs":0,"nanos":553509958}},"pass":false,"entropy":4.773867849440671,"entropy_diff":0.00024352731954824236,"tokenization_error":true,"tokens_after_tokenization_error":27,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,216,1002,18,216,33,25,216,33,25,25]}
{"generation":97,"metadata":{"sampler_time":{"secs":0,"nanos":92332},"constraint_time":{"secs":0,"nanos":1133291},"parser_time":{"secs":0,"nanos":570801},"transformer_time":{"secs":0,"nanos":405855666},"trie_time":{"secs":0,"nanos":603609},"total_time":{"secs":0,"nanos":543428625}},"pass":false,"entropy":4.773796062564882,"entropy_diff":0.00007178687578868193,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 2) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,34,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":98,"metadata":{"sampler_time":{"secs":0,"nanos":139924},"constraint_time":{"secs":0,"nanos":6501795},"parser_time":{"secs":0,"nanos":737506},"transformer_time":{"secs":0,"nanos":460892293},"trie_time":{"secs":0,"nanos":456375},"total_time":{"secs":0,"nanos":622686333}},"pass":false,"entropy":4.770866425028897,"entropy_diff":0.0029296375359848525,"tokenization_error":true,"tokens_after_tokenization_error":28,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.++ (str.substr col1 0 1) \" \") \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":99,"metadata":{"sampler_time":{"secs":0,"nanos":41205},"constraint_time":{"secs":0,"nanos":225002},"parser_time":{"secs":0,"nanos":274083},"transformer_time":{"secs":0,"nanos":231438875},"trie_time":{"secs":0,"nanos":429369},"total_time":{"secs":0,"nanos":307923584}},"pass":false,"entropy":4.742769233537989,"entropy_diff":0.02809719149090828,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 \",\") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,42934,25,365,1321,30,4103,1321,664,33,216,33,216,33,25,25]}
{"generation":100,"metadata":{"sampler_time":{"secs":0,"nanos":41293},"constraint_time":{"secs":0,"nanos":162542},"parser_time":{"secs":0,"nanos":191120},"transformer_time":{"secs":0,"nanos":153796249},"trie_time":{"secs":0,"nanos":397084},"total_time":{"secs":0,"nanos":202377083}},"pass":false,"entropy":4.725445315435013,"entropy_diff":0.017323918102976066,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col2 col1) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,34,664,33,25,476,476,25]}
{"generation":101,"metadata":{"sampler_time":{"secs":0,"nanos":81205},"constraint_time":{"secs":0,"nanos":981581},"parser_time":{"secs":0,"nanos":429254},"transformer_time":{"secs":0,"nanos":320424039},"trie_time":{"secs":0,"nanos":639341},"total_time":{"secs":0,"nanos":428144458}},"pass":false,"entropy":4.70787497738045,"entropy_diff":0.017570338054563095,"tokenization_error":true,"tokens_after_tokenization_error":16,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,216,32,216,33,25,25]}
{"generation":102,"metadata":{"sampler_time":{"secs":0,"nanos":78083},"constraint_time":{"secs":0,"nanos":1261916},"parser_time":{"secs":0,"nanos":491797},"transformer_time":{"secs":0,"nanos":312394165},"trie_time":{"secs":0,"nanos":635874},"total_time":{"secs":0,"nanos":420489625}},"pass":false,"entropy":4.707785117626201,"entropy_diff":0.00008985975424913306,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) (str.substr col2 1 2)) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,4103,1321,664,34,216,33,216,34,1292,476,476,25]}
{"generation":103,"metadata":{"sampler_time":{"secs":0,"nanos":32834},"constraint_time":{"secs":0,"nanos":1294043},"parser_time":{"secs":0,"nanos":334457},"transformer_time":{"secs":0,"nanos":220033998},"trie_time":{"secs":0,"nanos":750297},"total_time":{"secs":0,"nanos":290986834}},"pass":false,"entropy":4.707112188068358,"entropy_diff":0.0006729295578429273,"tokenization_error":false,"tokens_after_tokenization_error":0,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,42934,25]}
{"generation":104,"metadata":{"sampler_time":{"secs":0,"nanos":69292},"constraint_time":{"secs":0,"nanos":1265706},"parser_time":{"secs":0,"nanos":455798},"transformer_time":{"secs":0,"nanos":322982789},"trie_time":{"secs":0,"nanos":688371},"total_time":{"secs":0,"nanos":435172208}},"pass":false,"entropy":4.706443979116839,"entropy_diff":0.0006682089515184231,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,216,33,216,34,25,25]}
{"generation":105,"metadata":{"sampler_time":{"secs":0,"nanos":80792},"constraint_time":{"secs":0,"nanos":1207171},"parser_time":{"secs":0,"nanos":552446},"transformer_time":{"secs":0,"nanos":394640667},"trie_time":{"secs":0,"nanos":708084},"total_time":{"secs":0,"nanos":534480916}},"pass":false,"entropy":4.706421242565728,"entropy_diff":0.000022736551111179892,"tokenization_error":true,"tokens_after_tokenization_error":24,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,25,25]}
{"generation":106,"metadata":{"sampler_time":{"secs":0,"nanos":112665},"constraint_time":{"secs":0,"nanos":1776418},"parser_time":{"secs":0,"nanos":674888},"transformer_time":{"secs":0,"nanos":485683207},"trie_time":{"secs":0,"nanos":720448},"total_time":{"secs":0,"nanos":660290542}},"pass":false,"entropy":4.7064148880906345,"entropy_diff":6.354475093672818e-6,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 0 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,216,33,25,216,33,25,25]}
{"generation":107,"metadata":{"sampler_time":{"secs":0,"nanos":48042},"constraint_time":{"secs":0,"nanos":969710},"parser_time":{"secs":0,"nanos":441992},"transformer_time":{"secs":0,"nanos":320186997},"trie_time":{"secs":0,"nanos":732255},"total_time":{"secs":0,"nanos":433672916}},"pass":false,"entropy":4.706392599885541,"entropy_diff":0.000022288205093090596,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,216,34,216,33,25,25]}
{"generation":108,"metadata":{"sampler_time":{"secs":0,"nanos":70791},"constraint_time":{"secs":0,"nanos":965006},"parser_time":{"secs":0,"nanos":396790},"transformer_time":{"secs":0,"nanos":319969833},"trie_time":{"secs":0,"nanos":718589},"total_time":{"secs":0,"nanos":432541291}},"pass":false,"entropy":4.706364020678145,"entropy_diff":0.00002857920739618436,"tokenization_error":true,"tokens_after_tokenization_error":16,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col2 0 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,34,216,32,216,33,25,25]}
{"generation":109,"metadata":{"sampler_time":{"secs":0,"nanos":99415},"constraint_time":{"secs":0,"nanos":1072627},"parser_time":{"secs":0,"nanos":545550},"transformer_time":{"secs":0,"nanos":402706292},"trie_time":{"secs":0,"nanos":727578},"total_time":{"secs":0,"nanos":545843875}},"pass":false,"entropy":4.706298408462927,"entropy_diff":0.00006561221521828031,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,216,33,25,216,33,25,25]}
{"generation":110,"metadata":{"sampler_time":{"secs":0,"nanos":99875},"constraint_time":{"secs":0,"nanos":1256794},"parser_time":{"secs":0,"nanos":559924},"transformer_time":{"secs":0,"nanos":402464083},"trie_time":{"secs":0,"nanos":759660},"total_time":{"secs":0,"nanos":546016833}},"pass":false,"entropy":4.706293972899563,"entropy_diff":4.435563363713868e-6,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,25,25]}
{"generation":111,"metadata":{"sampler_time":{"secs":0,"nanos":77419},"constraint_time":{"secs":0,"nanos":1176334},"parser_time":{"secs":0,"nanos":561583},"transformer_time":{"secs":0,"nanos":410261125},"trie_time":{"secs":0,"nanos":760335},"total_time":{"secs":0,"nanos":553124250}},"pass":false,"entropy":4.7062906516779215,"entropy_diff":3.321221641705563e-6,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,216,1002,18,216,33,25,216,33,25,25]}
{"generation":112,"metadata":{"sampler_time":{"secs":0,"nanos":70879},"constraint_time":{"secs":0,"nanos":1065249},"parser_time":{"secs":0,"nanos":570827},"transformer_time":{"secs":0,"nanos":410322708},"trie_time":{"secs":0,"nanos":744548},"total_time":{"secs":0,"nanos":552873959}},"pass":false,"entropy":4.706281980470629,"entropy_diff":8.671207292643146e-6,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,216,1002,18,216,33,25,216,33,25,25]}
{"generation":113,"metadata":{"sampler_time":{"secs":0,"nanos":97958},"constraint_time":{"secs":0,"nanos":1556126},"parser_time":{"secs":0,"nanos":834384},"transformer_time":{"secs":0,"nanos":521692213},"trie_time":{"secs":0,"nanos":767162},"total_time":{"secs":0,"nanos":705155792}},"pass":false,"entropy":4.70625366550465,"entropy_diff":0.000028314965978992745,"tokenization_error":true,"tokens_after_tokenization_error":39,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (+ (str.indexof col1 \" \" 1) 1) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,25,25,25]}
{"generation":114,"metadata":{"sampler_time":{"secs":0,"nanos":34291},"constraint_time":{"secs":0,"nanos":894830},"parser_time":{"secs":0,"nanos":314915},"transformer_time":{"secs":0,"nanos":245790336},"trie_time":{"secs":0,"nanos":731790},"total_time":{"secs":0,"nanos":327978709}},"pass":false,"entropy":4.706232979984718,"entropy_diff":0.000020685519931618046,"tokenization_error":true,"tokens_after_tokenization_error":7,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,216,1002,18,25]}
{"generation":115,"metadata":{"sampler_time":{"secs":0,"nanos":72129},"constraint_time":{"secs":0,"nanos":1186083},"parser_time":{"secs":0,"nanos":497335},"transformer_time":{"secs":0,"nanos":402289207},"trie_time":{"secs":0,"nanos":844839},"total_time":{"secs":0,"nanos":537927208}},"pass":false,"entropy":4.70606036056654,"entropy_diff":0.00017261941817814375,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,14074,18,216,33,25,216,33,25,25]}
{"generation":116,"metadata":{"sampler_time":{"secs":0,"nanos":98419},"constraint_time":{"secs":0,"nanos":1139915},"parser_time":{"secs":0,"nanos":572362},"transformer_time":{"secs":0,"nanos":410517251},"trie_time":{"secs":0,"nanos":799215},"total_time":{"secs":0,"nanos":546372917}},"pass":false,"entropy":4.706057688154968,"entropy_diff":2.6724115720355712e-6,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,216,2283,33,476,476,216,33,25,216,33,25,25]}
{"generation":117,"metadata":{"sampler_time":{"secs":0,"nanos":93834},"constraint_time":{"secs":0,"nanos":1150792},"parser_time":{"secs":0,"nanos":561508},"transformer_time":{"secs":0,"nanos":410500579},"trie_time":{"secs":0,"nanos":761584},"total_time":{"secs":0,"nanos":539382500}},"pass":false,"entropy":4.7060513739049705,"entropy_diff":6.3142499975299415e-6,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col2 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,216,1002,18,216,33,25,216,33,25,25]}
{"generation":118,"metadata":{"sampler_time":{"secs":0,"nanos":102792},"constraint_time":{"secs":0,"nanos":991208},"parser_time":{"secs":0,"nanos":561328},"transformer_time":{"secs":0,"nanos":399010546},"trie_time":{"secs":0,"nanos":809505},"total_time":{"secs":0,"nanos":526195250}},"pass":false,"entropy":4.706035613618848,"entropy_diff":0.00001576028612237934,"tokenization_error":true,"tokens_after_tokenization_error":24,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,1292,25]}
{"generation":119,"metadata":{"sampler_time":{"secs":0,"nanos":75331},"constraint_time":{"secs":0,"nanos":1310791},"parser_time":{"secs":0,"nanos":504542},"transformer_time":{"secs":0,"nanos":411332247},"trie_time":{"secs":0,"nanos":806709},"total_time":{"secs":0,"nanos":540084958}},"pass":false,"entropy":4.706030886801181,"entropy_diff":4.726817667055627e-6,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,216,18,216,33,25,216,33,25,25]}
{"generation":120,"metadata":{"sampler_time":{"secs":0,"nanos":70832},"constraint_time":{"secs":0,"nanos":936706},"parser_time":{"secs":0,"nanos":448363},"transformer_time":{"secs":0,"nanos":320249462},"trie_time":{"secs":0,"nanos":787460},"total_time":{"secs":0,"nanos":422054125}},"pass":false,"entropy":4.706028614966242,"entropy_diff":2.271834938838424e-6,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 1 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,216,33,216,32,25,25]}
{"generation":121,"metadata":{"sampler_time":{"secs":0,"nanos":82874},"constraint_time":{"secs":0,"nanos":997457},"parser_time":{"secs":0,"nanos":528701},"transformer_time":{"secs":0,"nanos":402292419},"trie_time":{"secs":0,"nanos":811675},"total_time":{"secs":0,"nanos":531493958}},"pass":false,"entropy":4.706022658163209,"entropy_diff":5.956803033058122e-6,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof \" \" col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,664,33,216,33,25,216,33,25,25]}
{"generation":122,"metadata":{"sampler_time":{"secs":0,"nanos":61207},"constraint_time":{"secs":0,"nanos":1001834},"parser_time":{"secs":0,"nanos":410927},"transformer_time":{"secs":0,"nanos":313705625},"trie_time":{"secs":0,"nanos":1172580},"total_time":{"secs":0,"nanos":420073125}},"pass":false,"entropy":4.706017086464093,"entropy_diff":5.571699116302398e-6,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,216,34,216,33,25,25]}
{"generation":123,"metadata":{"sampler_time":{"secs":0,"nanos":49871},"constraint_time":{"secs":0,"nanos":1143546},"parser_time":{"secs":0,"nanos":328123},"transformer_time":{"secs":0,"nanos":232255461},"trie_time":{"secs":0,"nanos":748660},"total_time":{"secs":0,"nanos":307177958}},"pass":false,"entropy":4.706002539602314,"entropy_diff":0.00001454686177915221,"tokenization_error":true,"tokens_after_tokenization_error":4,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,42934,25]}
{"generation":124,"metadata":{"sampler_time":{"secs":0,"nanos":96667},"constraint_time":{"secs":0,"nanos":1044415},"parser_time":{"secs":0,"nanos":551590},"transformer_time":{"secs":0,"nanos":395659959},"trie_time":{"secs":0,"nanos":724031},"total_time":{"secs":0,"nanos":543466541}},"pass":false,"entropy":4.705810621817891,"entropy_diff":0.00019191778442273488,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":125,"metadata":{"sampler_time":{"secs":0,"nanos":96538},"constraint_time":{"secs":0,"nanos":1122958},"parser_time":{"secs":0,"nanos":699914},"transformer_time":{"secs":0,"nanos":381264003},"trie_time":{"secs":0,"nanos":765293},"total_time":{"secs":0,"nanos":519979791}},"pass":false,"entropy":4.705796891203689,"entropy_diff":0.00001373061420206767,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 1 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,25]}
{"generation":126,"metadata":{"sampler_time":{"secs":0,"nanos":142706},"constraint_time":{"secs":0,"nanos":2942293},"parser_time":{"secs":0,"nanos":689246},"transformer_time":{"secs":0,"nanos":477807832},"trie_time":{"secs":0,"nanos":755253},"total_time":{"secs":0,"nanos":650205667}},"pass":false,"entropy":4.705752184780114,"entropy_diff":0.0000447064235746808,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,33,25,25]}
{"generation":127,"metadata":{"sampler_time":{"secs":0,"nanos":85174},"constraint_time":{"secs":0,"nanos":1247756},"parser_time":{"secs":0,"nanos":541207},"transformer_time":{"secs":0,"nanos":386736376},"trie_time":{"secs":0,"nanos":799833},"total_time":{"secs":0,"nanos":519097958}},"pass":false,"entropy":4.705745185441546,"entropy_diff":6.999338568292046e-6,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,25,25]}
{"generation":128,"metadata":{"sampler_time":{"secs":0,"nanos":120371},"constraint_time":{"secs":0,"nanos":1902631},"parser_time":{"secs":0,"nanos":680335},"transformer_time":{"secs":0,"nanos":482422915},"trie_time":{"secs":0,"nanos":1018510},"total_time":{"secs":0,"nanos":650345209}},"pass":false,"entropy":4.705741353202992,"entropy_diff":3.832238554046796e-6,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof (str.substr col1 0 1) \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,216,33,25,216,33,25,25]}
{"generation":129,"metadata":{"sampler_time":{"secs":0,"nanos":124712},"constraint_time":{"secs":0,"nanos":1256877},"parser_time":{"secs":0,"nanos":528407},"transformer_time":{"secs":0,"nanos":394854288},"trie_time":{"secs":0,"nanos":858547},"total_time":{"secs":0,"nanos":538497458}},"pass":false,"entropy":4.705728454124307,"entropy_diff":0.000012899078685180143,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":130,"metadata":{"sampler_time":{"secs":0,"nanos":116161},"constraint_time":{"secs":0,"nanos":1235791},"parser_time":{"secs":0,"nanos":567252},"transformer_time":{"secs":0,"nanos":403009874},"trie_time":{"secs":0,"nanos":838627},"total_time":{"secs":0,"nanos":546615458}},"pass":false,"entropy":4.705685473772838,"entropy_diff":0.00004298035146899082,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,216,33,25,216,33,25,25]}
{"generation":131,"metadata":{"sampler_time":{"secs":0,"nanos":100083},"constraint_time":{"secs":0,"nanos":1207958},"parser_time":{"secs":0,"nanos":541755},"transformer_time":{"secs":0,"nanos":402626705},"trie_time":{"secs":0,"nanos":847586},"total_time":{"secs":0,"nanos":545515333}},"pass":false,"entropy":4.705668917009099,"entropy_diff":0.00001655676373868431,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col2 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":132,"metadata":{"sampler_time":{"secs":0,"nanos":55704},"constraint_time":{"secs":0,"nanos":965622},"parser_time":{"secs":0,"nanos":427582},"transformer_time":{"secs":0,"nanos":295269708},"trie_time":{"secs":0,"nanos":883583},"total_time":{"secs":0,"nanos":401562791}},"pass":false,"entropy":4.705643364588667,"entropy_diff":0.000025552420432006784,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,42934,25,25]}
{"generation":133,"metadata":{"sampler_time":{"secs":0,"nanos":69753},"constraint_time":{"secs":0,"nanos":1151955},"parser_time":{"secs":0,"nanos":441416},"transformer_time":{"secs":0,"nanos":303601499},"trie_time":{"secs":0,"nanos":864372},"total_time":{"secs":0,"nanos":414049250}},"pass":false,"entropy":4.705636093180593,"entropy_diff":7.271408073883379e-6,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col1 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,33,664,34,25,25]}
{"generation":134,"metadata":{"sampler_time":{"secs":0,"nanos":43542},"constraint_time":{"secs":0,"nanos":1147125},"parser_time":{"secs":0,"nanos":432116},"transformer_time":{"secs":0,"nanos":312452128},"trie_time":{"secs":0,"nanos":899093},"total_time":{"secs":0,"nanos":426907875}},"pass":false,"entropy":4.705620960527553,"entropy_diff":0.000015132653039984234,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,216,34,216,33,25,25]}
{"generation":135,"metadata":{"sampler_time":{"secs":0,"nanos":113333},"constraint_time":{"secs":0,"nanos":1261707},"parser_time":{"secs":0,"nanos":592374},"transformer_time":{"secs":0,"nanos":402912127},"trie_time":{"secs":0,"nanos":825584},"total_time":{"secs":0,"nanos":546179167}},"pass":false,"entropy":4.70560282905094,"entropy_diff":0.000018131476613447717,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":136,"metadata":{"sampler_time":{"secs":0,"nanos":96251},"constraint_time":{"secs":0,"nanos":1178248},"parser_time":{"secs":0,"nanos":554085},"transformer_time":{"secs":0,"nanos":389708543},"trie_time":{"secs":0,"nanos":847505},"total_time":{"secs":0,"nanos":524486083}},"pass":false,"entropy":4.705596008122965,"entropy_diff":6.820927974438007e-6,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,25,25]}
{"generation":137,"metadata":{"sampler_time":{"secs":0,"nanos":78034},"constraint_time":{"secs":0,"nanos":1130297},"parser_time":{"secs":0,"nanos":542372},"transformer_time":{"secs":0,"nanos":394531122},"trie_time":{"secs":0,"nanos":881095},"total_time":{"secs":0,"nanos":532960708}},"pass":false,"entropy":4.705578617653429,"entropy_diff":0.000017390469536415765,"tokenization_error":true,"tokens_after_tokenization_error":24,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 (str.substr col1 1 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,476,25,25]}
{"generation":138,"metadata":{"sampler_time":{"secs":0,"nanos":94502},"constraint_time":{"secs":0,"nanos":1120375},"parser_time":{"secs":0,"nanos":509557},"transformer_time":{"secs":0,"nanos":393793210},"trie_time":{"secs":0,"nanos":862870},"total_time":{"secs":0,"nanos":533307417}},"pass":false,"entropy":4.70555139851779,"entropy_diff":0.00002721913563874523,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col2 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":139,"metadata":{"sampler_time":{"secs":0,"nanos":122960},"constraint_time":{"secs":0,"nanos":2141876},"parser_time":{"secs":0,"nanos":685788},"transformer_time":{"secs":0,"nanos":486895834},"trie_time":{"secs":0,"nanos":901253},"total_time":{"secs":0,"nanos":659294291}},"pass":false,"entropy":4.705476786502345,"entropy_diff":0.00007461201544511908,"tokenization_error":true,"tokens_after_tokenization_error":36,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,25,25]}
{"generation":140,"metadata":{"sampler_time":{"secs":0,"nanos":62373},"constraint_time":{"secs":0,"nanos":1388747},"parser_time":{"secs":0,"nanos":479334},"transformer_time":{"secs":0,"nanos":312682956},"trie_time":{"secs":0,"nanos":1041658},"total_time":{"secs":0,"nanos":423442208}},"pass":false,"entropy":4.705471986375199,"entropy_diff":4.800127146431521e-6,"tokenization_error":true,"tokens_after_tokenization_error":7,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 \",\" \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,216,1002,18,476,476,25,25]}
{"generation":141,"metadata":{"sampler_time":{"secs":0,"nanos":76292},"constraint_time":{"secs":0,"nanos":1074872},"parser_time":{"secs":0,"nanos":425030},"transformer_time":{"secs":0,"nanos":320480126},"trie_time":{"secs":0,"nanos":969163},"total_time":{"secs":0,"nanos":431177292}},"pass":false,"entropy":4.7054476084188925,"entropy_diff":0.000024377956306054216,"tokenization_error":true,"tokens_after_tokenization_error":16,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,216,34,216,33,25,25]}
{"generation":142,"metadata":{"sampler_time":{"secs":0,"nanos":72664},"constraint_time":{"secs":0,"nanos":1070917},"parser_time":{"secs":0,"nanos":564912},"transformer_time":{"secs":0,"nanos":402546458},"trie_time":{"secs":0,"nanos":967379},"total_time":{"secs":0,"nanos":539858417}},"pass":false,"entropy":4.705439078444166,"entropy_diff":8.529974726556588e-6,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col2 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":143,"metadata":{"sampler_time":{"secs":0,"nanos":49001},"constraint_time":{"secs":0,"nanos":949667},"parser_time":{"secs":0,"nanos":460914},"transformer_time":{"secs":0,"nanos":320137500},"trie_time":{"secs":0,"nanos":984870},"total_time":{"secs":0,"nanos":426582625}},"pass":false,"entropy":4.705415079363738,"entropy_diff":0.000023999080427827835,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 0 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,216,32,216,34,25,25]}
{"generation":144,"metadata":{"sampler_time":{"secs":0,"nanos":94912},"constraint_time":{"secs":0,"nanos":1224045},"parser_time":{"secs":0,"nanos":582995},"transformer_time":{"secs":0,"nanos":395631209},"trie_time":{"secs":0,"nanos":988972},"total_time":{"secs":0,"nanos":530506667}},"pass":false,"entropy":4.705410343694779,"entropy_diff":4.735668959199302e-6,"tokenization_error":true,"tokens_after_tokenization_error":9,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,216,33,25,216,33,25,25]}
{"generation":145,"metadata":{"sampler_time":{"secs":0,"nanos":61788},"constraint_time":{"secs":0,"nanos":1161586},"parser_time":{"secs":0,"nanos":530081},"transformer_time":{"secs":0,"nanos":393996373},"trie_time":{"secs":0,"nanos":981459},"total_time":{"secs":0,"nanos":523777167}},"pass":false,"entropy":4.705409207586693,"entropy_diff":1.136108085830756e-6,"tokenization_error":true,"tokens_after_tokenization_error":9,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,14074,18,216,33,25,216,33,25,25]}
{"generation":146,"metadata":{"sampler_time":{"secs":0,"nanos":108924},"constraint_time":{"secs":0,"nanos":1775627},"parser_time":{"secs":0,"nanos":674788},"transformer_time":{"secs":0,"nanos":489435252},"trie_time":{"secs":0,"nanos":1043997},"total_time":{"secs":0,"nanos":650487000}},"pass":false,"entropy":4.705407035749584,"entropy_diff":2.1718371092660504e-6,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,25,216,33,25,25]}
{"generation":147,"metadata":{"sampler_time":{"secs":0,"nanos":122169},"constraint_time":{"secs":0,"nanos":3875213},"parser_time":{"secs":0,"nanos":896542},"transformer_time":{"secs":0,"nanos":489819830},"trie_time":{"secs":0,"nanos":1859964},"total_time":{"secs":0,"nanos":810011166}},"pass":false,"entropy":4.705406564383849,"entropy_diff":4.713657348887068e-7,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,216,33,25,25]}
{"generation":148,"metadata":{"sampler_time":{"secs":0,"nanos":86365},"constraint_time":{"secs":0,"nanos":1462581},"parser_time":{"secs":0,"nanos":702556},"transformer_time":{"secs":0,"nanos":439696459},"trie_time":{"secs":0,"nanos":1050248},"total_time":{"secs":0,"nanos":586702709}},"pass":false,"entropy":4.705406378540674,"entropy_diff":1.8584317462710942e-7,"tokenization_error":true,"tokens_after_tokenization_error":29,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (- (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,25]}
{"generation":149,"metadata":{"sampler_time":{"secs":0,"nanos":88247},"constraint_time":{"secs":0,"nanos":1096455},"parser_time":{"secs":0,"nanos":546876},"transformer_time":{"secs":0,"nanos":402817417},"trie_time":{"secs":0,"nanos":1025489},"total_time":{"secs":0,"nanos":536736333}},"pass":false,"entropy":4.705398430789326,"entropy_diff":7.947751348602594e-6,"tokenization_error":true,"tokens_after_tokenization_error":10,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,216,1002,18,216,33,25,216,33,25,25]}
{"generation":150,"metadata":{"sampler_time":{"secs":0,"nanos":77335},"constraint_time":{"secs":0,"nanos":1066126},"parser_time":{"secs":0,"nanos":468584},"transformer_time":{"secs":0,"nanos":312178248},"trie_time":{"secs":0,"nanos":921201},"total_time":{"secs":0,"nanos":419886292}},"pass":false,"entropy":4.705394428319815,"entropy_diff":4.002469510488993e-6,"tokenization_error":true,"tokens_after_tokenization_error":15,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 1 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,14074,1715,365,1321,30,4103,1321,664,33,216,33,216,33,25,25]}
{"generation":151,"metadata":{"sampler_time":{"secs":0,"nanos":144000},"constraint_time":{"secs":0,"nanos":3745628},"parser_time":{"secs":0,"nanos":788217},"transformer_time":{"secs":0,"nanos":487793835},"trie_time":{"secs":0,"nanos":850330},"total_time":{"secs":0,"nanos":667242875}},"pass":false,"entropy":4.705164214722991,"entropy_diff":0.00023021359682395826,"tokenization_error":true,"tokens_after_tokenization_error":28,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 (str.indexof col1 \" \" 1)) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,476,476,216,33,25,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":152,"metadata":{"sampler_time":{"secs":0,"nanos":106120},"constraint_time":{"secs":0,"nanos":1248083},"parser_time":{"secs":0,"nanos":551331},"transformer_time":{"secs":0,"nanos":402736167},"trie_time":{"secs":0,"nanos":849163},"total_time":{"secs":0,"nanos":553255625}},"pass":false,"entropy":4.701864199820449,"entropy_diff":0.003300014902542614,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 1 2) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":153,"metadata":{"sampler_time":{"secs":0,"nanos":135081},"constraint_time":{"secs":0,"nanos":5917286},"parser_time":{"secs":0,"nanos":705537},"transformer_time":{"secs":0,"nanos":493700412},"trie_time":{"secs":0,"nanos":867044},"total_time":{"secs":0,"nanos":681359250}},"pass":false,"entropy":4.698970924891664,"entropy_diff":0.0028932749287848836,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col1 \",\" 1) 2) \",\") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,216,1002,18,216,33,25,216,34,25,476,1627,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,216,33,25,216,33,25,25]}
{"generation":154,"metadata":{"sampler_time":{"secs":0,"nanos":135914},"constraint_time":{"secs":0,"nanos":11292879},"parser_time":{"secs":0,"nanos":788414},"transformer_time":{"secs":0,"nanos":518664414},"trie_time":{"secs":0,"nanos":888544},"total_time":{"secs":0,"nanos":717743958}},"pass":false,"entropy":4.695823821329039,"entropy_diff":0.003147103562624487,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (- (str.indexof col1 \" \" 1) 1) 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,17481,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":155,"metadata":{"sampler_time":{"secs":0,"nanos":121078},"constraint_time":{"secs":0,"nanos":3783210},"parser_time":{"secs":0,"nanos":663432},"transformer_time":{"secs":0,"nanos":460633874},"trie_time":{"secs":0,"nanos":808710},"total_time":{"secs":0,"nanos":631530459}},"pass":false,"entropy":4.689043388490686,"entropy_diff":0.006780432838353612,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr (str.at col1 0) 1 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,365,1321,30,261,664,33,216,32,25,216,33,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":156,"metadata":{"sampler_time":{"secs":0,"nanos":133797},"constraint_time":{"secs":0,"nanos":1364586},"parser_time":{"secs":0,"nanos":536707},"transformer_time":{"secs":0,"nanos":403868039},"trie_time":{"secs":0,"nanos":1101828},"total_time":{"secs":0,"nanos":557873583}},"pass":false,"entropy":4.681762853636532,"entropy_diff":0.007280534854153586,"tokenization_error":true,"tokens_after_tokenization_error":12,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,216,2283,33,476,476,216,33,25,216,33,25,25]}
{"generation":157,"metadata":{"sampler_time":{"secs":0,"nanos":93625},"constraint_time":{"secs":0,"nanos":1459423},"parser_time":{"secs":0,"nanos":569086},"transformer_time":{"secs":0,"nanos":402803043},"trie_time":{"secs":0,"nanos":1163088},"total_time":{"secs":0,"nanos":551648625}},"pass":false,"entropy":4.68175843595177,"entropy_diff":4.41768476200366e-6,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col2 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,25,25]}
{"generation":158,"metadata":{"sampler_time":{"secs":0,"nanos":77838},"constraint_time":{"secs":0,"nanos":918249},"parser_time":{"secs":0,"nanos":421080},"transformer_time":{"secs":0,"nanos":294907419},"trie_time":{"secs":0,"nanos":1046667},"total_time":{"secs":0,"nanos":403271625}},"pass":false,"entropy":4.681752077040545,"entropy_diff":6.358911225134989e-6,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.replace col1 col2 \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,9630,664,33,664,34,42934,25,25]}
{"generation":159,"metadata":{"sampler_time":{"secs":0,"nanos":118624},"constraint_time":{"secs":0,"nanos":1236213},"parser_time":{"secs":0,"nanos":556755},"transformer_time":{"secs":0,"nanos":405708415},"trie_time":{"secs":0,"nanos":1007699},"total_time":{"secs":0,"nanos":554407500}},"pass":false,"entropy":4.681692570623552,"entropy_diff":0.00005950641699303816,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 0) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,32,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":160,"metadata":{"sampler_time":{"secs":0,"nanos":149001},"constraint_time":{"secs":0,"nanos":3571588},"parser_time":{"secs":0,"nanos":683006},"transformer_time":{"secs":0,"nanos":477169790},"trie_time":{"secs":0,"nanos":1026537},"total_time":{"secs":0,"nanos":656397750}},"pass":false,"entropy":4.68006646364685,"entropy_diff":0.0016261069767020686,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col1 \",\" 1) 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,33,25,216,33,25,476,1627,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":161,"metadata":{"sampler_time":{"secs":0,"nanos":170207},"constraint_time":{"secs":0,"nanos":16662867},"parser_time":{"secs":0,"nanos":908113},"transformer_time":{"secs":0,"nanos":574830827},"trie_time":{"secs":0,"nanos":985844},"total_time":{"secs":0,"nanos":799780584}},"pass":false,"entropy":4.6793568622004065,"entropy_diff":0.0007096014464433864,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof (str.substr col1 0 1) \" \" 1) 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,216,33,25,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":162,"metadata":{"sampler_time":{"secs":0,"nanos":134999},"constraint_time":{"secs":0,"nanos":1208961},"parser_time":{"secs":0,"nanos":529551},"transformer_time":{"secs":0,"nanos":411655085},"trie_time":{"secs":0,"nanos":1054451},"total_time":{"secs":0,"nanos":559820958}},"pass":false,"entropy":4.677478591116709,"entropy_diff":0.0018782710836973138,"tokenization_error":true,"tokens_after_tokenization_error":27,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 1 1) \",\") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,1002,18,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,25]}
{"generation":163,"metadata":{"sampler_time":{"secs":0,"nanos":77289},"constraint_time":{"secs":0,"nanos":1061667},"parser_time":{"secs":0,"nanos":431335},"transformer_time":{"secs":0,"nanos":303484416},"trie_time":{"secs":0,"nanos":1191542},"total_time":{"secs":0,"nanos":415027458}},"pass":false,"entropy":4.676547160362209,"entropy_diff":0.0009314307545000844,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.replace col1 col2 col2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,9630,664,33,664,34,664,34,25,25]}
{"generation":164,"metadata":{"sampler_time":{"secs":0,"nanos":30080},"constraint_time":{"secs":0,"nanos":813039},"parser_time":{"secs":0,"nanos":328751},"transformer_time":{"secs":0,"nanos":236219586},"trie_time":{"secs":0,"nanos":1203460},"total_time":{"secs":0,"nanos":316843791}},"pass":false,"entropy":4.6765433992425125,"entropy_diff":3.7611196965769977e-6,"tokenization_error":true,"tokens_after_tokenization_error":6,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") \",\")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,1627,25,476,1627,25]}
{"generation":165,"metadata":{"sampler_time":{"secs":0,"nanos":117415},"constraint_time":{"secs":0,"nanos":1849959},"parser_time":{"secs":0,"nanos":731119},"transformer_time":{"secs":0,"nanos":454031046},"trie_time":{"secs":0,"nanos":1364161},"total_time":{"secs":0,"nanos":620660833}},"pass":false,"entropy":4.676443575591811,"entropy_diff":0.00009982365070193566,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,33,25,25]}
{"generation":166,"metadata":{"sampler_time":{"secs":0,"nanos":106457},"constraint_time":{"secs":0,"nanos":999749},"parser_time":{"secs":0,"nanos":524827},"transformer_time":{"secs":0,"nanos":398697375},"trie_time":{"secs":0,"nanos":1206878},"total_time":{"secs":0,"nanos":536541166}},"pass":false,"entropy":4.676430521960316,"entropy_diff":0.000013053631494841511,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col2 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,25]}
{"generation":167,"metadata":{"sampler_time":{"secs":0,"nanos":75668},"constraint_time":{"secs":0,"nanos":1118586},"parser_time":{"secs":0,"nanos":486552},"transformer_time":{"secs":0,"nanos":394169211},"trie_time":{"secs":0,"nanos":1216541},"total_time":{"secs":0,"nanos":530805208}},"pass":false,"entropy":4.676411555193797,"entropy_diff":0.000018966766519135092,"tokenization_error":true,"tokens_after_tokenization_error":9,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 (str.indexof col1 \",\" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,216,33,25,216,33,25,25]}
{"generation":168,"metadata":{"sampler_time":{"secs":0,"nanos":72165},"constraint_time":{"secs":0,"nanos":935077},"parser_time":{"secs":0,"nanos":417631},"transformer_time":{"secs":0,"nanos":312086209},"trie_time":{"secs":0,"nanos":1277042},"total_time":{"secs":0,"nanos":418359292}},"pass":false,"entropy":4.676402137957721,"entropy_diff":9.41723607539302e-6,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.substr col1 2 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,4103,1321,664,33,216,34,216,33,25,25]}
{"generation":169,"metadata":{"sampler_time":{"secs":0,"nanos":108498},"constraint_time":{"secs":0,"nanos":1742581},"parser_time":{"secs":0,"nanos":597573},"transformer_time":{"secs":0,"nanos":394969794},"trie_time":{"secs":0,"nanos":1178093},"total_time":{"secs":0,"nanos":532768750}},"pass":false,"entropy":4.676375131036602,"entropy_diff":0.000027006921119010485,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) (str.substr col1 (str.indexof col1 \" \" 1) 1)) \" \")","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,476,476,25]}
{"generation":170,"metadata":{"sampler_time":{"secs":0,"nanos":89084},"constraint_time":{"secs":0,"nanos":1434334},"parser_time":{"secs":0,"nanos":569328},"transformer_time":{"secs":0,"nanos":428057250},"trie_time":{"secs":0,"nanos":1263199},"total_time":{"secs":0,"nanos":573811375}},"pass":false,"entropy":4.6762143458307195,"entropy_diff":0.0001607852058826964,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (+ (str.indexof col1 \" \" 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,4103,1321,664,33,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,25]}
{"generation":171,"metadata":{"sampler_time":{"secs":0,"nanos":158712},"constraint_time":{"secs":0,"nanos":5453710},"parser_time":{"secs":0,"nanos":843661},"transformer_time":{"secs":0,"nanos":619105336},"trie_time":{"secs":0,"nanos":1361005},"total_time":{"secs":0,"nanos":827027417}},"pass":false,"entropy":4.676204860002268,"entropy_diff":9.485828451616385e-6,"tokenization_error":true,"tokens_after_tokenization_error":51,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":172,"metadata":{"sampler_time":{"secs":0,"nanos":104747},"constraint_time":{"secs":0,"nanos":1460874},"parser_time":{"secs":0,"nanos":672376},"transformer_time":{"secs":0,"nanos":461028955},"trie_time":{"secs":0,"nanos":1397676},"total_time":{"secs":0,"nanos":612398833}},"pass":false,"entropy":4.6762047268148725,"entropy_diff":1.33187395334744e-7,"tokenization_error":true,"tokens_after_tokenization_error":32,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,32,25,216,33,25,216,33,25,25]}
{"generation":173,"metadata":{"sampler_time":{"secs":0,"nanos":69040},"constraint_time":{"secs":0,"nanos":1085374},"parser_time":{"secs":0,"nanos":580877},"transformer_time":{"secs":0,"nanos":411112497},"trie_time":{"secs":0,"nanos":1329001},"total_time":{"secs":0,"nanos":546553084}},"pass":false,"entropy":4.6762044606381306,"entropy_diff":2.66176741980928e-7,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,265,308,34,216,33,25,216,33,25,25]}
{"generation":174,"metadata":{"sampler_time":{"secs":0,"nanos":121959},"constraint_time":{"secs":0,"nanos":3614877},"parser_time":{"secs":0,"nanos":716790},"transformer_time":{"secs":0,"nanos":477062124},"trie_time":{"secs":0,"nanos":1333456},"total_time":{"secs":0,"nanos":630045625}},"pass":false,"entropy":4.676203846122771,"entropy_diff":6.145153594871999e-7,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,33,25,25]}
{"generation":175,"metadata":{"sampler_time":{"secs":0,"nanos":120753},"constraint_time":{"secs":0,"nanos":1292457},"parser_time":{"secs":0,"nanos":702116},"transformer_time":{"secs":0,"nanos":469295751},"trie_time":{"secs":0,"nanos":1298792},"total_time":{"secs":0,"nanos":624420125}},"pass":false,"entropy":4.676203783474506,"entropy_diff":6.264826524216005e-8,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,25]}
{"generation":176,"metadata":{"sampler_time":{"secs":0,"nanos":96543},"constraint_time":{"secs":0,"nanos":1139456},"parser_time":{"secs":0,"nanos":623505},"transformer_time":{"secs":0,"nanos":377739455},"trie_time":{"secs":0,"nanos":1147137},"total_time":{"secs":0,"nanos":504709333}},"pass":false,"entropy":4.676203416298525,"entropy_diff":3.67175981175194e-7,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \",\") (str.replace col1 (str.substr col1 1 1) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,25]}
{"generation":177,"metadata":{"sampler_time":{"secs":0,"nanos":200999},"constraint_time":{"secs":0,"nanos":20578671},"parser_time":{"secs":0,"nanos":1301000},"transformer_time":{"secs":0,"nanos":728491627},"trie_time":{"secs":0,"nanos":1067910},"total_time":{"secs":0,"nanos":998109709}},"pass":false,"entropy":4.67613030495885,"entropy_diff":0.00007311133967480288,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) 1) \",\") (str.++ (str.substr col1 (str.indexof col1 (str.substr col2 1 1) 1) 1) \",\"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,216,33,25,216,1002,18,25,365,1321,30,11444,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,216,33,25,216,33,25,216,1002,18,25,25]}
{"generation":178,"metadata":{"sampler_time":{"secs":0,"nanos":144456},"constraint_time":{"secs":0,"nanos":1308288},"parser_time":{"secs":0,"nanos":554501},"transformer_time":{"secs":0,"nanos":427345417},"trie_time":{"secs":0,"nanos":963800},"total_time":{"secs":0,"nanos":570615959}},"pass":false,"entropy":4.675547164321188,"entropy_diff":0.0005831406376621828,"tokenization_error":true,"tokens_after_tokenization_error":36,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,265,308,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,265,308,33,365,1321,30,3888,1714,265,308,33,476,476,216,33,25,216,33,25,25]}
{"generation":179,"metadata":{"sampler_time":{"secs":0,"nanos":57170},"constraint_time":{"secs":0,"nanos":342751},"parser_time":{"secs":0,"nanos":437004},"transformer_time":{"secs":0,"nanos":320019544},"trie_time":{"secs":0,"nanos":770122},"total_time":{"secs":0,"nanos":426714291}},"pass":false,"entropy":4.66176267494761,"entropy_diff":0.013784489373577458,"tokenization_error":true,"tokens_after_tokenization_error":2,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.substr col1 (str.indexof col1 col2 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,33,25,216,33,25,25]}
{"generation":180,"metadata":{"sampler_time":{"secs":0,"nanos":60247},"constraint_time":{"secs":0,"nanos":340119},"parser_time":{"secs":0,"nanos":393133},"transformer_time":{"secs":0,"nanos":286289710},"trie_time":{"secs":0,"nanos":785167},"total_time":{"secs":0,"nanos":378756792}},"pass":false,"entropy":4.659634873012492,"entropy_diff":0.002127801935118079,"tokenization_error":true,"tokens_after_tokenization_error":3,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ col1 col2) (str.replace col1 (str.at col2 0) \" \"))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,664,33,664,34,25,365,1321,30,9630,664,33,365,1321,30,261,664,34,216,32,25,476,476,25,25]}
{"generation":181,"metadata":{"sampler_time":{"secs":0,"nanos":107046},"constraint_time":{"secs":0,"nanos":1699165},"parser_time":{"secs":0,"nanos":729873},"transformer_time":{"secs":0,"nanos":485043378},"trie_time":{"secs":0,"nanos":1467085},"total_time":{"secs":0,"nanos":649520791}},"pass":false,"entropy":4.659144587099799,"entropy_diff":0.0004902859126927339,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,216,33,25,25]}
{"generation":182,"metadata":{"sampler_time":{"secs":0,"nanos":94669},"constraint_time":{"secs":0,"nanos":1289543},"parser_time":{"secs":0,"nanos":625547},"transformer_time":{"secs":0,"nanos":478527711},"trie_time":{"secs":0,"nanos":1438573},"total_time":{"secs":0,"nanos":645864250}},"pass":false,"entropy":4.6591444796892665,"entropy_diff":1.0741053291241087e-7,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col1 (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,25]}
{"generation":183,"metadata":{"sampler_time":{"secs":0,"nanos":100377},"constraint_time":{"secs":0,"nanos":1094919},"parser_time":{"secs":0,"nanos":568881},"transformer_time":{"secs":0,"nanos":402660959},"trie_time":{"secs":0,"nanos":1624673},"total_time":{"secs":0,"nanos":540426250}},"pass":false,"entropy":4.659144059987964,"entropy_diff":4.197013021567386e-7,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,216,33,25,25]}
{"generation":184,"metadata":{"sampler_time":{"secs":0,"nanos":150289},"constraint_time":{"secs":0,"nanos":5604081},"parser_time":{"secs":0,"nanos":907996},"transformer_time":{"secs":0,"nanos":554508041},"trie_time":{"secs":0,"nanos":1527551},"total_time":{"secs":0,"nanos":773893584}},"pass":false,"entropy":4.659143981430966,"entropy_diff":7.855699823977602e-8,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,476,476,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":185,"metadata":{"sampler_time":{"secs":0,"nanos":89373},"constraint_time":{"secs":0,"nanos":1410379},"parser_time":{"secs":0,"nanos":597992},"transformer_time":{"secs":0,"nanos":463698754},"trie_time":{"secs":0,"nanos":1486958},"total_time":{"secs":0,"nanos":628252916}},"pass":false,"entropy":4.659143909006391,"entropy_diff":7.24245747818486e-8,"tokenization_error":true,"tokens_after_tokenization_error":32,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,365,1321,30,1141,30,591,664,33,25,25,25]}
{"generation":186,"metadata":{"sampler_time":{"secs":0,"nanos":153954},"constraint_time":{"secs":0,"nanos":1756163},"parser_time":{"secs":0,"nanos":818955},"transformer_time":{"secs":0,"nanos":552757001},"trie_time":{"secs":0,"nanos":1513045},"total_time":{"secs":0,"nanos":761843291}},"pass":false,"entropy":4.659143861925471,"entropy_diff":4.70809204955458e-8,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (str.indexof col1 \" \" (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,25,25]}
{"generation":187,"metadata":{"sampler_time":{"secs":0,"nanos":99626},"constraint_time":{"secs":0,"nanos":4136042},"parser_time":{"secs":0,"nanos":758964},"transformer_time":{"secs":0,"nanos":485556419},"trie_time":{"secs":0,"nanos":1539749},"total_time":{"secs":0,"nanos":659258584}},"pass":false,"entropy":4.659143741902926,"entropy_diff":1.2002254479170915e-7,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,216,1002,18,476,476,25,216,33,25,216,33,25,25]}
{"generation":188,"metadata":{"sampler_time":{"secs":0,"nanos":108626},"constraint_time":{"secs":0,"nanos":1792918},"parser_time":{"secs":0,"nanos":760216},"transformer_time":{"secs":0,"nanos":486097456},"trie_time":{"secs":0,"nanos":1566675},"total_time":{"secs":0,"nanos":662148583}},"pass":false,"entropy":4.659143694777627,"entropy_diff":4.7125299218464534e-8,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,216,33,25,25]}
{"generation":189,"metadata":{"sampler_time":{"secs":0,"nanos":166127},"constraint_time":{"secs":0,"nanos":1683624},"parser_time":{"secs":0,"nanos":749704},"transformer_time":{"secs":0,"nanos":553857249},"trie_time":{"secs":0,"nanos":1591790},"total_time":{"secs":0,"nanos":761090125}},"pass":false,"entropy":4.659143608153825,"entropy_diff":8.66238014651799e-8,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \",\" (str.indexof col1 \",\" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,365,1321,30,3888,1714,664,33,476,1627,365,1321,30,3888,1714,664,33,476,1627,216,33,7754,216,33,25,25]}
{"generation":190,"metadata":{"sampler_time":{"secs":0,"nanos":103709},"constraint_time":{"secs":0,"nanos":1551421},"parser_time":{"secs":0,"nanos":711461},"transformer_time":{"secs":0,"nanos":472701627},"trie_time":{"secs":0,"nanos":1649915},"total_time":{"secs":0,"nanos":641437250}},"pass":false,"entropy":4.659143519252169,"entropy_diff":8.890165670294436e-8,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,33,25,25]}
{"generation":191,"metadata":{"sampler_time":{"secs":0,"nanos":99504},"constraint_time":{"secs":0,"nanos":1773620},"parser_time":{"secs":0,"nanos":792118},"transformer_time":{"secs":0,"nanos":477253916},"trie_time":{"secs":0,"nanos":1613544},"total_time":{"secs":0,"nanos":645532750}},"pass":false,"entropy":4.659143506475056,"entropy_diff":1.2777112701201077e-8,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,33,25,25]}
{"generation":192,"metadata":{"sampler_time":{"secs":0,"nanos":114912},"constraint_time":{"secs":0,"nanos":4158546},"parser_time":{"secs":0,"nanos":788090},"transformer_time":{"secs":0,"nanos":474844666},"trie_time":{"secs":0,"nanos":1670328},"total_time":{"secs":0,"nanos":641361917}},"pass":false,"entropy":4.659143502880562,"entropy_diff":3.594493591663195e-9,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,33,25,25]}
{"generation":193,"metadata":{"sampler_time":{"secs":0,"nanos":126129},"constraint_time":{"secs":0,"nanos":5133750},"parser_time":{"secs":0,"nanos":853869},"transformer_time":{"secs":0,"nanos":527751249},"trie_time":{"secs":0,"nanos":1621962},"total_time":{"secs":0,"nanos":705570916}},"pass":false,"entropy":4.659143489551829,"entropy_diff":1.3328733672324233e-8,"tokenization_error":true,"tokens_after_tokenization_error":40,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,20361,216,33,25,216,33,25,25]}
{"generation":194,"metadata":{"sampler_time":{"secs":0,"nanos":88384},"constraint_time":{"secs":0,"nanos":2048418},"parser_time":{"secs":0,"nanos":657132},"transformer_time":{"secs":0,"nanos":459977541},"trie_time":{"secs":0,"nanos":1651796},"total_time":{"secs":0,"nanos":610734458}},"pass":false,"entropy":4.65914348075312,"entropy_diff":8.798708428514601e-9,"tokenization_error":true,"tokens_after_tokenization_error":32,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,33,25,216,33,25,216,33,25,25]}
{"generation":195,"metadata":{"sampler_time":{"secs":0,"nanos":112669},"constraint_time":{"secs":0,"nanos":1661751},"parser_time":{"secs":0,"nanos":752366},"transformer_time":{"secs":0,"nanos":477440039},"trie_time":{"secs":0,"nanos":1651917},"total_time":{"secs":0,"nanos":637409875}},"pass":false,"entropy":4.659143454005882,"entropy_diff":2.6747238202062817e-8,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,216,1002,1715,216,33,25,216,33,25,25]}
{"generation":196,"metadata":{"sampler_time":{"secs":0,"nanos":68495},"constraint_time":{"secs":0,"nanos":1056127},"parser_time":{"secs":0,"nanos":590180},"transformer_time":{"secs":0,"nanos":402998168},"trie_time":{"secs":0,"nanos":1663415},"total_time":{"secs":0,"nanos":535331708}},"pass":false,"entropy":4.659143449679789,"entropy_diff":4.3260932613975456e-9,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,32,25,216,33,25,25]}
{"generation":197,"metadata":{"sampler_time":{"secs":0,"nanos":111294},"constraint_time":{"secs":0,"nanos":1587034},"parser_time":{"secs":0,"nanos":698349},"transformer_time":{"secs":0,"nanos":480028997},"trie_time":{"secs":0,"nanos":1660194},"total_time":{"secs":0,"nanos":636114959}},"pass":false,"entropy":4.659143401275682,"entropy_diff":4.840410650075455e-8,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 (str.replace col2 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,476,476,476,476,25,216,33,25,216,33,25,25]}
{"generation":198,"metadata":{"sampler_time":{"secs":0,"nanos":109252},"constraint_time":{"secs":0,"nanos":2662958},"parser_time":{"secs":0,"nanos":737259},"transformer_time":{"secs":0,"nanos":486494246},"trie_time":{"secs":0,"nanos":1710788},"total_time":{"secs":0,"nanos":647407500}},"pass":false,"entropy":4.659143159624068,"entropy_diff":2.41651614274474e-7,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,216,33,25,216,33,25,25]}
{"generation":199,"metadata":{"sampler_time":{"secs":0,"nanos":90545},"constraint_time":{"secs":0,"nanos":3445497},"parser_time":{"secs":0,"nanos":731047},"transformer_time":{"secs":0,"nanos":468804498},"trie_time":{"secs":0,"nanos":1918822},"total_time":{"secs":0,"nanos":629012000}},"pass":false,"entropy":4.659143148069408,"entropy_diff":1.1554660339641032e-8,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,33,25,25]}
{"generation":200,"metadata":{"sampler_time":{"secs":0,"nanos":109291},"constraint_time":{"secs":0,"nanos":2439458},"parser_time":{"secs":0,"nanos":898177},"transformer_time":{"secs":0,"nanos":538459583},"trie_time":{"secs":0,"nanos":1736504},"total_time":{"secs":0,"nanos":735577792}},"pass":false,"entropy":4.659143143148443,"entropy_diff":4.92096496884642e-9,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.at col1 0)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,261,664,33,216,32,25,25,216,33,25,216,33,25,25]}
{"generation":201,"metadata":{"sampler_time":{"secs":0,"nanos":107704},"constraint_time":{"secs":0,"nanos":1848124},"parser_time":{"secs":0,"nanos":693493},"transformer_time":{"secs":0,"nanos":484232620},"trie_time":{"secs":0,"nanos":1752207},"total_time":{"secs":0,"nanos":656419750}},"pass":false,"entropy":4.6591431398798315,"entropy_diff":3.268611159512602e-9,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,33,25,216,33,25,25]}
{"generation":202,"metadata":{"sampler_time":{"secs":0,"nanos":119665},"constraint_time":{"secs":0,"nanos":7181163},"parser_time":{"secs":0,"nanos":901881},"transformer_time":{"secs":0,"nanos":553367999},"trie_time":{"secs":0,"nanos":1865177},"total_time":{"secs":0,"nanos":756408250}},"pass":false,"entropy":4.659143131379155,"entropy_diff":8.500676607070545e-9,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":203,"metadata":{"sampler_time":{"secs":0,"nanos":86668},"constraint_time":{"secs":0,"nanos":1544783},"parser_time":{"secs":0,"nanos":731746},"transformer_time":{"secs":0,"nanos":477718919},"trie_time":{"secs":0,"nanos":1791330},"total_time":{"secs":0,"nanos":649049584}},"pass":false,"entropy":4.659143125201351,"entropy_diff":6.177804046103574e-9,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,33,25,25]}
{"generation":204,"metadata":{"sampler_time":{"secs":0,"nanos":115036},"constraint_time":{"secs":0,"nanos":1483796},"parser_time":{"secs":0,"nanos":742120},"transformer_time":{"secs":0,"nanos":477434166},"trie_time":{"secs":0,"nanos":1803255},"total_time":{"secs":0,"nanos":648670333}},"pass":false,"entropy":4.659143124647911,"entropy_diff":5.534399605267026e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,476,25,216,33,25,216,33,25,25]}
{"generation":205,"metadata":{"sampler_time":{"secs":0,"nanos":139919},"constraint_time":{"secs":0,"nanos":7121797},"parser_time":{"secs":0,"nanos":889497},"transformer_time":{"secs":0,"nanos":577267915},"trie_time":{"secs":0,"nanos":1813803},"total_time":{"secs":0,"nanos":786714375}},"pass":false,"entropy":4.6591431234520355,"entropy_diff":1.1958753987073578e-9,"tokenization_error":true,"tokens_after_tokenization_error":46,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \",\" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,216,1002,18,216,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":206,"metadata":{"sampler_time":{"secs":0,"nanos":92623},"constraint_time":{"secs":0,"nanos":1515458},"parser_time":{"secs":0,"nanos":737630},"transformer_time":{"secs":0,"nanos":462356708},"trie_time":{"secs":0,"nanos":1831377},"total_time":{"secs":0,"nanos":629063167}},"pass":false,"entropy":4.659143118649581,"entropy_diff":4.802454434127412e-9,"tokenization_error":true,"tokens_after_tokenization_error":32,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,476,20361,216,33,25,216,33,25,25]}
{"generation":207,"metadata":{"sampler_time":{"secs":0,"nanos":81837},"constraint_time":{"secs":0,"nanos":1691541},"parser_time":{"secs":0,"nanos":718838},"transformer_time":{"secs":0,"nanos":486367541},"trie_time":{"secs":0,"nanos":1861285},"total_time":{"secs":0,"nanos":662091500}},"pass":false,"entropy":4.659143113726589,"entropy_diff":4.922991792000175e-9,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,33,25,216,33,25,25]}
{"generation":208,"metadata":{"sampler_time":{"secs":0,"nanos":139665},"constraint_time":{"secs":0,"nanos":1993417},"parser_time":{"secs":0,"nanos":734538},"transformer_time":{"secs":0,"nanos":489488833},"trie_time":{"secs":0,"nanos":1886087},"total_time":{"secs":0,"nanos":662578000}},"pass":false,"entropy":4.659143110242324,"entropy_diff":3.484265320707891e-9,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":209,"metadata":{"sampler_time":{"secs":0,"nanos":146622},"constraint_time":{"secs":0,"nanos":2099301},"parser_time":{"secs":0,"nanos":907745},"transformer_time":{"secs":0,"nanos":575176920},"trie_time":{"secs":0,"nanos":1811508},"total_time":{"secs":0,"nanos":899588250}},"pass":false,"entropy":4.659143109117126,"entropy_diff":1.1251977127813007e-9,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" (+ (str.indexof col1 \" \" 1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,25,25,25]}
{"generation":210,"metadata":{"sampler_time":{"secs":0,"nanos":189498},"constraint_time":{"secs":0,"nanos":6176921},"parser_time":{"secs":0,"nanos":1261117},"transformer_time":{"secs":0,"nanos":755868919},"trie_time":{"secs":0,"nanos":2336575},"total_time":{"secs":1,"nanos":46170333}},"pass":false,"entropy":4.659143075389895,"entropy_diff":3.372723167416325e-8,"tokenization_error":true,"tokens_after_tokenization_error":67,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":211,"metadata":{"sampler_time":{"secs":0,"nanos":141872},"constraint_time":{"secs":0,"nanos":2509205},"parser_time":{"secs":0,"nanos":908661},"transformer_time":{"secs":0,"nanos":536626874},"trie_time":{"secs":0,"nanos":1905751},"total_time":{"secs":0,"nanos":732725167}},"pass":false,"entropy":4.659143074759499,"entropy_diff":6.303952915232003e-10,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 (str.indexof col1 \" \" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,216,33,25,25]}
{"generation":212,"metadata":{"sampler_time":{"secs":0,"nanos":56332},"constraint_time":{"secs":0,"nanos":1051206},"parser_time":{"secs":0,"nanos":555285},"transformer_time":{"secs":0,"nanos":397597374},"trie_time":{"secs":0,"nanos":1922406},"total_time":{"secs":0,"nanos":536178708}},"pass":false,"entropy":4.6591430512701315,"entropy_diff":2.348936778417965e-8,"tokenization_error":true,"tokens_after_tokenization_error":24,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,216,32,25,216,33,25,25]}
{"generation":213,"metadata":{"sampler_time":{"secs":0,"nanos":105538},"constraint_time":{"secs":0,"nanos":1580496},"parser_time":{"secs":0,"nanos":714202},"transformer_time":{"secs":0,"nanos":469449376},"trie_time":{"secs":0,"nanos":1977294},"total_time":{"secs":0,"nanos":635064500}},"pass":false,"entropy":4.659143019462047,"entropy_diff":3.180808416658465e-8,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,1627,476,20361,216,33,25,216,33,25,25]}
{"generation":214,"metadata":{"sampler_time":{"secs":0,"nanos":117543},"constraint_time":{"secs":0,"nanos":5163332},"parser_time":{"secs":0,"nanos":860875},"transformer_time":{"secs":0,"nanos":614638336},"trie_time":{"secs":0,"nanos":2012876},"total_time":{"secs":0,"nanos":830882833}},"pass":false,"entropy":4.659143017731375,"entropy_diff":1.7306724942045548e-9,"tokenization_error":true,"tokens_after_tokenization_error":51,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col2 \" \" 1) 1) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":215,"metadata":{"sampler_time":{"secs":0,"nanos":122587},"constraint_time":{"secs":0,"nanos":1164329},"parser_time":{"secs":0,"nanos":709157},"transformer_time":{"secs":0,"nanos":478266620},"trie_time":{"secs":0,"nanos":1940085},"total_time":{"secs":0,"nanos":646517583}},"pass":false,"entropy":4.6591430161406935,"entropy_diff":1.5906813644050999e-9,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,14074,18,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,25]}
{"generation":216,"metadata":{"sampler_time":{"secs":0,"nanos":99790},"constraint_time":{"secs":0,"nanos":2709373},"parser_time":{"secs":0,"nanos":710331},"transformer_time":{"secs":0,"nanos":480482291},"trie_time":{"secs":0,"nanos":2035119},"total_time":{"secs":0,"nanos":646655209}},"pass":false,"entropy":4.659142939436674,"entropy_diff":7.670401913628666e-8,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,216,33,25,25]}
{"generation":217,"metadata":{"sampler_time":{"secs":0,"nanos":119084},"constraint_time":{"secs":0,"nanos":1766496},"parser_time":{"secs":0,"nanos":697297},"transformer_time":{"secs":0,"nanos":488294289},"trie_time":{"secs":0,"nanos":2006375},"total_time":{"secs":0,"nanos":653001208}},"pass":false,"entropy":4.659142939001063,"entropy_diff":4.356115468340249e-10,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 2 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,34,216,33,25,216,33,25,216,33,25,25]}
{"generation":218,"metadata":{"sampler_time":{"secs":0,"nanos":98629},"constraint_time":{"secs":0,"nanos":1570414},"parser_time":{"secs":0,"nanos":708424},"transformer_time":{"secs":0,"nanos":468622213},"trie_time":{"secs":0,"nanos":2070333},"total_time":{"secs":0,"nanos":627133000}},"pass":false,"entropy":4.659142934933212,"entropy_diff":4.067850944977636e-9,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,33,25,216,33,25,25]}
{"generation":219,"metadata":{"sampler_time":{"secs":0,"nanos":101333},"constraint_time":{"secs":0,"nanos":3723962},"parser_time":{"secs":0,"nanos":743328},"transformer_time":{"secs":0,"nanos":478319414},"trie_time":{"secs":0,"nanos":2015624},"total_time":{"secs":0,"nanos":647726292}},"pass":false,"entropy":4.659142934116489,"entropy_diff":8.167226894784108e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,216,1002,1715,216,33,25,216,33,25,25]}
{"generation":220,"metadata":{"sampler_time":{"secs":0,"nanos":70046},"constraint_time":{"secs":0,"nanos":1711665},"parser_time":{"secs":0,"nanos":762588},"transformer_time":{"secs":0,"nanos":477571874},"trie_time":{"secs":0,"nanos":2337535},"total_time":{"secs":0,"nanos":654381250}},"pass":false,"entropy":4.659142933075975,"entropy_diff":1.0405143413549922e-9,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,216,18,476,20361,216,33,25,216,33,25,25]}
{"generation":221,"metadata":{"sampler_time":{"secs":0,"nanos":112461},"constraint_time":{"secs":0,"nanos":6620333},"parser_time":{"secs":0,"nanos":917502},"transformer_time":{"secs":0,"nanos":547062793},"trie_time":{"secs":0,"nanos":2808451},"total_time":{"secs":0,"nanos":763252625}},"pass":false,"entropy":4.659142931714128,"entropy_diff":1.3618466354614611e-9,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,216,1002,18,476,476,25,476,20361,216,33,25,216,33,25,25]}
{"generation":222,"metadata":{"sampler_time":{"secs":0,"nanos":71082},"constraint_time":{"secs":0,"nanos":1045418},"parser_time":{"secs":0,"nanos":583705},"transformer_time":{"secs":0,"nanos":403710623},"trie_time":{"secs":0,"nanos":2087787},"total_time":{"secs":0,"nanos":546395250}},"pass":false,"entropy":4.659142930738614,"entropy_diff":9.755138918876582e-10,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,34,25,25]}
{"generation":223,"metadata":{"sampler_time":{"secs":0,"nanos":116960},"constraint_time":{"secs":0,"nanos":1801878},"parser_time":{"secs":0,"nanos":741037},"transformer_time":{"secs":0,"nanos":486896082},"trie_time":{"secs":0,"nanos":2154532},"total_time":{"secs":0,"nanos":661166000}},"pass":false,"entropy":4.65914290871488,"entropy_diff":2.202373394766255e-8,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,216,33,25,216,33,25,25]}
{"generation":224,"metadata":{"sampler_time":{"secs":0,"nanos":97670},"constraint_time":{"secs":0,"nanos":1657960},"parser_time":{"secs":0,"nanos":712541},"transformer_time":{"secs":0,"nanos":481635792},"trie_time":{"secs":0,"nanos":2244000},"total_time":{"secs":0,"nanos":653171541}},"pass":false,"entropy":4.65914290771772,"entropy_diff":9.971605763325897e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,33,25,25]}
{"generation":225,"metadata":{"sampler_time":{"secs":0,"nanos":102291},"constraint_time":{"secs":0,"nanos":1634579},"parser_time":{"secs":0,"nanos":769583},"transformer_time":{"secs":0,"nanos":477703579},"trie_time":{"secs":0,"nanos":2202577},"total_time":{"secs":0,"nanos":650432500}},"pass":false,"entropy":4.6591429075637185,"entropy_diff":1.5400125619180471e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,32,25,216,33,25,25]}
{"generation":226,"metadata":{"sampler_time":{"secs":0,"nanos":117545},"constraint_time":{"secs":0,"nanos":6995873},"parser_time":{"secs":0,"nanos":890786},"transformer_time":{"secs":0,"nanos":570446334},"trie_time":{"secs":0,"nanos":2248839},"total_time":{"secs":0,"nanos":783305042}},"pass":false,"entropy":4.6591429074525985,"entropy_diff":1.1112000208868267e-10,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof \" \" \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,476,476,476,476,216,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":227,"metadata":{"sampler_time":{"secs":0,"nanos":147255},"constraint_time":{"secs":0,"nanos":1824579},"parser_time":{"secs":0,"nanos":1012211},"transformer_time":{"secs":0,"nanos":620146325},"trie_time":{"secs":0,"nanos":2260873},"total_time":{"secs":0,"nanos":852859416}},"pass":false,"entropy":4.659142905437073,"entropy_diff":2.0155255242571e-9,"tokenization_error":true,"tokens_after_tokenization_error":51,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,25,25]}
{"generation":228,"metadata":{"sampler_time":{"secs":0,"nanos":144044},"constraint_time":{"secs":0,"nanos":5388537},"parser_time":{"secs":0,"nanos":921993},"transformer_time":{"secs":0,"nanos":562236965},"trie_time":{"secs":0,"nanos":2363038},"total_time":{"secs":0,"nanos":768260584}},"pass":false,"entropy":4.659142905323322,"entropy_diff":1.1375078656783444e-10,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":229,"metadata":{"sampler_time":{"secs":0,"nanos":146790},"constraint_time":{"secs":0,"nanos":2028868},"parser_time":{"secs":0,"nanos":941549},"transformer_time":{"secs":0,"nanos":632290707},"trie_time":{"secs":0,"nanos":2215244},"total_time":{"secs":0,"nanos":866906125}},"pass":false,"entropy":4.659142905112749,"entropy_diff":2.105728924561845e-10,"tokenization_error":true,"tokens_after_tokenization_error":53,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,25,25]}
{"generation":230,"metadata":{"sampler_time":{"secs":0,"nanos":76543},"constraint_time":{"secs":0,"nanos":3018331},"parser_time":{"secs":0,"nanos":764874},"transformer_time":{"secs":0,"nanos":469990664},"trie_time":{"secs":0,"nanos":2556214},"total_time":{"secs":0,"nanos":645085292}},"pass":false,"entropy":4.659142905023566,"entropy_diff":8.918288330050927e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,216,33,25,25]}
{"generation":231,"metadata":{"sampler_time":{"secs":0,"nanos":122327},"constraint_time":{"secs":0,"nanos":6131584},"parser_time":{"secs":0,"nanos":912577},"transformer_time":{"secs":0,"nanos":552239043},"trie_time":{"secs":0,"nanos":2325341},"total_time":{"secs":0,"nanos":761378834}},"pass":false,"entropy":4.659142904928638,"entropy_diff":9.492850949754938e-11,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":232,"metadata":{"sampler_time":{"secs":0,"nanos":198079},"constraint_time":{"secs":0,"nanos":5214502},"parser_time":{"secs":0,"nanos":1180324},"transformer_time":{"secs":0,"nanos":754495834},"trie_time":{"secs":0,"nanos":2322326},"total_time":{"secs":1,"nanos":36687791}},"pass":false,"entropy":4.659142904329521,"entropy_diff":5.991172002950407e-10,"tokenization_error":true,"tokens_after_tokenization_error":67,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 (str.replace col2 col1 col2) (str.indexof col2 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":233,"metadata":{"sampler_time":{"secs":0,"nanos":139617},"constraint_time":{"secs":0,"nanos":2247165},"parser_time":{"secs":0,"nanos":867117},"transformer_time":{"secs":0,"nanos":552861918},"trie_time":{"secs":0,"nanos":2362590},"total_time":{"secs":0,"nanos":752915209}},"pass":false,"entropy":4.659142904193932,"entropy_diff":1.3558842937300142e-10,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,25,25,216,33,25,216,33,25,25]}
{"generation":234,"metadata":{"sampler_time":{"secs":0,"nanos":103461},"constraint_time":{"secs":0,"nanos":1522624},"parser_time":{"secs":0,"nanos":742866},"transformer_time":{"secs":0,"nanos":468764751},"trie_time":{"secs":0,"nanos":2397136},"total_time":{"secs":0,"nanos":632676416}},"pass":false,"entropy":4.659142903995243,"entropy_diff":1.9868906520059681e-10,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,32,25,216,33,25,25]}
{"generation":235,"metadata":{"sampler_time":{"secs":0,"nanos":70624},"constraint_time":{"secs":0,"nanos":1572961},"parser_time":{"secs":0,"nanos":764741},"transformer_time":{"secs":0,"nanos":469291041},"trie_time":{"secs":0,"nanos":2420874},"total_time":{"secs":0,"nanos":636980959}},"pass":false,"entropy":4.659142903770854,"entropy_diff":2.2438939595303964e-10,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,32,25,216,33,25,25]}
{"generation":236,"metadata":{"sampler_time":{"secs":0,"nanos":106296},"constraint_time":{"secs":0,"nanos":1588164},"parser_time":{"secs":0,"nanos":738303},"transformer_time":{"secs":0,"nanos":474099041},"trie_time":{"secs":0,"nanos":2426905},"total_time":{"secs":0,"nanos":632602250}},"pass":false,"entropy":4.659142903663087,"entropy_diff":1.077671285543147e-10,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,216,33,25,25]}
{"generation":237,"metadata":{"sampler_time":{"secs":0,"nanos":126708},"constraint_time":{"secs":0,"nanos":4820125},"parser_time":{"secs":0,"nanos":884798},"transformer_time":{"secs":0,"nanos":569247787},"trie_time":{"secs":0,"nanos":2312630},"total_time":{"secs":0,"nanos":757541209}},"pass":false,"entropy":4.659142903480981,"entropy_diff":1.8210588592637578e-10,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 (str.indexof col2 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":238,"metadata":{"sampler_time":{"secs":0,"nanos":94629},"constraint_time":{"secs":0,"nanos":2053172},"parser_time":{"secs":0,"nanos":732531},"transformer_time":{"secs":0,"nanos":477633038},"trie_time":{"secs":0,"nanos":2416662},"total_time":{"secs":0,"nanos":633956500}},"pass":false,"entropy":4.659142898159799,"entropy_diff":5.321181717476975e-9,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,34,25,25]}
{"generation":239,"metadata":{"sampler_time":{"secs":0,"nanos":190801},"constraint_time":{"secs":0,"nanos":4570374},"parser_time":{"secs":0,"nanos":1280507},"transformer_time":{"secs":0,"nanos":737989789},"trie_time":{"secs":0,"nanos":2404039},"total_time":{"secs":0,"nanos":990088500}},"pass":false,"entropy":4.65914289813039,"entropy_diff":2.9409363833110547e-11,"tokenization_error":true,"tokens_after_tokenization_error":65,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":240,"metadata":{"sampler_time":{"secs":0,"nanos":91207},"constraint_time":{"secs":0,"nanos":1531628},"parser_time":{"secs":0,"nanos":764872},"transformer_time":{"secs":0,"nanos":480816961},"trie_time":{"secs":0,"nanos":2480051},"total_time":{"secs":0,"nanos":638895959}},"pass":false,"entropy":4.659142898063147,"entropy_diff":6.724309997707678e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,476,25,216,33,25,216,33,25,25]}
{"generation":241,"metadata":{"sampler_time":{"secs":0,"nanos":100957},"constraint_time":{"secs":0,"nanos":1583166},"parser_time":{"secs":0,"nanos":724556},"transformer_time":{"secs":0,"nanos":469894669},"trie_time":{"secs":0,"nanos":2404504},"total_time":{"secs":0,"nanos":645139333}},"pass":false,"entropy":4.6591428975092715,"entropy_diff":5.538751679523557e-10,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,25,216,33,25,25]}
{"generation":242,"metadata":{"sampler_time":{"secs":0,"nanos":146540},"constraint_time":{"secs":0,"nanos":5115913},"parser_time":{"secs":0,"nanos":942663},"transformer_time":{"secs":0,"nanos":545544788},"trie_time":{"secs":0,"nanos":2444164},"total_time":{"secs":0,"nanos":746555500}},"pass":false,"entropy":4.659142897182972,"entropy_diff":3.262998760078517e-10,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace \" \" \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,476,476,476,476,476,476,25,476,20361,216,33,25,216,33,25,25]}
{"generation":243,"metadata":{"sampler_time":{"secs":0,"nanos":102748},"constraint_time":{"secs":0,"nanos":1514707},"parser_time":{"secs":0,"nanos":731999},"transformer_time":{"secs":0,"nanos":476994251},"trie_time":{"secs":0,"nanos":2442574},"total_time":{"secs":0,"nanos":638517375}},"pass":false,"entropy":4.65914289674463,"entropy_diff":4.383418072961831e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,14074,18,664,33,25,216,33,25,216,33,25,25]}
{"generation":244,"metadata":{"sampler_time":{"secs":0,"nanos":160386},"constraint_time":{"secs":0,"nanos":3990417},"parser_time":{"secs":0,"nanos":1041241},"transformer_time":{"secs":0,"nanos":611691161},"trie_time":{"secs":0,"nanos":2472240},"total_time":{"secs":0,"nanos":827982750}},"pass":false,"entropy":4.659142895726239,"entropy_diff":1.0183907050986818e-9,"tokenization_error":true,"tokens_after_tokenization_error":50,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) (str.indexof col1 (str.replace col1 \" \" \",\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,1292,25]}
{"generation":245,"metadata":{"sampler_time":{"secs":0,"nanos":106335},"constraint_time":{"secs":0,"nanos":1528082},"parser_time":{"secs":0,"nanos":793465},"transformer_time":{"secs":0,"nanos":477279130},"trie_time":{"secs":0,"nanos":2480460},"total_time":{"secs":0,"nanos":649126541}},"pass":false,"entropy":4.6591428956154815,"entropy_diff":1.1075762529344502e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,14074,18,25,216,33,25,216,33,25,25]}
{"generation":246,"metadata":{"sampler_time":{"secs":0,"nanos":134916},"constraint_time":{"secs":0,"nanos":5026713},"parser_time":{"secs":0,"nanos":851302},"transformer_time":{"secs":0,"nanos":528270912},"trie_time":{"secs":0,"nanos":2535123},"total_time":{"secs":0,"nanos":725431417}},"pass":false,"entropy":4.659142895251086,"entropy_diff":3.643956247856295e-10,"tokenization_error":true,"tokens_after_tokenization_error":40,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":247,"metadata":{"sampler_time":{"secs":0,"nanos":141549},"constraint_time":{"secs":0,"nanos":3043003},"parser_time":{"secs":0,"nanos":1013417},"transformer_time":{"secs":0,"nanos":627878963},"trie_time":{"secs":0,"nanos":2564088},"total_time":{"secs":0,"nanos":857192875}},"pass":false,"entropy":4.659142894911809,"entropy_diff":3.3927705089809024e-10,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,25]}
{"generation":248,"metadata":{"sampler_time":{"secs":0,"nanos":226377},"constraint_time":{"secs":0,"nanos":2852546},"parser_time":{"secs":0,"nanos":1604636},"transformer_time":{"secs":0,"nanos":949077705},"trie_time":{"secs":0,"nanos":2634398},"total_time":{"secs":1,"nanos":307462875}},"pass":false,"entropy":4.659142894877479,"entropy_diff":3.432987227824924e-11,"tokenization_error":true,"tokens_after_tokenization_error":90,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 (str.indexof col1 col1 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 (str.indexof col1 col1 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,1292,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,365,1321,30,3888,1714,664,33,664,33,216,33,1292,1292,25]}
{"generation":249,"metadata":{"sampler_time":{"secs":0,"nanos":86911},"constraint_time":{"secs":0,"nanos":1628659},"parser_time":{"secs":0,"nanos":688708},"transformer_time":{"secs":0,"nanos":480248544},"trie_time":{"secs":0,"nanos":2752534},"total_time":{"secs":0,"nanos":653761292}},"pass":false,"entropy":4.659142894848714,"entropy_diff":2.8764546300408256e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,476,25,216,34,25,216,33,25,25]}
{"generation":250,"metadata":{"sampler_time":{"secs":0,"nanos":143248},"constraint_time":{"secs":0,"nanos":2002463},"parser_time":{"secs":0,"nanos":875751},"transformer_time":{"secs":0,"nanos":553203254},"trie_time":{"secs":0,"nanos":2685615},"total_time":{"secs":0,"nanos":758854208}},"pass":false,"entropy":4.659142894815987,"entropy_diff":3.2727598409110215e-11,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,25]}
{"generation":251,"metadata":{"sampler_time":{"secs":0,"nanos":122588},"constraint_time":{"secs":0,"nanos":3792832},"parser_time":{"secs":0,"nanos":925156},"transformer_time":{"secs":0,"nanos":564150498},"trie_time":{"secs":0,"nanos":2695958},"total_time":{"secs":0,"nanos":773941500}},"pass":false,"entropy":4.65914289479522,"entropy_diff":2.0766499631008628e-11,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 0 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,25,216,33,25,216,33,25,25]}
{"generation":252,"metadata":{"sampler_time":{"secs":0,"nanos":131333},"constraint_time":{"secs":0,"nanos":1575662},"parser_time":{"secs":0,"nanos":752079},"transformer_time":{"secs":0,"nanos":477968123},"trie_time":{"secs":0,"nanos":2698509},"total_time":{"secs":0,"nanos":647521417}},"pass":false,"entropy":4.659142894642052,"entropy_diff":1.53168144834126e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,476,25,216,32,25,216,33,25,25]}
{"generation":253,"metadata":{"sampler_time":{"secs":0,"nanos":138376},"constraint_time":{"secs":0,"nanos":1753000},"parser_time":{"secs":0,"nanos":865636},"transformer_time":{"secs":0,"nanos":544311750},"trie_time":{"secs":0,"nanos":2646165},"total_time":{"secs":0,"nanos":741731208}},"pass":false,"entropy":4.659142894614513,"entropy_diff":2.7538860081222083e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") (str.indexof col1 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,216,33,25,25]}
{"generation":254,"metadata":{"sampler_time":{"secs":0,"nanos":102126},"constraint_time":{"secs":0,"nanos":1616968},"parser_time":{"secs":0,"nanos":744247},"transformer_time":{"secs":0,"nanos":477789583},"trie_time":{"secs":0,"nanos":2708400},"total_time":{"secs":0,"nanos":646848875}},"pass":false,"entropy":4.6591428944296425,"entropy_diff":1.8487078534690227e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,216,32,25,25]}
{"generation":255,"metadata":{"sampler_time":{"secs":0,"nanos":114336},"constraint_time":{"secs":0,"nanos":6437002},"parser_time":{"secs":0,"nanos":880713},"transformer_time":{"secs":0,"nanos":552832668},"trie_time":{"secs":0,"nanos":2668305},"total_time":{"secs":0,"nanos":749187833}},"pass":false,"entropy":4.65914289440352,"entropy_diff":2.6122215501800383e-11,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":256,"metadata":{"sampler_time":{"secs":0,"nanos":95664},"constraint_time":{"secs":0,"nanos":1625039},"parser_time":{"secs":0,"nanos":757662},"transformer_time":{"secs":0,"nanos":470384498},"trie_time":{"secs":0,"nanos":2729421},"total_time":{"secs":0,"nanos":631095708}},"pass":false,"entropy":4.659142894246868,"entropy_diff":1.566524687746096e-10,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,34,25,25]}
{"generation":257,"metadata":{"sampler_time":{"secs":0,"nanos":143502},"constraint_time":{"secs":0,"nanos":1856214},"parser_time":{"secs":0,"nanos":1069824},"transformer_time":{"secs":0,"nanos":628823790},"trie_time":{"secs":0,"nanos":2730834},"total_time":{"secs":0,"nanos":839666125}},"pass":false,"entropy":4.659142894222201,"entropy_diff":2.4666491071911878e-11,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) (str.indexof col2 (str.replace col2 col2 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,33,1292,25]}
{"generation":258,"metadata":{"sampler_time":{"secs":0,"nanos":192586},"constraint_time":{"secs":0,"nanos":4939089},"parser_time":{"secs":0,"nanos":1128034},"transformer_time":{"secs":0,"nanos":746231457},"trie_time":{"secs":0,"nanos":2777048},"total_time":{"secs":1,"nanos":6146916}},"pass":false,"entropy":4.6591428941870126,"entropy_diff":3.518874081009926e-11,"tokenization_error":true,"tokens_after_tokenization_error":66,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 \" \" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,476,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":259,"metadata":{"sampler_time":{"secs":0,"nanos":130369},"constraint_time":{"secs":0,"nanos":4774293},"parser_time":{"secs":0,"nanos":868173},"transformer_time":{"secs":0,"nanos":535297624},"trie_time":{"secs":0,"nanos":2718405},"total_time":{"secs":0,"nanos":716301000}},"pass":false,"entropy":4.659142894146461,"entropy_diff":4.055156210824862e-11,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace (str.at col1 0) \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,365,1321,30,261,664,33,216,32,25,476,476,476,476,25,216,33,25,216,33,25,25]}
{"generation":260,"metadata":{"sampler_time":{"secs":0,"nanos":61335},"constraint_time":{"secs":0,"nanos":1075710},"parser_time":{"secs":0,"nanos":608153},"transformer_time":{"secs":0,"nanos":403250873},"trie_time":{"secs":0,"nanos":3041174},"total_time":{"secs":0,"nanos":537835000}},"pass":false,"entropy":4.65914288680484,"entropy_diff":7.341620644751856e-9,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,216,32,25,216,33,25,25]}
{"generation":261,"metadata":{"sampler_time":{"secs":0,"nanos":99750},"constraint_time":{"secs":0,"nanos":1055455},"parser_time":{"secs":0,"nanos":608955},"transformer_time":{"secs":0,"nanos":402684422},"trie_time":{"secs":0,"nanos":2644844},"total_time":{"secs":0,"nanos":534388833}},"pass":false,"entropy":4.659142854632174,"entropy_diff":3.2172666308838416e-8,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col2 col1 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,25,216,33,25,25]}
{"generation":262,"metadata":{"sampler_time":{"secs":0,"nanos":126259},"constraint_time":{"secs":0,"nanos":3959582},"parser_time":{"secs":0,"nanos":845541},"transformer_time":{"secs":0,"nanos":571134581},"trie_time":{"secs":0,"nanos":2828949},"total_time":{"secs":0,"nanos":757007792}},"pass":false,"entropy":4.659142663838723,"entropy_diff":1.9079345126016278e-7,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 (str.indexof col1 \",\" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,365,1321,30,3888,1714,664,33,216,1002,18,216,33,1292,216,33,25,216,33,25,25]}
{"generation":263,"metadata":{"sampler_time":{"secs":0,"nanos":138623},"constraint_time":{"secs":0,"nanos":1977875},"parser_time":{"secs":0,"nanos":858660},"transformer_time":{"secs":0,"nanos":560957957},"trie_time":{"secs":0,"nanos":2700839},"total_time":{"secs":0,"nanos":743784917}},"pass":false,"entropy":4.659142662699861,"entropy_diff":1.1388614495899674e-9,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" (+ (str.indexof col1 \" \" 1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,42934,30425,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,25,25,25]}
{"generation":264,"metadata":{"sampler_time":{"secs":0,"nanos":125753},"constraint_time":{"secs":0,"nanos":2202618},"parser_time":{"secs":0,"nanos":742964},"transformer_time":{"secs":0,"nanos":486692667},"trie_time":{"secs":0,"nanos":2906040},"total_time":{"secs":0,"nanos":642692334}},"pass":false,"entropy":4.659142626344509,"entropy_diff":3.635535250623434e-8,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,216,33,25,216,33,25,25]}
{"generation":265,"metadata":{"sampler_time":{"secs":0,"nanos":72461},"constraint_time":{"secs":0,"nanos":1434713},"parser_time":{"secs":0,"nanos":606043},"transformer_time":{"secs":0,"nanos":402624375},"trie_time":{"secs":0,"nanos":2757872},"total_time":{"secs":0,"nanos":532183292}},"pass":false,"entropy":4.65914262556264,"entropy_diff":7.818687919325384e-10,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,216,34,25,216,33,25,25]}
{"generation":266,"metadata":{"sampler_time":{"secs":0,"nanos":115704},"constraint_time":{"secs":0,"nanos":1110046},"parser_time":{"secs":0,"nanos":592795},"transformer_time":{"secs":0,"nanos":415094917},"trie_time":{"secs":0,"nanos":2631210},"total_time":{"secs":0,"nanos":547553750}},"pass":false,"entropy":4.659142611803968,"entropy_diff":1.3758672423591634e-8,"tokenization_error":true,"tokens_after_tokenization_error":26,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,265,308,33,476,476,216,33,25,216,33,25,25]}
{"generation":267,"metadata":{"sampler_time":{"secs":0,"nanos":109878},"constraint_time":{"secs":0,"nanos":3631081},"parser_time":{"secs":0,"nanos":832667},"transformer_time":{"secs":0,"nanos":542858458},"trie_time":{"secs":0,"nanos":2863623},"total_time":{"secs":0,"nanos":714158459}},"pass":false,"entropy":4.659142234609834,"entropy_diff":3.7719413370496113e-7,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.to.int col1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,1141,30,591,664,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":268,"metadata":{"sampler_time":{"secs":0,"nanos":99584},"constraint_time":{"secs":0,"nanos":4673083},"parser_time":{"secs":0,"nanos":755212},"transformer_time":{"secs":0,"nanos":518708248},"trie_time":{"secs":0,"nanos":2898870},"total_time":{"secs":0,"nanos":687634000}},"pass":false,"entropy":4.659142233260488,"entropy_diff":1.3493455242041819e-9,"tokenization_error":true,"tokens_after_tokenization_error":39,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (+ 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,30425,216,33,216,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":269,"metadata":{"sampler_time":{"secs":0,"nanos":130248},"constraint_time":{"secs":0,"nanos":1934672},"parser_time":{"secs":0,"nanos":876294},"transformer_time":{"secs":0,"nanos":537747163},"trie_time":{"secs":0,"nanos":2980706},"total_time":{"secs":0,"nanos":707103334}},"pass":false,"entropy":4.659142231464612,"entropy_diff":1.7958763365300001e-9,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":270,"metadata":{"sampler_time":{"secs":0,"nanos":193717},"constraint_time":{"secs":0,"nanos":6489421},"parser_time":{"secs":0,"nanos":1292453},"transformer_time":{"secs":0,"nanos":778869709},"trie_time":{"secs":0,"nanos":3011544},"total_time":{"secs":1,"nanos":35585333}},"pass":false,"entropy":4.659142231389543,"entropy_diff":7.506884003305458e-11,"tokenization_error":true,"tokens_after_tokenization_error":70,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 1) (str.indexof col1 (str.substr col1 0 1) (str.indexof col1 \",\" 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":271,"metadata":{"sampler_time":{"secs":0,"nanos":149000},"constraint_time":{"secs":0,"nanos":3998163},"parser_time":{"secs":0,"nanos":799455},"transformer_time":{"secs":0,"nanos":574058792},"trie_time":{"secs":0,"nanos":3007410},"total_time":{"secs":0,"nanos":762148833}},"pass":false,"entropy":4.659142231219964,"entropy_diff":1.695790174949252e-10,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 (str.indexof col1 \",\" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,365,1321,30,3888,1714,664,33,216,1002,18,216,33,1292,216,33,25,216,33,25,25]}
{"generation":272,"metadata":{"sampler_time":{"secs":0,"nanos":117745},"constraint_time":{"secs":0,"nanos":1761960},"parser_time":{"secs":0,"nanos":702133},"transformer_time":{"secs":0,"nanos":486032375},"trie_time":{"secs":0,"nanos":2988245},"total_time":{"secs":0,"nanos":641893583}},"pass":false,"entropy":4.659142230740556,"entropy_diff":4.794085128878578e-10,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,32,25,216,33,25,216,33,25,25]}
{"generation":273,"metadata":{"sampler_time":{"secs":0,"nanos":129125},"constraint_time":{"secs":0,"nanos":4214292},"parser_time":{"secs":0,"nanos":768126},"transformer_time":{"secs":0,"nanos":520293080},"trie_time":{"secs":0,"nanos":2952954},"total_time":{"secs":0,"nanos":688410125}},"pass":false,"entropy":4.659142229120304,"entropy_diff":1.6202514885321762e-9,"tokenization_error":true,"tokens_after_tokenization_error":39,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (- 1 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,17481,216,33,216,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":274,"metadata":{"sampler_time":{"secs":0,"nanos":324624},"constraint_time":{"secs":0,"nanos":7360213},"parser_time":{"secs":0,"nanos":1823917},"transformer_time":{"secs":1,"nanos":125485463},"trie_time":{"secs":0,"nanos":3150051},"total_time":{"secs":1,"nanos":497946666}},"pass":false,"entropy":4.659142227922615,"entropy_diff":1.1976890590403855e-9,"tokenization_error":true,"tokens_after_tokenization_error":111,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 \",\" 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.substr col1 1 1) (str.indexof col1 \",\" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,25,25]}
{"generation":275,"metadata":{"sampler_time":{"secs":0,"nanos":124621},"constraint_time":{"secs":0,"nanos":1711790},"parser_time":{"secs":0,"nanos":802583},"transformer_time":{"secs":0,"nanos":552070415},"trie_time":{"secs":0,"nanos":3244548},"total_time":{"secs":0,"nanos":735082833}},"pass":false,"entropy":4.659142227919123,"entropy_diff":3.4923175462608924e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,1292,216,33,25,25]}
{"generation":276,"metadata":{"sampler_time":{"secs":0,"nanos":205377},"constraint_time":{"secs":0,"nanos":1937664},"parser_time":{"secs":0,"nanos":1130133},"transformer_time":{"secs":0,"nanos":743484209},"trie_time":{"secs":0,"nanos":3252814},"total_time":{"secs":0,"nanos":980087833}},"pass":false,"entropy":4.65914222791505,"entropy_diff":4.073186232744774e-12,"tokenization_error":true,"tokens_after_tokenization_error":66,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,25,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,25,1292,25]}
{"generation":277,"metadata":{"sampler_time":{"secs":0,"nanos":102040},"constraint_time":{"secs":0,"nanos":1495293},"parser_time":{"secs":0,"nanos":767495},"transformer_time":{"secs":0,"nanos":477954289},"trie_time":{"secs":0,"nanos":3282874},"total_time":{"secs":0,"nanos":632444583}},"pass":false,"entropy":4.659142227898755,"entropy_diff":1.6294521287818498e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,34,25,25]}
{"generation":278,"metadata":{"sampler_time":{"secs":0,"nanos":85503},"constraint_time":{"secs":0,"nanos":1963580},"parser_time":{"secs":0,"nanos":693167},"transformer_time":{"secs":0,"nanos":470419625},"trie_time":{"secs":0,"nanos":3423919},"total_time":{"secs":0,"nanos":624415917}},"pass":false,"entropy":4.659142227880223,"entropy_diff":1.8531842727043113e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,216,32,25,25]}
{"generation":279,"metadata":{"sampler_time":{"secs":0,"nanos":84119},"constraint_time":{"secs":0,"nanos":1644124},"parser_time":{"secs":0,"nanos":731081},"transformer_time":{"secs":0,"nanos":476871954},"trie_time":{"secs":0,"nanos":3201484},"total_time":{"secs":0,"nanos":627176708}},"pass":false,"entropy":4.65914222786585,"entropy_diff":1.4373391366007127e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,216,18,42934,25,216,33,25,216,33,25,25]}
{"generation":280,"metadata":{"sampler_time":{"secs":0,"nanos":104333},"constraint_time":{"secs":0,"nanos":2688672},"parser_time":{"secs":0,"nanos":720107},"transformer_time":{"secs":0,"nanos":478979709},"trie_time":{"secs":0,"nanos":3231081},"total_time":{"secs":0,"nanos":637075833}},"pass":false,"entropy":4.6591422277239145,"entropy_diff":1.419353523601785e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,216,1715,216,33,25,216,33,25,25]}
{"generation":281,"metadata":{"sampler_time":{"secs":0,"nanos":131373},"constraint_time":{"secs":0,"nanos":6002126},"parser_time":{"secs":0,"nanos":914251},"transformer_time":{"secs":0,"nanos":553176883},"trie_time":{"secs":0,"nanos":3158458},"total_time":{"secs":0,"nanos":737991792}},"pass":false,"entropy":4.659142227677792,"entropy_diff":4.61222171566078e-11,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":282,"metadata":{"sampler_time":{"secs":0,"nanos":104791},"constraint_time":{"secs":0,"nanos":2022495},"parser_time":{"secs":0,"nanos":758749},"transformer_time":{"secs":0,"nanos":477788373},"trie_time":{"secs":0,"nanos":3209245},"total_time":{"secs":0,"nanos":632482417}},"pass":false,"entropy":4.659142227597612,"entropy_diff":8.01803068384288e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,42934,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":283,"metadata":{"sampler_time":{"secs":0,"nanos":189036},"constraint_time":{"secs":0,"nanos":6095252},"parser_time":{"secs":0,"nanos":1164418},"transformer_time":{"secs":0,"nanos":726792501},"trie_time":{"secs":0,"nanos":3207590},"total_time":{"secs":0,"nanos":965818459}},"pass":false,"entropy":4.659142226634983,"entropy_diff":9.626290875530685e-10,"tokenization_error":true,"tokens_after_tokenization_error":64,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr (str.substr col1 1 1) 1 1) 1) (str.indexof col1 (str.substr col1 1 1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,216,33,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,33,1292,25]}
{"generation":284,"metadata":{"sampler_time":{"secs":0,"nanos":145372},"constraint_time":{"secs":0,"nanos":1804870},"parser_time":{"secs":0,"nanos":1075202},"transformer_time":{"secs":0,"nanos":627529419},"trie_time":{"secs":0,"nanos":3384667},"total_time":{"secs":0,"nanos":831331167}},"pass":false,"entropy":4.659142221692867,"entropy_diff":4.9421160497331584e-9,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) (str.indexof col2 (str.replace col2 col2 col1) 2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,216,34,1292,25]}
{"generation":285,"metadata":{"sampler_time":{"secs":0,"nanos":105044},"constraint_time":{"secs":0,"nanos":1558211},"parser_time":{"secs":0,"nanos":689753},"transformer_time":{"secs":0,"nanos":468190417},"trie_time":{"secs":0,"nanos":3385211},"total_time":{"secs":0,"nanos":621663125}},"pass":false,"entropy":4.659142221675681,"entropy_diff":1.7186252421197423e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,14074,1715,216,33,25,216,33,25,25]}
{"generation":286,"metadata":{"sampler_time":{"secs":0,"nanos":148083},"constraint_time":{"secs":0,"nanos":5941416},"parser_time":{"secs":0,"nanos":895461},"transformer_time":{"secs":0,"nanos":551457878},"trie_time":{"secs":0,"nanos":3383748},"total_time":{"secs":0,"nanos":733177750}},"pass":false,"entropy":4.659142221547394,"entropy_diff":1.282867145846467e-10,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,33,25,216,33,25,25]}
{"generation":287,"metadata":{"sampler_time":{"secs":0,"nanos":115413},"constraint_time":{"secs":0,"nanos":5951461},"parser_time":{"secs":0,"nanos":878836},"transformer_time":{"secs":0,"nanos":554350337},"trie_time":{"secs":0,"nanos":3411406},"total_time":{"secs":0,"nanos":740267292}},"pass":false,"entropy":4.659142221537564,"entropy_diff":9.829470570821286e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":288,"metadata":{"sampler_time":{"secs":0,"nanos":102502},"constraint_time":{"secs":0,"nanos":5168920},"parser_time":{"secs":0,"nanos":888507},"transformer_time":{"secs":0,"nanos":545531877},"trie_time":{"secs":0,"nanos":3930742},"total_time":{"secs":0,"nanos":726542042}},"pass":false,"entropy":4.659142221521897,"entropy_diff":1.566746732351021e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,42934,476,20361,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":289,"metadata":{"sampler_time":{"secs":0,"nanos":109873},"constraint_time":{"secs":0,"nanos":1533589},"parser_time":{"secs":0,"nanos":674206},"transformer_time":{"secs":0,"nanos":480945500},"trie_time":{"secs":0,"nanos":3569794},"total_time":{"secs":0,"nanos":636264625}},"pass":false,"entropy":4.659142221480185,"entropy_diff":4.171152312437698e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,1627,25,216,33,25,216,33,25,25]}
{"generation":290,"metadata":{"sampler_time":{"secs":0,"nanos":114834},"constraint_time":{"secs":0,"nanos":4731951},"parser_time":{"secs":0,"nanos":834992},"transformer_time":{"secs":0,"nanos":544285707},"trie_time":{"secs":0,"nanos":3569045},"total_time":{"secs":0,"nanos":720094792}},"pass":false,"entropy":4.659142221375171,"entropy_diff":1.0501466363166401e-10,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":291,"metadata":{"sampler_time":{"secs":0,"nanos":96286},"constraint_time":{"secs":0,"nanos":1669210},"parser_time":{"secs":0,"nanos":701296},"transformer_time":{"secs":0,"nanos":519184829},"trie_time":{"secs":0,"nanos":3534545},"total_time":{"secs":0,"nanos":686173667}},"pass":false,"entropy":4.65914222132961,"entropy_diff":4.5560888395357324e-11,"tokenization_error":true,"tokens_after_tokenization_error":39,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":292,"metadata":{"sampler_time":{"secs":0,"nanos":106759},"constraint_time":{"secs":0,"nanos":5556089},"parser_time":{"secs":0,"nanos":856873},"transformer_time":{"secs":0,"nanos":544975709},"trie_time":{"secs":0,"nanos":3652584},"total_time":{"secs":0,"nanos":726256084}},"pass":false,"entropy":4.659142221255422,"entropy_diff":7.418776704071206e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":293,"metadata":{"sampler_time":{"secs":0,"nanos":111003},"constraint_time":{"secs":0,"nanos":5610870},"parser_time":{"secs":0,"nanos":913824},"transformer_time":{"secs":0,"nanos":553953834},"trie_time":{"secs":0,"nanos":3709543},"total_time":{"secs":0,"nanos":734900709}},"pass":false,"entropy":4.659142221251155,"entropy_diff":4.266809128239402e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":294,"metadata":{"sampler_time":{"secs":0,"nanos":128294},"constraint_time":{"secs":0,"nanos":5933376},"parser_time":{"secs":0,"nanos":789566},"transformer_time":{"secs":0,"nanos":560549166},"trie_time":{"secs":0,"nanos":3629451},"total_time":{"secs":0,"nanos":745380500}},"pass":false,"entropy":4.659142221241567,"entropy_diff":9.587886040662852e-12,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":295,"metadata":{"sampler_time":{"secs":0,"nanos":95167},"constraint_time":{"secs":0,"nanos":4670378},"parser_time":{"secs":0,"nanos":744340},"transformer_time":{"secs":0,"nanos":528136793},"trie_time":{"secs":0,"nanos":3584960},"total_time":{"secs":0,"nanos":698387834}},"pass":false,"entropy":4.659142221225149,"entropy_diff":1.6417978088156815e-11,"tokenization_error":true,"tokens_after_tokenization_error":40,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,42934,25,216,33,25,216,33,25,25]}
{"generation":296,"metadata":{"sampler_time":{"secs":0,"nanos":111669},"constraint_time":{"secs":0,"nanos":6154797},"parser_time":{"secs":0,"nanos":904313},"transformer_time":{"secs":0,"nanos":565147377},"trie_time":{"secs":0,"nanos":3692997},"total_time":{"secs":0,"nanos":750779709}},"pass":false,"entropy":4.6591422211982785,"entropy_diff":2.687094990960759e-11,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":297,"metadata":{"sampler_time":{"secs":0,"nanos":104460},"constraint_time":{"secs":0,"nanos":1696753},"parser_time":{"secs":0,"nanos":681752},"transformer_time":{"secs":0,"nanos":495239006},"trie_time":{"secs":0,"nanos":3637592},"total_time":{"secs":0,"nanos":652630417}},"pass":false,"entropy":4.659142221192371,"entropy_diff":5.907274669425533e-12,"tokenization_error":true,"tokens_after_tokenization_error":36,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,216,18,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":298,"metadata":{"sampler_time":{"secs":0,"nanos":147580},"constraint_time":{"secs":0,"nanos":6222337},"parser_time":{"secs":0,"nanos":897343},"transformer_time":{"secs":0,"nanos":555851292},"trie_time":{"secs":0,"nanos":3672374},"total_time":{"secs":0,"nanos":737578250}},"pass":false,"entropy":4.659142221041306,"entropy_diff":1.510649383362761e-10,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col2 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,34,476,476,476,476,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":299,"metadata":{"sampler_time":{"secs":0,"nanos":119300},"constraint_time":{"secs":0,"nanos":2335498},"parser_time":{"secs":0,"nanos":948499},"transformer_time":{"secs":0,"nanos":586692876},"trie_time":{"secs":0,"nanos":3652961},"total_time":{"secs":0,"nanos":781366583}},"pass":false,"entropy":4.659142220976465,"entropy_diff":6.484146553020764e-11,"tokenization_error":true,"tokens_after_tokenization_error":47,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (- (str.indexof col1 col1 1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,365,1321,30,3888,1714,664,33,664,33,216,33,25,216,33,1292,216,33,25,25]}
{"generation":300,"metadata":{"sampler_time":{"secs":0,"nanos":98746},"constraint_time":{"secs":0,"nanos":3844623},"parser_time":{"secs":0,"nanos":768374},"transformer_time":{"secs":0,"nanos":469434289},"trie_time":{"secs":0,"nanos":3626043},"total_time":{"secs":0,"nanos":625565208}},"pass":false,"entropy":4.659142220953673,"entropy_diff":2.2791546427924914e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,34,25,216,33,25,25]}
{"generation":301,"metadata":{"sampler_time":{"secs":0,"nanos":112957},"constraint_time":{"secs":0,"nanos":6204213},"parser_time":{"secs":0,"nanos":867040},"transformer_time":{"secs":0,"nanos":547243502},"trie_time":{"secs":0,"nanos":3648427},"total_time":{"secs":0,"nanos":733231417}},"pass":false,"entropy":4.659142220911931,"entropy_diff":4.1742609369066486e-11,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":302,"metadata":{"sampler_time":{"secs":0,"nanos":111706},"constraint_time":{"secs":0,"nanos":1601048},"parser_time":{"secs":0,"nanos":724998},"transformer_time":{"secs":0,"nanos":485525915},"trie_time":{"secs":0,"nanos":3755673},"total_time":{"secs":0,"nanos":643929375}},"pass":false,"entropy":4.659142220852973,"entropy_diff":5.895728349969431e-11,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,265,308,33,25,216,33,25,216,33,25,25]}
{"generation":303,"metadata":{"sampler_time":{"secs":0,"nanos":99753},"constraint_time":{"secs":0,"nanos":4991128},"parser_time":{"secs":0,"nanos":889582},"transformer_time":{"secs":0,"nanos":535164419},"trie_time":{"secs":0,"nanos":3685333},"total_time":{"secs":0,"nanos":708757417}},"pass":false,"entropy":4.659142220749224,"entropy_diff":1.0374900938359133e-10,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":304,"metadata":{"sampler_time":{"secs":0,"nanos":108538},"constraint_time":{"secs":0,"nanos":4879172},"parser_time":{"secs":0,"nanos":852618},"transformer_time":{"secs":0,"nanos":526514795},"trie_time":{"secs":0,"nanos":3692095},"total_time":{"secs":0,"nanos":695908458}},"pass":false,"entropy":4.659142220724676,"entropy_diff":2.454836334209176e-11,"tokenization_error":true,"tokens_after_tokenization_error":40,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,42934,25,216,33,25,216,33,25,25]}
{"generation":305,"metadata":{"sampler_time":{"secs":0,"nanos":94003},"constraint_time":{"secs":0,"nanos":1608420},"parser_time":{"secs":0,"nanos":688503},"transformer_time":{"secs":0,"nanos":468613710},"trie_time":{"secs":0,"nanos":3655037},"total_time":{"secs":0,"nanos":619562708}},"pass":false,"entropy":4.659142220708356,"entropy_diff":1.63202784619898e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,1627,42934,25,216,33,25,216,33,25,25]}
{"generation":306,"metadata":{"sampler_time":{"secs":0,"nanos":129374},"constraint_time":{"secs":0,"nanos":6343334},"parser_time":{"secs":0,"nanos":924734},"transformer_time":{"secs":0,"nanos":569390622},"trie_time":{"secs":0,"nanos":3726828},"total_time":{"secs":0,"nanos":757409167}},"pass":false,"entropy":4.659142220592307,"entropy_diff":1.1604850413959866e-10,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":307,"metadata":{"sampler_time":{"secs":0,"nanos":88832},"constraint_time":{"secs":0,"nanos":1573334},"parser_time":{"secs":0,"nanos":749120},"transformer_time":{"secs":0,"nanos":469489453},"trie_time":{"secs":0,"nanos":3834795},"total_time":{"secs":0,"nanos":619869333}},"pass":false,"entropy":4.659142220574619,"entropy_diff":1.7688073228327994e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,14074,18,476,20361,216,33,25,216,33,25,25]}
{"generation":308,"metadata":{"sampler_time":{"secs":0,"nanos":94417},"constraint_time":{"secs":0,"nanos":2542455},"parser_time":{"secs":0,"nanos":792326},"transformer_time":{"secs":0,"nanos":469452540},"trie_time":{"secs":0,"nanos":3800915},"total_time":{"secs":0,"nanos":625558834}},"pass":false,"entropy":4.6591422202533215,"entropy_diff":3.212976551481006e-10,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,32,25,216,33,25,25]}
{"generation":309,"metadata":{"sampler_time":{"secs":0,"nanos":106545},"constraint_time":{"secs":0,"nanos":4752495},"parser_time":{"secs":0,"nanos":855823},"transformer_time":{"secs":0,"nanos":533350165},"trie_time":{"secs":0,"nanos":3822209},"total_time":{"secs":0,"nanos":707721209}},"pass":false,"entropy":4.659142220205805,"entropy_diff":4.7516657275537e-11,"tokenization_error":true,"tokens_after_tokenization_error":40,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,34,25,476,20361,216,33,25,216,33,25,25]}
{"generation":310,"metadata":{"sampler_time":{"secs":0,"nanos":234583},"constraint_time":{"secs":0,"nanos":7732835},"parser_time":{"secs":0,"nanos":1528798},"transformer_time":{"secs":0,"nanos":915104169},"trie_time":{"secs":0,"nanos":4149181},"total_time":{"secs":1,"nanos":219424125}},"pass":false,"entropy":4.65914222017207,"entropy_diff":3.3734792737050157e-11,"tokenization_error":true,"tokens_after_tokenization_error":86,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,25,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,25,1292,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":311,"metadata":{"sampler_time":{"secs":0,"nanos":222510},"constraint_time":{"secs":0,"nanos":7918381},"parser_time":{"secs":0,"nanos":1296047},"transformer_time":{"secs":0,"nanos":764241625},"trie_time":{"secs":0,"nanos":3942906},"total_time":{"secs":1,"nanos":27069959}},"pass":false,"entropy":4.659142220168866,"entropy_diff":3.2036595598583517e-12,"tokenization_error":true,"tokens_after_tokenization_error":68,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \",\") \" \") 1) (str.indexof col1 (str.replace col1 (str.replace col1 col1 \",\") \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,216,1002,1715,476,20361,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,216,1002,1715,476,20361,216,33,1292,25]}
{"generation":312,"metadata":{"sampler_time":{"secs":0,"nanos":118587},"constraint_time":{"secs":0,"nanos":2311121},"parser_time":{"secs":0,"nanos":864615},"transformer_time":{"secs":0,"nanos":544808500},"trie_time":{"secs":0,"nanos":3955136},"total_time":{"secs":0,"nanos":723441125}},"pass":false,"entropy":4.6591422201602635,"entropy_diff":8.602896173215413e-12,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,365,1321,30,9630,664,33,664,34,476,20361,25,216,33,25,216,33,25,25]}
{"generation":313,"metadata":{"sampler_time":{"secs":0,"nanos":85872},"constraint_time":{"secs":0,"nanos":6137584},"parser_time":{"secs":0,"nanos":820086},"transformer_time":{"secs":0,"nanos":554149456},"trie_time":{"secs":0,"nanos":4000217},"total_time":{"secs":0,"nanos":739374250}},"pass":false,"entropy":4.6591422200285,"entropy_diff":1.3176304491935298e-10,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,1627,476,20361,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":314,"metadata":{"sampler_time":{"secs":0,"nanos":112704},"constraint_time":{"secs":0,"nanos":6559035},"parser_time":{"secs":0,"nanos":888910},"transformer_time":{"secs":0,"nanos":552932456},"trie_time":{"secs":0,"nanos":4024912},"total_time":{"secs":0,"nanos":734936125}},"pass":false,"entropy":4.659142220018025,"entropy_diff":1.0475176281943277e-11,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,42934,25,216,33,25,216,33,25,25]}
{"generation":315,"metadata":{"sampler_time":{"secs":0,"nanos":130042},"constraint_time":{"secs":0,"nanos":5007088},"parser_time":{"secs":0,"nanos":840079},"transformer_time":{"secs":0,"nanos":544891416},"trie_time":{"secs":0,"nanos":4035928},"total_time":{"secs":0,"nanos":725076209}},"pass":false,"entropy":4.659142220006738,"entropy_diff":1.1286971357549191e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,476,25,476,20361,216,33,25,216,33,25,25]}
{"generation":316,"metadata":{"sampler_time":{"secs":0,"nanos":114414},"constraint_time":{"secs":0,"nanos":6073127},"parser_time":{"secs":0,"nanos":916921},"transformer_time":{"secs":0,"nanos":553857290},"trie_time":{"secs":0,"nanos":4464420},"total_time":{"secs":0,"nanos":739316750}},"pass":false,"entropy":4.659142220002758,"entropy_diff":3.979927498676261e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":317,"metadata":{"sampler_time":{"secs":0,"nanos":89332},"constraint_time":{"secs":0,"nanos":1572959},"parser_time":{"secs":0,"nanos":764465},"transformer_time":{"secs":0,"nanos":468614292},"trie_time":{"secs":0,"nanos":3921244},"total_time":{"secs":0,"nanos":620956250}},"pass":false,"entropy":4.659142219950468,"entropy_diff":5.229061628142517e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,34,25,25]}
{"generation":318,"metadata":{"sampler_time":{"secs":0,"nanos":118955},"constraint_time":{"secs":0,"nanos":5259242},"parser_time":{"secs":0,"nanos":916004},"transformer_time":{"secs":0,"nanos":560928790},"trie_time":{"secs":0,"nanos":3991717},"total_time":{"secs":0,"nanos":744965125}},"pass":false,"entropy":4.659142219906234,"entropy_diff":4.423394983632534e-11,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,216,18,476,20361,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":319,"metadata":{"sampler_time":{"secs":0,"nanos":99922},"constraint_time":{"secs":0,"nanos":4856287},"parser_time":{"secs":0,"nanos":923334},"transformer_time":{"secs":0,"nanos":551312127},"trie_time":{"secs":0,"nanos":4070796},"total_time":{"secs":0,"nanos":731295375}},"pass":false,"entropy":4.659142219896588,"entropy_diff":9.64561763794336e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,34,25,216,33,25,216,33,25,25]}
{"generation":320,"metadata":{"sampler_time":{"secs":0,"nanos":100999},"constraint_time":{"secs":0,"nanos":5510210},"parser_time":{"secs":0,"nanos":883155},"transformer_time":{"secs":0,"nanos":538390619},"trie_time":{"secs":0,"nanos":4044537},"total_time":{"secs":0,"nanos":713194292}},"pass":false,"entropy":4.659142219895239,"entropy_diff":1.3491430195244902e-12,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,14074,18,25,216,33,25,216,33,25,25]}
{"generation":321,"metadata":{"sampler_time":{"secs":0,"nanos":100582},"constraint_time":{"secs":0,"nanos":1575624},"parser_time":{"secs":0,"nanos":721122},"transformer_time":{"secs":0,"nanos":476878794},"trie_time":{"secs":0,"nanos":3978541},"total_time":{"secs":0,"nanos":633484375}},"pass":false,"entropy":4.659142219883947,"entropy_diff":1.1292300428067392e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,216,1715,216,33,25,216,33,25,25]}
{"generation":322,"metadata":{"sampler_time":{"secs":0,"nanos":115749},"constraint_time":{"secs":0,"nanos":7642711},"parser_time":{"secs":0,"nanos":975331},"transformer_time":{"secs":0,"nanos":595332957},"trie_time":{"secs":0,"nanos":4020955},"total_time":{"secs":0,"nanos":796271958}},"pass":false,"entropy":4.659142219839539,"entropy_diff":4.440803280658656e-11,"tokenization_error":true,"tokens_after_tokenization_error":48,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \",\") \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,216,1002,1715,476,20361,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":323,"metadata":{"sampler_time":{"secs":0,"nanos":106749},"constraint_time":{"secs":0,"nanos":5138251},"parser_time":{"secs":0,"nanos":910586},"transformer_time":{"secs":0,"nanos":552134673},"trie_time":{"secs":0,"nanos":4013840},"total_time":{"secs":0,"nanos":729331208}},"pass":false,"entropy":4.659142219834122,"entropy_diff":5.417000181751064e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,14074,18,476,1627,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":324,"metadata":{"sampler_time":{"secs":0,"nanos":114623},"constraint_time":{"secs":0,"nanos":4716704},"parser_time":{"secs":0,"nanos":866324},"transformer_time":{"secs":0,"nanos":543770288},"trie_time":{"secs":0,"nanos":4083788},"total_time":{"secs":0,"nanos":720097791}},"pass":false,"entropy":4.659142219822863,"entropy_diff":1.1258549648118787e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":325,"metadata":{"sampler_time":{"secs":0,"nanos":133756},"constraint_time":{"secs":0,"nanos":8708084},"parser_time":{"secs":0,"nanos":945501},"transformer_time":{"secs":0,"nanos":572240955},"trie_time":{"secs":0,"nanos":4123339},"total_time":{"secs":0,"nanos":759844250}},"pass":false,"entropy":4.659142219812114,"entropy_diff":1.0748735235210916e-11,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \",\" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,216,2283,33,216,1002,18,476,476,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":326,"metadata":{"sampler_time":{"secs":0,"nanos":72996},"constraint_time":{"secs":0,"nanos":1663458},"parser_time":{"secs":0,"nanos":713624},"transformer_time":{"secs":0,"nanos":469108333},"trie_time":{"secs":0,"nanos":4088336},"total_time":{"secs":0,"nanos":620326792}},"pass":false,"entropy":4.65914221975925,"entropy_diff":5.2864379540551454e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,25,216,32,25,25]}
{"generation":327,"metadata":{"sampler_time":{"secs":0,"nanos":81162},"constraint_time":{"secs":0,"nanos":1644039},"parser_time":{"secs":0,"nanos":790662},"transformer_time":{"secs":0,"nanos":478042083},"trie_time":{"secs":0,"nanos":4174629},"total_time":{"secs":0,"nanos":633290042}},"pass":false,"entropy":4.659142219736595,"entropy_diff":2.2654766951291094e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,34,25,25]}
{"generation":328,"metadata":{"sampler_time":{"secs":0,"nanos":111914},"constraint_time":{"secs":0,"nanos":1703502},"parser_time":{"secs":0,"nanos":680706},"transformer_time":{"secs":0,"nanos":477273417},"trie_time":{"secs":0,"nanos":4069172},"total_time":{"secs":0,"nanos":630938458}},"pass":false,"entropy":4.6591422197266175,"entropy_diff":9.977796366911207e-12,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,1627,25,216,33,25,216,33,25,25]}
{"generation":329,"metadata":{"sampler_time":{"secs":0,"nanos":111380},"constraint_time":{"secs":0,"nanos":1935379},"parser_time":{"secs":0,"nanos":719620},"transformer_time":{"secs":0,"nanos":486049292},"trie_time":{"secs":0,"nanos":4089503},"total_time":{"secs":0,"nanos":639582542}},"pass":false,"entropy":4.659142219692155,"entropy_diff":3.446221086278456e-11,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,216,18,476,476,25,216,33,25,216,33,25,25]}
{"generation":330,"metadata":{"sampler_time":{"secs":0,"nanos":140672},"constraint_time":{"secs":0,"nanos":6586704},"parser_time":{"secs":0,"nanos":968513},"transformer_time":{"secs":0,"nanos":611792586},"trie_time":{"secs":0,"nanos":4142797},"total_time":{"secs":0,"nanos":817106084}},"pass":false,"entropy":4.659142219634444,"entropy_diff":5.771116917685504e-11,"tokenization_error":true,"tokens_after_tokenization_error":50,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,365,1321,30,4103,1321,664,33,216,33,216,33,1292,216,33,25,216,33,25,25]}
{"generation":331,"metadata":{"sampler_time":{"secs":0,"nanos":120503},"constraint_time":{"secs":0,"nanos":5230457},"parser_time":{"secs":0,"nanos":865123},"transformer_time":{"secs":0,"nanos":527586918},"trie_time":{"secs":0,"nanos":4219083},"total_time":{"secs":0,"nanos":700902875}},"pass":false,"entropy":4.659142219627333,"entropy_diff":7.110756428119203e-12,"tokenization_error":true,"tokens_after_tokenization_error":40,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col2 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,34,216,32,25,476,20361,216,33,25,216,33,25,25]}
{"generation":332,"metadata":{"sampler_time":{"secs":0,"nanos":91045},"constraint_time":{"secs":0,"nanos":1560999},"parser_time":{"secs":0,"nanos":774722},"transformer_time":{"secs":0,"nanos":480312087},"trie_time":{"secs":0,"nanos":4258321},"total_time":{"secs":0,"nanos":634432542}},"pass":false,"entropy":4.659142219587732,"entropy_diff":3.9601211199169484e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 2) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,34,25,216,34,25,25]}
{"generation":333,"metadata":{"sampler_time":{"secs":0,"nanos":136623},"constraint_time":{"secs":0,"nanos":2297580},"parser_time":{"secs":0,"nanos":880036},"transformer_time":{"secs":0,"nanos":545318501},"trie_time":{"secs":0,"nanos":4196879},"total_time":{"secs":0,"nanos":726648083}},"pass":false,"entropy":4.659142219577254,"entropy_diff":1.0477840817202377e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 \" \" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,476,476,476,476,1292,216,33,25,216,33,25,25]}
{"generation":334,"metadata":{"sampler_time":{"secs":0,"nanos":97412},"constraint_time":{"secs":0,"nanos":1662707},"parser_time":{"secs":0,"nanos":706758},"transformer_time":{"secs":0,"nanos":489002628},"trie_time":{"secs":0,"nanos":4173038},"total_time":{"secs":0,"nanos":647736958}},"pass":false,"entropy":4.659142219555019,"entropy_diff":2.2235546737192635e-11,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,1627,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":335,"metadata":{"sampler_time":{"secs":0,"nanos":68159},"constraint_time":{"secs":0,"nanos":1596542},"parser_time":{"secs":0,"nanos":722468},"transformer_time":{"secs":0,"nanos":469050540},"trie_time":{"secs":0,"nanos":4363001},"total_time":{"secs":0,"nanos":621294583}},"pass":false,"entropy":4.659142219472013,"entropy_diff":8.30056023914949e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,34,25,216,33,25,25]}
{"generation":336,"metadata":{"sampler_time":{"secs":0,"nanos":109334},"constraint_time":{"secs":0,"nanos":6537169},"parser_time":{"secs":0,"nanos":916119},"transformer_time":{"secs":0,"nanos":545222666},"trie_time":{"secs":0,"nanos":4509661},"total_time":{"secs":0,"nanos":737471875}},"pass":false,"entropy":4.659142219443942,"entropy_diff":2.8070878954622458e-11,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,476,20361,216,33,25,216,33,25,25]}
{"generation":337,"metadata":{"sampler_time":{"secs":0,"nanos":122794},"constraint_time":{"secs":0,"nanos":6736959},"parser_time":{"secs":0,"nanos":808305},"transformer_time":{"secs":0,"nanos":560979293},"trie_time":{"secs":0,"nanos":4334997},"total_time":{"secs":0,"nanos":750013417}},"pass":false,"entropy":4.659142219428784,"entropy_diff":1.5158541089022037e-11,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,99,611,1321,664,33,216,32,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":338,"metadata":{"sampler_time":{"secs":0,"nanos":89582},"constraint_time":{"secs":0,"nanos":1983421},"parser_time":{"secs":0,"nanos":727090},"transformer_time":{"secs":0,"nanos":468528249},"trie_time":{"secs":0,"nanos":4184537},"total_time":{"secs":0,"nanos":625806125}},"pass":false,"entropy":4.659142219323897,"entropy_diff":1.0488676593922719e-10,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col2 col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,34,664,33,476,20361,216,33,25,216,33,25,25]}
{"generation":339,"metadata":{"sampler_time":{"secs":0,"nanos":83081},"constraint_time":{"secs":0,"nanos":1054296},"parser_time":{"secs":0,"nanos":630995},"transformer_time":{"secs":0,"nanos":402335871},"trie_time":{"secs":0,"nanos":3996719},"total_time":{"secs":0,"nanos":535478833}},"pass":false,"entropy":4.659142218027055,"entropy_diff":1.2968417451020287e-9,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,32,25,25]}
{"generation":340,"metadata":{"sampler_time":{"secs":0,"nanos":134952},"constraint_time":{"secs":0,"nanos":1734918},"parser_time":{"secs":0,"nanos":732796},"transformer_time":{"secs":0,"nanos":469842668},"trie_time":{"secs":0,"nanos":4099590},"total_time":{"secs":0,"nanos":625395792}},"pass":false,"entropy":4.659142206232925,"entropy_diff":1.179413011698216e-8,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace \" \" col1 \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,476,476,664,33,476,20361,216,33,25,216,33,25,25]}
{"generation":341,"metadata":{"sampler_time":{"secs":0,"nanos":91918},"constraint_time":{"secs":0,"nanos":2177171},"parser_time":{"secs":0,"nanos":712964},"transformer_time":{"secs":0,"nanos":494403161},"trie_time":{"secs":0,"nanos":4053538},"total_time":{"secs":0,"nanos":655838417}},"pass":false,"entropy":4.65914220232775,"entropy_diff":3.90517485016062e-9,"tokenization_error":true,"tokens_after_tokenization_error":36,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,99,611,1321,664,33,216,33,216,33,25,216,33,25,216,33,25,25]}
{"generation":342,"metadata":{"sampler_time":{"secs":0,"nanos":77630},"constraint_time":{"secs":0,"nanos":1049459},"parser_time":{"secs":0,"nanos":548086},"transformer_time":{"secs":0,"nanos":402737795},"trie_time":{"secs":0,"nanos":3966041},"total_time":{"secs":0,"nanos":534156083}},"pass":false,"entropy":4.659142192954805,"entropy_diff":9.372945086738582e-9,"tokenization_error":true,"tokens_after_tokenization_error":25,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \",\" 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,1627,216,32,25,216,33,25,25]}
{"generation":343,"metadata":{"sampler_time":{"secs":0,"nanos":84378},"constraint_time":{"secs":0,"nanos":1729545},"parser_time":{"secs":0,"nanos":712918},"transformer_time":{"secs":0,"nanos":486754457},"trie_time":{"secs":0,"nanos":4138421},"total_time":{"secs":0,"nanos":643701834}},"pass":false,"entropy":4.659142181780604,"entropy_diff":1.1174201119956706e-8,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 0 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,216,33,25,216,33,25,25]}
{"generation":344,"metadata":{"sampler_time":{"secs":0,"nanos":120798},"constraint_time":{"secs":0,"nanos":2171456},"parser_time":{"secs":0,"nanos":805538},"transformer_time":{"secs":0,"nanos":538716417},"trie_time":{"secs":0,"nanos":4131504},"total_time":{"secs":0,"nanos":709928500}},"pass":false,"entropy":4.659142181513615,"entropy_diff":2.6698909749711675e-10,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":345,"metadata":{"sampler_time":{"secs":0,"nanos":113869},"constraint_time":{"secs":0,"nanos":5210375},"parser_time":{"secs":0,"nanos":871093},"transformer_time":{"secs":0,"nanos":576197546},"trie_time":{"secs":0,"nanos":4128121},"total_time":{"secs":0,"nanos":764117167}},"pass":false,"entropy":4.659142181410144,"entropy_diff":1.0347100953822519e-10,"tokenization_error":true,"tokens_after_tokenization_error":46,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col2 \",\" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,34,216,1002,18,216,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":346,"metadata":{"sampler_time":{"secs":0,"nanos":89750},"constraint_time":{"secs":0,"nanos":1609617},"parser_time":{"secs":0,"nanos":748622},"transformer_time":{"secs":0,"nanos":460663958},"trie_time":{"secs":0,"nanos":4446323},"total_time":{"secs":0,"nanos":608217292}},"pass":false,"entropy":4.659142181114359,"entropy_diff":2.957847300422145e-10,"tokenization_error":true,"tokens_after_tokenization_error":32,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,33,216,34,25,216,33,25,216,33,25,25]}
{"generation":347,"metadata":{"sampler_time":{"secs":0,"nanos":191800},"constraint_time":{"secs":0,"nanos":5454916},"parser_time":{"secs":0,"nanos":1285216},"transformer_time":{"secs":0,"nanos":780064328},"trie_time":{"secs":0,"nanos":4286466},"total_time":{"secs":1,"nanos":36758333}},"pass":false,"entropy":4.659142179378342,"entropy_diff":1.7360175519343102e-9,"tokenization_error":true,"tokens_after_tokenization_error":70,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 1) (str.indexof col2 (str.substr col2 0 1) (str.indexof col2 \",\" 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,365,1321,30,3888,1714,664,34,365,1321,30,4103,1321,664,34,216,32,216,33,25,365,1321,30,3888,1714,664,34,216,1002,18,216,33,7754,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":348,"metadata":{"sampler_time":{"secs":0,"nanos":108626},"constraint_time":{"secs":0,"nanos":3785632},"parser_time":{"secs":0,"nanos":729626},"transformer_time":{"secs":0,"nanos":486606417},"trie_time":{"secs":0,"nanos":4334047},"total_time":{"secs":0,"nanos":646233208}},"pass":false,"entropy":4.659142179193326,"entropy_diff":1.8501555842931339e-10,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,216,34,25,216,33,25,216,33,25,25]}
{"generation":349,"metadata":{"sampler_time":{"secs":0,"nanos":110924},"constraint_time":{"secs":0,"nanos":1764537},"parser_time":{"secs":0,"nanos":757009},"transformer_time":{"secs":0,"nanos":486239167},"trie_time":{"secs":0,"nanos":4258782},"total_time":{"secs":0,"nanos":643704083}},"pass":false,"entropy":4.659142178957041,"entropy_diff":2.362847695280834e-10,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 2 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,216,34,216,34,25,216,33,25,216,33,25,25]}
{"generation":350,"metadata":{"sampler_time":{"secs":0,"nanos":103873},"constraint_time":{"secs":0,"nanos":2803952},"parser_time":{"secs":0,"nanos":763999},"transformer_time":{"secs":0,"nanos":486197084},"trie_time":{"secs":0,"nanos":4299668},"total_time":{"secs":0,"nanos":645147417}},"pass":false,"entropy":4.659142178659133,"entropy_diff":2.979083646437175e-10,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,34,25,216,33,25,25]}
{"generation":351,"metadata":{"sampler_time":{"secs":0,"nanos":128214},"constraint_time":{"secs":0,"nanos":1609537},"parser_time":{"secs":0,"nanos":688204},"transformer_time":{"secs":0,"nanos":478210043},"trie_time":{"secs":0,"nanos":4116508},"total_time":{"secs":0,"nanos":638270542}},"pass":false,"entropy":4.659142178583674,"entropy_diff":7.545875035930294e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 col2 (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,664,34,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,25]}
{"generation":352,"metadata":{"sampler_time":{"secs":0,"nanos":110540},"constraint_time":{"secs":0,"nanos":2795997},"parser_time":{"secs":0,"nanos":753499},"transformer_time":{"secs":0,"nanos":489698837},"trie_time":{"secs":0,"nanos":4293328},"total_time":{"secs":0,"nanos":648184083}},"pass":false,"entropy":4.659142159179502,"entropy_diff":1.940417249102211e-8,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 1 2) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,216,32,25,216,33,25,25]}
{"generation":353,"metadata":{"sampler_time":{"secs":0,"nanos":137296},"constraint_time":{"secs":0,"nanos":5535883},"parser_time":{"secs":0,"nanos":891090},"transformer_time":{"secs":0,"nanos":578099166},"trie_time":{"secs":0,"nanos":4380485},"total_time":{"secs":0,"nanos":768196875}},"pass":false,"entropy":4.659142159126692,"entropy_diff":5.2809312478530046e-11,"tokenization_error":true,"tokens_after_tokenization_error":46,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 (str.indexof col1 \" \" 1) 1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,216,2283,33,476,476,216,33,25,216,33,25,216,33,25,216,33,25,25]}
{"generation":354,"metadata":{"sampler_time":{"secs":0,"nanos":115710},"constraint_time":{"secs":0,"nanos":3912918},"parser_time":{"secs":0,"nanos":885411},"transformer_time":{"secs":0,"nanos":573333587},"trie_time":{"secs":0,"nanos":4361082},"total_time":{"secs":0,"nanos":762879750}},"pass":false,"entropy":4.659142158728173,"entropy_diff":3.985194396705083e-10,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 0 (str.indexof col2 \",\" 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,216,32,365,1321,30,3888,1714,664,34,216,1002,18,216,33,1292,216,33,25,216,33,25,25]}
{"generation":355,"metadata":{"sampler_time":{"secs":0,"nanos":136709},"constraint_time":{"secs":0,"nanos":5409842},"parser_time":{"secs":0,"nanos":954748},"transformer_time":{"secs":0,"nanos":628242459},"trie_time":{"secs":0,"nanos":4804880},"total_time":{"secs":0,"nanos":832472958}},"pass":false,"entropy":4.659142158510913,"entropy_diff":2.1725998777810673e-10,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col2 (str.indexof col1 \" \" 1) 1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,664,34,365,1321,30,3888,1714,664,33,476,476,216,33,25,216,33,25,216,33,25,365,1321,30,1141,30,591,664,33,25,25,25]}
{"generation":356,"metadata":{"sampler_time":{"secs":0,"nanos":108420},"constraint_time":{"secs":0,"nanos":1896588},"parser_time":{"secs":0,"nanos":656835},"transformer_time":{"secs":0,"nanos":463695543},"trie_time":{"secs":0,"nanos":4366044},"total_time":{"secs":0,"nanos":610894917}},"pass":false,"entropy":4.659142157960877,"entropy_diff":5.500355726439921e-10,"tokenization_error":true,"tokens_after_tokenization_error":32,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.at col2 0) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,261,664,34,216,32,25,216,33,25,216,33,25,25]}
{"generation":357,"metadata":{"sampler_time":{"secs":0,"nanos":111665},"constraint_time":{"secs":0,"nanos":2345459},"parser_time":{"secs":0,"nanos":683791},"transformer_time":{"secs":0,"nanos":498910210},"trie_time":{"secs":0,"nanos":4392003},"total_time":{"secs":0,"nanos":660162750}},"pass":false,"entropy":4.659142155264407,"entropy_diff":2.6964706023591134e-9,"tokenization_error":true,"tokens_after_tokenization_error":36,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.substr col1 1 2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,4103,1321,216,2283,33,216,33,216,34,25,216,33,25,216,33,25,25]}
{"generation":358,"metadata":{"sampler_time":{"secs":0,"nanos":101369},"constraint_time":{"secs":0,"nanos":1439962},"parser_time":{"secs":0,"nanos":678038},"transformer_time":{"secs":0,"nanos":478156788},"trie_time":{"secs":0,"nanos":4192710},"total_time":{"secs":0,"nanos":635882875}},"pass":false,"entropy":4.6591421522391805,"entropy_diff":3.025226291697436e-9,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 \" \" 2) (str.indexof col1 \" \" 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,476,476,216,34,25,365,1321,30,3888,1714,664,33,476,476,216,33,1292,25]}
{"generation":359,"metadata":{"sampler_time":{"secs":0,"nanos":125175},"constraint_time":{"secs":0,"nanos":2671371},"parser_time":{"secs":0,"nanos":976167},"transformer_time":{"secs":0,"nanos":627835289},"trie_time":{"secs":0,"nanos":4712259},"total_time":{"secs":0,"nanos":836532458}},"pass":false,"entropy":4.659142147228696,"entropy_diff":5.010484471767995e-9,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,216,33,25,25]}
{"generation":360,"metadata":{"sampler_time":{"secs":0,"nanos":137913},"constraint_time":{"secs":0,"nanos":2628459},"parser_time":{"secs":0,"nanos":973878},"transformer_time":{"secs":0,"nanos":625006795},"trie_time":{"secs":0,"nanos":4730044},"total_time":{"secs":0,"nanos":834789083}},"pass":false,"entropy":4.659142147228294,"entropy_diff":4.0234482412415673e-13,"tokenization_error":true,"tokens_after_tokenization_error":51,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col2 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,1292,216,33,25,25]}
{"generation":361,"metadata":{"sampler_time":{"secs":0,"nanos":129752},"constraint_time":{"secs":0,"nanos":3009670},"parser_time":{"secs":0,"nanos":927918},"transformer_time":{"secs":0,"nanos":628144457},"trie_time":{"secs":0,"nanos":4810128},"total_time":{"secs":0,"nanos":837891541}},"pass":false,"entropy":4.659142147227776,"entropy_diff":5.17808018685173e-13,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 0)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,1292,216,33,25,25]}
{"generation":362,"metadata":{"sampler_time":{"secs":0,"nanos":172125},"constraint_time":{"secs":0,"nanos":4248792},"parser_time":{"secs":0,"nanos":1035550},"transformer_time":{"secs":0,"nanos":652985043},"trie_time":{"secs":0,"nanos":4776571},"total_time":{"secs":0,"nanos":873174166}},"pass":false,"entropy":4.659142147227746,"entropy_diff":3.019806626980426e-14,"tokenization_error":true,"tokens_after_tokenization_error":55,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (- 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,17481,216,33,216,33,7754,216,33,25,25]}
{"generation":363,"metadata":{"sampler_time":{"secs":0,"nanos":146580},"constraint_time":{"secs":0,"nanos":6213165},"parser_time":{"secs":0,"nanos":1009403},"transformer_time":{"secs":0,"nanos":653898752},"trie_time":{"secs":0,"nanos":4781212},"total_time":{"secs":0,"nanos":877633708}},"pass":false,"entropy":4.659142147227666,"entropy_diff":7.993605777301127e-14,"tokenization_error":true,"tokens_after_tokenization_error":55,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (+ 1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,30425,216,33,216,33,7754,216,33,25,25]}
{"generation":364,"metadata":{"sampler_time":{"secs":0,"nanos":97380},"constraint_time":{"secs":0,"nanos":2050999},"parser_time":{"secs":0,"nanos":873371},"transformer_time":{"secs":0,"nanos":561858203},"trie_time":{"secs":0,"nanos":5643169},"total_time":{"secs":0,"nanos":747561000}},"pass":false,"entropy":4.659142147227602,"entropy_diff":6.394884621840902e-14,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \",\" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,1292,216,33,25,25]}
{"generation":365,"metadata":{"sampler_time":{"secs":0,"nanos":159992},"constraint_time":{"secs":0,"nanos":1856961},"parser_time":{"secs":0,"nanos":1010079},"transformer_time":{"secs":0,"nanos":628727833},"trie_time":{"secs":0,"nanos":4650748},"total_time":{"secs":0,"nanos":834122833}},"pass":false,"entropy":4.659142147225583,"entropy_diff":2.0188295479783847e-12,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 0) (str.indexof col1 (str.replace col1 col1 col1) 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,32,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,25]}
{"generation":366,"metadata":{"sampler_time":{"secs":0,"nanos":118747},"constraint_time":{"secs":0,"nanos":2688628},"parser_time":{"secs":0,"nanos":677214},"transformer_time":{"secs":0,"nanos":469430082},"trie_time":{"secs":0,"nanos":4632453},"total_time":{"secs":0,"nanos":624667583}},"pass":false,"entropy":4.659142147219149,"entropy_diff":6.433964472307707e-12,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 2))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,34,25,25]}
{"generation":367,"metadata":{"sampler_time":{"secs":0,"nanos":151081},"constraint_time":{"secs":0,"nanos":3913579},"parser_time":{"secs":0,"nanos":1021417},"transformer_time":{"secs":0,"nanos":620726247},"trie_time":{"secs":0,"nanos":4660755},"total_time":{"secs":0,"nanos":831220333}},"pass":false,"entropy":4.65914214720564,"entropy_diff":1.3509193763638905e-11,"tokenization_error":true,"tokens_after_tokenization_error":51,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 (str.replace col1 col2 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,1292,216,33,25,25]}
{"generation":368,"metadata":{"sampler_time":{"secs":0,"nanos":119285},"constraint_time":{"secs":0,"nanos":2341792},"parser_time":{"secs":0,"nanos":912168},"transformer_time":{"secs":0,"nanos":544450293},"trie_time":{"secs":0,"nanos":4662043},"total_time":{"secs":0,"nanos":722843542}},"pass":false,"entropy":4.659142147200875,"entropy_diff":4.765077221691172e-12,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,476,20361,25,216,33,25,216,33,25,25]}
{"generation":369,"metadata":{"sampler_time":{"secs":0,"nanos":227451},"constraint_time":{"secs":0,"nanos":2404210},"parser_time":{"secs":0,"nanos":1265676},"transformer_time":{"secs":0,"nanos":790416335},"trie_time":{"secs":0,"nanos":4755587},"total_time":{"secs":1,"nanos":53856875}},"pass":false,"entropy":4.659142147197738,"entropy_diff":3.1370461783808423e-12,"tokenization_error":true,"tokens_after_tokenization_error":71,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col2 col2 (str.indexof col2 col2 1))) (str.indexof col2 col2 (str.indexof col2 col2 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,1292,25,365,1321,30,3888,1714,664,34,664,34,365,1321,30,3888,1714,664,34,664,34,216,33,7754,25]}
{"generation":370,"metadata":{"sampler_time":{"secs":0,"nanos":127748},"constraint_time":{"secs":0,"nanos":3104704},"parser_time":{"secs":0,"nanos":1051670},"transformer_time":{"secs":0,"nanos":627880286},"trie_time":{"secs":0,"nanos":4897836},"total_time":{"secs":0,"nanos":838351292}},"pass":false,"entropy":4.659142147196295,"entropy_diff":1.4424017535930034e-12,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 2)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,1292,216,33,25,25]}
{"generation":371,"metadata":{"sampler_time":{"secs":0,"nanos":155534},"constraint_time":{"secs":0,"nanos":4353090},"parser_time":{"secs":0,"nanos":1231579},"transformer_time":{"secs":0,"nanos":757613623},"trie_time":{"secs":0,"nanos":4913085},"total_time":{"secs":1,"nanos":7864084}},"pass":false,"entropy":4.6591421471962695,"entropy_diff":2.5757174171303632e-14,"tokenization_error":true,"tokens_after_tokenization_error":67,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col1 col2 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":372,"metadata":{"sampler_time":{"secs":0,"nanos":127748},"constraint_time":{"secs":0,"nanos":2583372},"parser_time":{"secs":0,"nanos":1058879},"transformer_time":{"secs":0,"nanos":621371081},"trie_time":{"secs":0,"nanos":4968792},"total_time":{"secs":0,"nanos":829614083}},"pass":false,"entropy":4.659142147196187,"entropy_diff":8.260059303211165e-14,"tokenization_error":true,"tokens_after_tokenization_error":51,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,1292,216,33,25,25]}
{"generation":373,"metadata":{"sampler_time":{"secs":0,"nanos":136501},"constraint_time":{"secs":0,"nanos":2802291},"parser_time":{"secs":0,"nanos":1040076},"transformer_time":{"secs":0,"nanos":619787203},"trie_time":{"secs":0,"nanos":4943659},"total_time":{"secs":0,"nanos":827671125}},"pass":false,"entropy":4.659142147196097,"entropy_diff":8.970602038971265e-14,"tokenization_error":true,"tokens_after_tokenization_error":51,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 \" \" \" \") 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,33,1292,216,33,25,25]}
{"generation":374,"metadata":{"sampler_time":{"secs":0,"nanos":225162},"constraint_time":{"secs":0,"nanos":5120955},"parser_time":{"secs":0,"nanos":1453658},"transformer_time":{"secs":0,"nanos":833771164},"trie_time":{"secs":0,"nanos":4976118},"total_time":{"secs":1,"nanos":107373083}},"pass":false,"entropy":4.659142147195711,"entropy_diff":3.863576125695545e-13,"tokenization_error":true,"tokens_after_tokenization_error":76,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof (str.replace col1 col1 col1) (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":375,"metadata":{"sampler_time":{"secs":0,"nanos":96837},"constraint_time":{"secs":0,"nanos":1580540},"parser_time":{"secs":0,"nanos":793712},"transformer_time":{"secs":0,"nanos":476380499},"trie_time":{"secs":0,"nanos":4885694},"total_time":{"secs":0,"nanos":631759708}},"pass":false,"entropy":4.659142147191144,"entropy_diff":4.567013434098044e-12,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,476,25,216,34,25,216,33,25,25]}
{"generation":376,"metadata":{"sampler_time":{"secs":0,"nanos":121335},"constraint_time":{"secs":0,"nanos":4632292},"parser_time":{"secs":0,"nanos":906289},"transformer_time":{"secs":0,"nanos":545458708},"trie_time":{"secs":0,"nanos":4939550},"total_time":{"secs":0,"nanos":730840375}},"pass":false,"entropy":4.659142147174587,"entropy_diff":1.6556533921630034e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,216,33,25,25]}
{"generation":377,"metadata":{"sampler_time":{"secs":0,"nanos":98214},"constraint_time":{"secs":0,"nanos":2608257},"parser_time":{"secs":0,"nanos":890622},"transformer_time":{"secs":0,"nanos":554037831},"trie_time":{"secs":0,"nanos":4970175},"total_time":{"secs":0,"nanos":740345625}},"pass":false,"entropy":4.659142147172116,"entropy_diff":2.4709123636057484e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \",\")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,216,1002,18,1292,216,33,25,216,33,25,25]}
{"generation":378,"metadata":{"sampler_time":{"secs":0,"nanos":116077},"constraint_time":{"secs":0,"nanos":1877748},"parser_time":{"secs":0,"nanos":1020212},"transformer_time":{"secs":0,"nanos":613729586},"trie_time":{"secs":0,"nanos":4981422},"total_time":{"secs":0,"nanos":811705792}},"pass":false,"entropy":4.659142147168801,"entropy_diff":3.3155700407405675e-12,"tokenization_error":true,"tokens_after_tokenization_error":50,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \",\") 2) (str.indexof col1 (str.replace col1 \" \" \",\") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,42934,25,216,33,1292,25]}
{"generation":379,"metadata":{"sampler_time":{"secs":0,"nanos":144961},"constraint_time":{"secs":0,"nanos":2249786},"parser_time":{"secs":0,"nanos":933175},"transformer_time":{"secs":0,"nanos":630144712},"trie_time":{"secs":0,"nanos":5082220},"total_time":{"secs":0,"nanos":841784667}},"pass":false,"entropy":4.659142147146436,"entropy_diff":2.2365220786468853e-11,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) (str.indexof col2 col1 (str.indexof col2 col1 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,3888,1714,664,34,664,33,365,1321,30,3888,1714,664,34,664,33,216,33,7754,216,33,25,25]}
{"generation":380,"metadata":{"sampler_time":{"secs":0,"nanos":117838},"constraint_time":{"secs":0,"nanos":4252085},"parser_time":{"secs":0,"nanos":934245},"transformer_time":{"secs":0,"nanos":543520750},"trie_time":{"secs":0,"nanos":5092125},"total_time":{"secs":0,"nanos":724874250}},"pass":false,"entropy":4.659142147143855,"entropy_diff":2.580158309228864e-12,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col2 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,34,476,20361,25,216,33,25,216,33,25,25]}
{"generation":381,"metadata":{"sampler_time":{"secs":0,"nanos":139082},"constraint_time":{"secs":0,"nanos":1853880},"parser_time":{"secs":0,"nanos":970499},"transformer_time":{"secs":0,"nanos":612317333},"trie_time":{"secs":0,"nanos":5367082},"total_time":{"secs":0,"nanos":820059458}},"pass":false,"entropy":4.659142147140459,"entropy_diff":3.396394276933279e-12,"tokenization_error":true,"tokens_after_tokenization_error":50,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 2) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,1292,25]}
{"generation":382,"metadata":{"sampler_time":{"secs":0,"nanos":110626},"constraint_time":{"secs":0,"nanos":3051042},"parser_time":{"secs":0,"nanos":741751},"transformer_time":{"secs":0,"nanos":487895541},"trie_time":{"secs":0,"nanos":5652124},"total_time":{"secs":0,"nanos":652474625}},"pass":false,"entropy":4.6591421471283345,"entropy_diff":1.212452360732641e-11,"tokenization_error":true,"tokens_after_tokenization_error":36,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,265,308,33,265,308,34,25,216,33,25,216,33,25,25]}
{"generation":383,"metadata":{"sampler_time":{"secs":0,"nanos":233713},"constraint_time":{"secs":0,"nanos":4141123},"parser_time":{"secs":0,"nanos":1208723},"transformer_time":{"secs":0,"nanos":739111958},"trie_time":{"secs":0,"nanos":5008577},"total_time":{"secs":0,"nanos":990734042}},"pass":false,"entropy":4.659142146633578,"entropy_diff":4.94756235980276e-10,"tokenization_error":true,"tokens_after_tokenization_error":65,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col2 (str.replace col2 col1 \" \") (str.indexof col1 col2 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,33,476,20361,365,1321,30,3888,1714,664,33,664,34,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":384,"metadata":{"sampler_time":{"secs":0,"nanos":125167},"constraint_time":{"secs":0,"nanos":2371123},"parser_time":{"secs":0,"nanos":954170},"transformer_time":{"secs":0,"nanos":545530505},"trie_time":{"secs":0,"nanos":5016681},"total_time":{"secs":0,"nanos":727950792}},"pass":false,"entropy":4.65914214660579,"entropy_diff":2.7788438217157818e-11,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" (str.replace col1 \" \" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,365,1321,30,9630,664,33,476,476,476,476,1292,216,33,25,216,33,25,25]}
{"generation":385,"metadata":{"sampler_time":{"secs":0,"nanos":136038},"constraint_time":{"secs":0,"nanos":1556581},"parser_time":{"secs":0,"nanos":747000},"transformer_time":{"secs":0,"nanos":480407959},"trie_time":{"secs":0,"nanos":5107338},"total_time":{"secs":0,"nanos":632339500}},"pass":false,"entropy":4.659142146549358,"entropy_diff":5.643219225248686e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" col2) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,14074,18,664,34,25,216,33,25,216,33,25,25]}
{"generation":386,"metadata":{"sampler_time":{"secs":0,"nanos":108122},"constraint_time":{"secs":0,"nanos":1565376},"parser_time":{"secs":0,"nanos":752286},"transformer_time":{"secs":0,"nanos":477343877},"trie_time":{"secs":0,"nanos":5199084},"total_time":{"secs":0,"nanos":632790625}},"pass":false,"entropy":4.659142146348447,"entropy_diff":2.0091039942826683e-10,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) 2) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,34,25,216,32,25,25]}
{"generation":387,"metadata":{"sampler_time":{"secs":0,"nanos":144292},"constraint_time":{"secs":0,"nanos":6750588},"parser_time":{"secs":0,"nanos":864420},"transformer_time":{"secs":0,"nanos":561931586},"trie_time":{"secs":0,"nanos":5181333},"total_time":{"secs":0,"nanos":751332458}},"pass":false,"entropy":4.659142146343573,"entropy_diff":4.874323167314287e-12,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,14074,18,25,216,33,25,216,33,25,25]}
{"generation":388,"metadata":{"sampler_time":{"secs":0,"nanos":119999},"constraint_time":{"secs":0,"nanos":4632623},"parser_time":{"secs":0,"nanos":889466},"transformer_time":{"secs":0,"nanos":553222707},"trie_time":{"secs":0,"nanos":5106994},"total_time":{"secs":0,"nanos":737677541}},"pass":false,"entropy":4.659142146335536,"entropy_diff":8.037126519866433e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 \",\" \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,216,1002,18,476,476,1292,216,33,25,216,33,25,25]}
{"generation":389,"metadata":{"sampler_time":{"secs":0,"nanos":123257},"constraint_time":{"secs":0,"nanos":6403244},"parser_time":{"secs":0,"nanos":887752},"transformer_time":{"secs":0,"nanos":554123502},"trie_time":{"secs":0,"nanos":5107920},"total_time":{"secs":0,"nanos":740845875}},"pass":false,"entropy":4.65914214632913,"entropy_diff":6.405542762877303e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,32,25,476,20361,216,33,25,216,33,25,25]}
{"generation":390,"metadata":{"sampler_time":{"secs":0,"nanos":79543},"constraint_time":{"secs":0,"nanos":1666752},"parser_time":{"secs":0,"nanos":846538},"transformer_time":{"secs":0,"nanos":480416960},"trie_time":{"secs":0,"nanos":5092460},"total_time":{"secs":0,"nanos":636880125}},"pass":false,"entropy":4.659142146318271,"entropy_diff":1.0858869359253731e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col2) 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,34,25,216,33,25,216,32,25,25]}
{"generation":391,"metadata":{"sampler_time":{"secs":0,"nanos":73419},"constraint_time":{"secs":0,"nanos":2947994},"parser_time":{"secs":0,"nanos":684616},"transformer_time":{"secs":0,"nanos":465045792},"trie_time":{"secs":0,"nanos":5041251},"total_time":{"secs":0,"nanos":620424666}},"pass":false,"entropy":4.659142146310306,"entropy_diff":7.965184067870723e-12,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \",\") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,42934,25,216,32,25,216,33,25,25]}
{"generation":392,"metadata":{"sampler_time":{"secs":0,"nanos":181000},"constraint_time":{"secs":0,"nanos":7600789},"parser_time":{"secs":0,"nanos":1447587},"transformer_time":{"secs":0,"nanos":836753874},"trie_time":{"secs":0,"nanos":5158515},"total_time":{"secs":1,"nanos":112931333}},"pass":false,"entropy":4.659142146292856,"entropy_diff":1.745004141184836e-11,"tokenization_error":true,"tokens_after_tokenization_error":77,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,1292,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":393,"metadata":{"sampler_time":{"secs":0,"nanos":195661},"constraint_time":{"secs":0,"nanos":8611916},"parser_time":{"secs":0,"nanos":1513461},"transformer_time":{"secs":0,"nanos":828778333},"trie_time":{"secs":0,"nanos":5245801},"total_time":{"secs":1,"nanos":108035334}},"pass":false,"entropy":4.659142146292265,"entropy_diff":5.915268275202834e-13,"tokenization_error":true,"tokens_after_tokenization_error":76,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) col2) (str.indexof col2 (str.replace col2 col2 col1) (str.indexof col1 col2 1))) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,664,34,25,365,1321,30,3888,1714,664,34,365,1321,30,9630,664,34,664,34,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":394,"metadata":{"sampler_time":{"secs":0,"nanos":121251},"constraint_time":{"secs":0,"nanos":5340375},"parser_time":{"secs":0,"nanos":963749},"transformer_time":{"secs":0,"nanos":553183754},"trie_time":{"secs":0,"nanos":5311465},"total_time":{"secs":0,"nanos":735568583}},"pass":false,"entropy":4.659142146291601,"entropy_diff":6.634692795159935e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,32,25,216,33,25,25]}
{"generation":395,"metadata":{"sampler_time":{"secs":0,"nanos":101456},"constraint_time":{"secs":0,"nanos":4994004},"parser_time":{"secs":0,"nanos":854338},"transformer_time":{"secs":0,"nanos":551993627},"trie_time":{"secs":0,"nanos":5351447},"total_time":{"secs":0,"nanos":734529709}},"pass":false,"entropy":4.6591421462914315,"entropy_diff":1.6964207816272392e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":396,"metadata":{"sampler_time":{"secs":0,"nanos":107673},"constraint_time":{"secs":0,"nanos":4852375},"parser_time":{"secs":0,"nanos":894743},"transformer_time":{"secs":0,"nanos":544674872},"trie_time":{"secs":0,"nanos":5316999},"total_time":{"secs":0,"nanos":726487917}},"pass":false,"entropy":4.659142146291061,"entropy_diff":3.703704010149522e-13,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,476,25,476,20361,216,33,25,216,33,25,25]}
{"generation":397,"metadata":{"sampler_time":{"secs":0,"nanos":125379},"constraint_time":{"secs":0,"nanos":4852959},"parser_time":{"secs":0,"nanos":925878},"transformer_time":{"secs":0,"nanos":539421162},"trie_time":{"secs":0,"nanos":5352034},"total_time":{"secs":0,"nanos":718256250}},"pass":false,"entropy":4.659142146289874,"entropy_diff":1.1874945471390674e-12,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,42934,25,476,20361,216,33,25,216,33,25,25]}
{"generation":398,"metadata":{"sampler_time":{"secs":0,"nanos":93838},"constraint_time":{"secs":0,"nanos":5495458},"parser_time":{"secs":0,"nanos":894789},"transformer_time":{"secs":0,"nanos":536296955},"trie_time":{"secs":0,"nanos":5650369},"total_time":{"secs":0,"nanos":712612042}},"pass":false,"entropy":4.659142146286473,"entropy_diff":3.4008351690317795e-12,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,32,25,664,33,25,216,33,25,216,33,25,25]}
{"generation":399,"metadata":{"sampler_time":{"secs":0,"nanos":134333},"constraint_time":{"secs":0,"nanos":5472791},"parser_time":{"secs":0,"nanos":910748},"transformer_time":{"secs":0,"nanos":545452457},"trie_time":{"secs":0,"nanos":5410377},"total_time":{"secs":0,"nanos":729386167}},"pass":false,"entropy":4.6591421462813285,"entropy_diff":5.144329406903125e-12,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,476,20361,216,33,25,216,33,25,25]}
{"generation":400,"metadata":{"sampler_time":{"secs":0,"nanos":138162},"constraint_time":{"secs":0,"nanos":6566959},"parser_time":{"secs":0,"nanos":955913},"transformer_time":{"secs":0,"nanos":602624038},"trie_time":{"secs":0,"nanos":5455548},"total_time":{"secs":0,"nanos":803577666}},"pass":false,"entropy":4.659142146280694,"entropy_diff":6.341593916658894e-13,"tokenization_error":true,"tokens_after_tokenization_error":49,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":401,"metadata":{"sampler_time":{"secs":0,"nanos":210956},"constraint_time":{"secs":0,"nanos":6529335},"parser_time":{"secs":0,"nanos":1350539},"transformer_time":{"secs":0,"nanos":829814661},"trie_time":{"secs":0,"nanos":5561933},"total_time":{"secs":1,"nanos":106511041}},"pass":false,"entropy":4.6591421462797635,"entropy_diff":9.308109838457312e-13,"tokenization_error":true,"tokens_after_tokenization_error":76,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col2) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col2 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,34,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,34,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":402,"metadata":{"sampler_time":{"secs":0,"nanos":143452},"constraint_time":{"secs":0,"nanos":4963249},"parser_time":{"secs":0,"nanos":859158},"transformer_time":{"secs":0,"nanos":545239413},"trie_time":{"secs":0,"nanos":5517051},"total_time":{"secs":0,"nanos":724517375}},"pass":false,"entropy":4.659142146279593,"entropy_diff":1.7053025658242404e-13,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,42934,25,216,33,25,216,33,25,25]}
{"generation":403,"metadata":{"sampler_time":{"secs":0,"nanos":118124},"constraint_time":{"secs":0,"nanos":6104419},"parser_time":{"secs":0,"nanos":841909},"transformer_time":{"secs":0,"nanos":552497044},"trie_time":{"secs":0,"nanos":5503582},"total_time":{"secs":0,"nanos":738512000}},"pass":false,"entropy":4.659142146279253,"entropy_diff":3.4017233474514796e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,34,25,476,20361,216,33,25,216,33,25,25]}
{"generation":404,"metadata":{"sampler_time":{"secs":0,"nanos":131205},"constraint_time":{"secs":0,"nanos":1570665},"parser_time":{"secs":0,"nanos":763418},"transformer_time":{"secs":0,"nanos":527396788},"trie_time":{"secs":0,"nanos":5481633},"total_time":{"secs":0,"nanos":696718417}},"pass":false,"entropy":4.659142146272608,"entropy_diff":6.644462757776637e-12,"tokenization_error":true,"tokens_after_tokenization_error":40,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,476,25,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":405,"metadata":{"sampler_time":{"secs":0,"nanos":116083},"constraint_time":{"secs":0,"nanos":1444585},"parser_time":{"secs":0,"nanos":717167},"transformer_time":{"secs":0,"nanos":488802623},"trie_time":{"secs":0,"nanos":5415552},"total_time":{"secs":0,"nanos":643992750}},"pass":false,"entropy":4.6591421462600655,"entropy_diff":1.2542855643005169e-11,"tokenization_error":true,"tokens_after_tokenization_error":35,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,216,18,664,33,25,216,33,25,216,33,25,25]}
{"generation":406,"metadata":{"sampler_time":{"secs":0,"nanos":158882},"constraint_time":{"secs":0,"nanos":5973333},"parser_time":{"secs":0,"nanos":1076656},"transformer_time":{"secs":0,"nanos":661902418},"trie_time":{"secs":0,"nanos":5602541},"total_time":{"secs":0,"nanos":882535250}},"pass":false,"entropy":4.65914214619262,"entropy_diff":6.744560465676841e-11,"tokenization_error":true,"tokens_after_tokenization_error":56,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) (str.replace col1 col2 \" \")) 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":407,"metadata":{"sampler_time":{"secs":0,"nanos":84743},"constraint_time":{"secs":0,"nanos":8390750},"parser_time":{"secs":0,"nanos":977045},"transformer_time":{"secs":0,"nanos":587892913},"trie_time":{"secs":0,"nanos":6570748},"total_time":{"secs":0,"nanos":787712958}},"pass":false,"entropy":4.659142146192234,"entropy_diff":3.8546943414985435e-13,"tokenization_error":true,"tokens_after_tokenization_error":47,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,20361,476,20361,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":408,"metadata":{"sampler_time":{"secs":0,"nanos":118083},"constraint_time":{"secs":0,"nanos":4917082},"parser_time":{"secs":0,"nanos":1053114},"transformer_time":{"secs":0,"nanos":586024586},"trie_time":{"secs":0,"nanos":5559836},"total_time":{"secs":0,"nanos":781703708}},"pass":false,"entropy":4.6591421461915745,"entropy_diff":6.59916565837193e-13,"tokenization_error":true,"tokens_after_tokenization_error":47,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,20361,476,20361,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":409,"metadata":{"sampler_time":{"secs":0,"nanos":137996},"constraint_time":{"secs":0,"nanos":6339251},"parser_time":{"secs":0,"nanos":880885},"transformer_time":{"secs":0,"nanos":561261748},"trie_time":{"secs":0,"nanos":5658291},"total_time":{"secs":0,"nanos":748301417}},"pass":false,"entropy":4.659142146190614,"entropy_diff":9.601208716958354e-13,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,216,1002,18,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":410,"metadata":{"sampler_time":{"secs":0,"nanos":98542},"constraint_time":{"secs":0,"nanos":5087834},"parser_time":{"secs":0,"nanos":911726},"transformer_time":{"secs":0,"nanos":538923788},"trie_time":{"secs":0,"nanos":5807296},"total_time":{"secs":0,"nanos":719351792}},"pass":false,"entropy":4.659142146188232,"entropy_diff":2.382094521635736e-12,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \",\") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,42934,25,476,20361,216,33,25,216,33,25,25]}
{"generation":411,"metadata":{"sampler_time":{"secs":0,"nanos":99001},"constraint_time":{"secs":0,"nanos":4822249},"parser_time":{"secs":0,"nanos":821498},"transformer_time":{"secs":0,"nanos":535295000},"trie_time":{"secs":0,"nanos":5585710},"total_time":{"secs":0,"nanos":711777708}},"pass":false,"entropy":4.659142146187312,"entropy_diff":9.201528428093297e-13,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,664,33,216,33,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":412,"metadata":{"sampler_time":{"secs":0,"nanos":118335},"constraint_time":{"secs":0,"nanos":1779498},"parser_time":{"secs":0,"nanos":917621},"transformer_time":{"secs":0,"nanos":553672708},"trie_time":{"secs":0,"nanos":5636124},"total_time":{"secs":0,"nanos":739203417}},"pass":false,"entropy":4.659142146179655,"entropy_diff":7.65698615623478e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col2 \" \" 1)) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,476,25,365,1321,30,3888,1714,664,34,476,476,216,33,1292,216,33,25,25]}
{"generation":413,"metadata":{"sampler_time":{"secs":0,"nanos":128036},"constraint_time":{"secs":0,"nanos":5372458},"parser_time":{"secs":0,"nanos":871803},"transformer_time":{"secs":0,"nanos":560091786},"trie_time":{"secs":0,"nanos":5793079},"total_time":{"secs":0,"nanos":746429667}},"pass":false,"entropy":4.659142146162062,"entropy_diff":1.759303813742008e-11,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,476,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":414,"metadata":{"sampler_time":{"secs":0,"nanos":108544},"constraint_time":{"secs":0,"nanos":5886297},"parser_time":{"secs":0,"nanos":879423},"transformer_time":{"secs":0,"nanos":563662338},"trie_time":{"secs":0,"nanos":5713789},"total_time":{"secs":0,"nanos":746936334}},"pass":false,"entropy":4.659142146161041,"entropy_diff":1.021405182655144e-12,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \",\") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,216,18,42934,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":415,"metadata":{"sampler_time":{"secs":0,"nanos":113997},"constraint_time":{"secs":0,"nanos":8136833},"parser_time":{"secs":0,"nanos":918045},"transformer_time":{"secs":0,"nanos":555587333},"trie_time":{"secs":0,"nanos":5692364},"total_time":{"secs":0,"nanos":744295792}},"pass":false,"entropy":4.6591421461601845,"entropy_diff":8.562039965909207e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,34,25,216,33,25,25]}
{"generation":416,"metadata":{"sampler_time":{"secs":0,"nanos":106504},"constraint_time":{"secs":0,"nanos":6683919},"parser_time":{"secs":0,"nanos":909434},"transformer_time":{"secs":0,"nanos":561163870},"trie_time":{"secs":0,"nanos":6318173},"total_time":{"secs":0,"nanos":746793667}},"pass":false,"entropy":4.659142146159554,"entropy_diff":6.306066779870889e-13,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col2 \",\" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,34,216,1002,18,476,476,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":417,"metadata":{"sampler_time":{"secs":0,"nanos":136831},"constraint_time":{"secs":0,"nanos":2342170},"parser_time":{"secs":0,"nanos":841964},"transformer_time":{"secs":0,"nanos":537427754},"trie_time":{"secs":0,"nanos":5707832},"total_time":{"secs":0,"nanos":719277709}},"pass":false,"entropy":4.659142146144874,"entropy_diff":1.467981292080367e-11,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,476,49088,216,33,25,216,33,25,25]}
{"generation":418,"metadata":{"sampler_time":{"secs":0,"nanos":214704},"constraint_time":{"secs":0,"nanos":5432126},"parser_time":{"secs":0,"nanos":1319129},"transformer_time":{"secs":0,"nanos":830676584},"trie_time":{"secs":0,"nanos":5748905},"total_time":{"secs":1,"nanos":109924875}},"pass":false,"entropy":4.659142146143476,"entropy_diff":1.3979928326079971e-12,"tokenization_error":true,"tokens_after_tokenization_error":76,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 col1)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,664,33,25,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":419,"metadata":{"sampler_time":{"secs":0,"nanos":108170},"constraint_time":{"secs":0,"nanos":2343584},"parser_time":{"secs":0,"nanos":847788},"transformer_time":{"secs":0,"nanos":545107124},"trie_time":{"secs":0,"nanos":5824257},"total_time":{"secs":0,"nanos":729272708}},"pass":false,"entropy":4.659142146143222,"entropy_diff":2.540190280342358e-13,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.replace col1 col1 \" \")) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,9630,664,33,664,33,476,476,1292,216,33,25,216,33,25,25]}
{"generation":420,"metadata":{"sampler_time":{"secs":0,"nanos":106543},"constraint_time":{"secs":0,"nanos":6660168},"parser_time":{"secs":0,"nanos":891080},"transformer_time":{"secs":0,"nanos":553199830},"trie_time":{"secs":0,"nanos":5852373},"total_time":{"secs":0,"nanos":740543708}},"pass":false,"entropy":4.659142146142777,"entropy_diff":4.4497738826976274e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,216,32,25,216,33,25,25]}
{"generation":421,"metadata":{"sampler_time":{"secs":0,"nanos":115169},"constraint_time":{"secs":0,"nanos":3675414},"parser_time":{"secs":0,"nanos":846336},"transformer_time":{"secs":0,"nanos":564453292},"trie_time":{"secs":0,"nanos":5817040},"total_time":{"secs":0,"nanos":752762125}},"pass":false,"entropy":4.659142146142123,"entropy_diff":6.536993168992922e-13,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 (str.substr col1 1 1)) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,25,216,33,25,216,33,25,25]}
{"generation":422,"metadata":{"sampler_time":{"secs":0,"nanos":131959},"constraint_time":{"secs":0,"nanos":5777879},"parser_time":{"secs":0,"nanos":936578},"transformer_time":{"secs":0,"nanos":610234123},"trie_time":{"secs":0,"nanos":5790993},"total_time":{"secs":0,"nanos":809813709}},"pass":false,"entropy":4.659142146135576,"entropy_diff":6.547651310029323e-12,"tokenization_error":true,"tokens_after_tokenization_error":50,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":423,"metadata":{"sampler_time":{"secs":0,"nanos":340501},"constraint_time":{"secs":0,"nanos":10556954},"parser_time":{"secs":0,"nanos":2319982},"transformer_time":{"secs":1,"nanos":219911578},"trie_time":{"secs":0,"nanos":5888051},"total_time":{"secs":1,"nanos":622125792}},"pass":false,"entropy":4.659142146135301,"entropy_diff":2.744471316873387e-13,"tokenization_error":true,"tokens_after_tokenization_error":122,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") (str.indexof col1 (str.replace col1 \",\" \" \") (str.indexof col1 \",\" 1))) (str.indexof col1 (str.replace col1 \",\" \" \") (str.indexof col1 (str.replace col1 \",\" \",\") (str.indexof col1 \",\" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,20361,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,216,1002,18,476,476,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,216,1002,18,476,476,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,216,1002,18,216,1002,18,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,25,25]}
{"generation":424,"metadata":{"sampler_time":{"secs":0,"nanos":116873},"constraint_time":{"secs":0,"nanos":6187538},"parser_time":{"secs":0,"nanos":917336},"transformer_time":{"secs":0,"nanos":557062578},"trie_time":{"secs":0,"nanos":5833503},"total_time":{"secs":0,"nanos":744448667}},"pass":false,"entropy":4.659142146134714,"entropy_diff":5.870859354217828e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,32,25,476,20361,216,33,25,216,33,25,25]}
{"generation":425,"metadata":{"sampler_time":{"secs":0,"nanos":116789},"constraint_time":{"secs":0,"nanos":8128373},"parser_time":{"secs":0,"nanos":882622},"transformer_time":{"secs":0,"nanos":536542748},"trie_time":{"secs":0,"nanos":5839719},"total_time":{"secs":0,"nanos":719887250}},"pass":false,"entropy":4.659142146129804,"entropy_diff":4.909850304102292e-12,"tokenization_error":true,"tokens_after_tokenization_error":41,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.at col1 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,261,216,2283,33,216,32,25,476,20361,216,33,25,216,33,25,25]}
{"generation":426,"metadata":{"sampler_time":{"secs":0,"nanos":136673},"constraint_time":{"secs":0,"nanos":2946327},"parser_time":{"secs":0,"nanos":1004204},"transformer_time":{"secs":0,"nanos":628514831},"trie_time":{"secs":0,"nanos":5826413},"total_time":{"secs":0,"nanos":839165000}},"pass":false,"entropy":4.659142146094259,"entropy_diff":3.554578853481871e-11,"tokenization_error":true,"tokens_after_tokenization_error":52,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 \" \") 1) (str.indexof col1 (str.replace col1 col1 \" \") 1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,476,25,216,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,216,33,25,25,25]}
{"generation":427,"metadata":{"sampler_time":{"secs":0,"nanos":74126},"constraint_time":{"secs":0,"nanos":1749667},"parser_time":{"secs":0,"nanos":730705},"transformer_time":{"secs":0,"nanos":469614542},"trie_time":{"secs":0,"nanos":5823917},"total_time":{"secs":0,"nanos":625542083}},"pass":false,"entropy":4.659142146075895,"entropy_diff":1.836397700571979e-11,"tokenization_error":true,"tokens_after_tokenization_error":33,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 \" \") 1) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,216,33,25,216,32,25,25]}
{"generation":428,"metadata":{"sampler_time":{"secs":0,"nanos":83042},"constraint_time":{"secs":0,"nanos":3091121},"parser_time":{"secs":0,"nanos":697132},"transformer_time":{"secs":0,"nanos":480451045},"trie_time":{"secs":0,"nanos":5825370},"total_time":{"secs":0,"nanos":638726834}},"pass":false,"entropy":4.659142146067561,"entropy_diff":8.333778112046275e-12,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col2 col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,664,33,25,216,33,25,216,33,25,25]}
{"generation":429,"metadata":{"sampler_time":{"secs":0,"nanos":80920},"constraint_time":{"secs":0,"nanos":1649837},"parser_time":{"secs":0,"nanos":781696},"transformer_time":{"secs":0,"nanos":476589669},"trie_time":{"secs":0,"nanos":5767049},"total_time":{"secs":0,"nanos":632730209}},"pass":false,"entropy":4.659142146009857,"entropy_diff":5.7704063749497436e-11,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \" \" \" \") 0) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,476,476,476,25,216,32,25,216,33,25,25]}
{"generation":430,"metadata":{"sampler_time":{"secs":0,"nanos":108499},"constraint_time":{"secs":0,"nanos":5916082},"parser_time":{"secs":0,"nanos":935040},"transformer_time":{"secs":0,"nanos":571870377},"trie_time":{"secs":0,"nanos":5964202},"total_time":{"secs":0,"nanos":762805583}},"pass":false,"entropy":4.659142146000382,"entropy_diff":9.475087381360936e-12,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":431,"metadata":{"sampler_time":{"secs":0,"nanos":117461},"constraint_time":{"secs":0,"nanos":6418546},"parser_time":{"secs":0,"nanos":894727},"transformer_time":{"secs":0,"nanos":568964587},"trie_time":{"secs":0,"nanos":5949624},"total_time":{"secs":0,"nanos":759012083}},"pass":false,"entropy":4.659142145996379,"entropy_diff":4.0030201375884644e-12,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 2) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,34,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":432,"metadata":{"sampler_time":{"secs":0,"nanos":126536},"constraint_time":{"secs":0,"nanos":6349829},"parser_time":{"secs":0,"nanos":895589},"transformer_time":{"secs":0,"nanos":553850500},"trie_time":{"secs":0,"nanos":5891082},"total_time":{"secs":0,"nanos":741058709}},"pass":false,"entropy":4.659142145994176,"entropy_diff":2.2026824808563106e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 1 2) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,33,216,34,25,476,20361,216,33,25,216,33,25,25]}
{"generation":433,"metadata":{"sampler_time":{"secs":0,"nanos":101042},"constraint_time":{"secs":0,"nanos":1850587},"parser_time":{"secs":0,"nanos":781169},"transformer_time":{"secs":0,"nanos":477657126},"trie_time":{"secs":0,"nanos":6333206},"total_time":{"secs":0,"nanos":635674500}},"pass":false,"entropy":4.659142145989697,"entropy_diff":4.4790837705477315e-12,"tokenization_error":true,"tokens_after_tokenization_error":34,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 \",\" col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,476,1627,664,33,25,216,33,25,216,33,25,25]}
{"generation":434,"metadata":{"sampler_time":{"secs":0,"nanos":142206},"constraint_time":{"secs":0,"nanos":7198623},"parser_time":{"secs":0,"nanos":1162667},"transformer_time":{"secs":0,"nanos":670055756},"trie_time":{"secs":0,"nanos":6235003},"total_time":{"secs":0,"nanos":896866291}},"pass":false,"entropy":4.659142145948367,"entropy_diff":4.132960640390593e-11,"tokenization_error":true,"tokens_after_tokenization_error":57,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col1 col1)) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,33,664,33,1292,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":435,"metadata":{"sampler_time":{"secs":0,"nanos":156789},"constraint_time":{"secs":0,"nanos":5641794},"parser_time":{"secs":0,"nanos":1151541},"transformer_time":{"secs":0,"nanos":664066255},"trie_time":{"secs":0,"nanos":6210952},"total_time":{"secs":0,"nanos":884461250}},"pass":false,"entropy":4.659142145948347,"entropy_diff":2.042810365310288e-14,"tokenization_error":true,"tokens_after_tokenization_error":56,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 col2 \" \")) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,664,34,476,49088,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":436,"metadata":{"sampler_time":{"secs":0,"nanos":137830},"constraint_time":{"secs":0,"nanos":6022209},"parser_time":{"secs":0,"nanos":1075867},"transformer_time":{"secs":0,"nanos":669925912},"trie_time":{"secs":0,"nanos":6127787},"total_time":{"secs":0,"nanos":893772792}},"pass":false,"entropy":4.659142145948332,"entropy_diff":1.509903313490213e-14,"tokenization_error":true,"tokens_after_tokenization_error":57,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.replace col1 \" \" \" \")) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,9630,664,33,476,476,476,476,1292,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":437,"metadata":{"sampler_time":{"secs":0,"nanos":126790},"constraint_time":{"secs":0,"nanos":5356878},"parser_time":{"secs":0,"nanos":835160},"transformer_time":{"secs":0,"nanos":552666749},"trie_time":{"secs":0,"nanos":6211128},"total_time":{"secs":0,"nanos":735612833}},"pass":false,"entropy":4.6591421459482945,"entropy_diff":3.730349362740526e-14,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 2) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,34,25,216,33,25,25]}
{"generation":438,"metadata":{"sampler_time":{"secs":0,"nanos":139130},"constraint_time":{"secs":0,"nanos":8101545},"parser_time":{"secs":0,"nanos":1081753},"transformer_time":{"secs":0,"nanos":688688421},"trie_time":{"secs":0,"nanos":6150189},"total_time":{"secs":0,"nanos":918549542}},"pass":false,"entropy":4.659142145948198,"entropy_diff":9.681144774731365e-14,"tokenization_error":true,"tokens_after_tokenization_error":59,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) (str.substr col1 1 1)) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,4103,1321,664,33,216,33,216,33,25,25,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":439,"metadata":{"sampler_time":{"secs":0,"nanos":137840},"constraint_time":{"secs":0,"nanos":5253085},"parser_time":{"secs":0,"nanos":919873},"transformer_time":{"secs":0,"nanos":545216753},"trie_time":{"secs":0,"nanos":6648875},"total_time":{"secs":0,"nanos":729852917}},"pass":false,"entropy":4.659142145948111,"entropy_diff":8.704148513061227e-14,"tokenization_error":true,"tokens_after_tokenization_error":42,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,14074,1715,216,33,25,216,33,25,25]}
{"generation":440,"metadata":{"sampler_time":{"secs":0,"nanos":106997},"constraint_time":{"secs":0,"nanos":5274164},"parser_time":{"secs":0,"nanos":925002},"transformer_time":{"secs":0,"nanos":552679540},"trie_time":{"secs":0,"nanos":6249495},"total_time":{"secs":0,"nanos":736863542}},"pass":false,"entropy":4.659142145947962,"entropy_diff":1.4832579608992091e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col2) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,34,25,664,33,25,216,33,25,216,33,25,25]}
{"generation":441,"metadata":{"sampler_time":{"secs":0,"nanos":124498},"constraint_time":{"secs":0,"nanos":6000541},"parser_time":{"secs":0,"nanos":980586},"transformer_time":{"secs":0,"nanos":554215460},"trie_time":{"secs":0,"nanos":6202447},"total_time":{"secs":0,"nanos":741607875}},"pass":false,"entropy":4.6591421459476425,"entropy_diff":3.197442310920451e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,476,476,20361,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":442,"metadata":{"sampler_time":{"secs":0,"nanos":202904},"constraint_time":{"secs":0,"nanos":8585623},"parser_time":{"secs":0,"nanos":1610919},"transformer_time":{"secs":0,"nanos":882121296},"trie_time":{"secs":0,"nanos":6323339},"total_time":{"secs":1,"nanos":185390875}},"pass":false,"entropy":4.65914214594694,"entropy_diff":7.025491299827991e-13,"tokenization_error":true,"tokens_after_tokenization_error":82,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") (str.replace col1 col1 \" \")) (str.indexof col1 (str.replace col1 col1 \" \") (str.indexof col1 col1 1))) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,9630,664,33,664,33,476,20361,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,476,20361,365,1321,30,3888,1714,664,33,664,33,216,33,7754,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":443,"metadata":{"sampler_time":{"secs":0,"nanos":213789},"constraint_time":{"secs":0,"nanos":9023372},"parser_time":{"secs":0,"nanos":1486659},"transformer_time":{"secs":0,"nanos":831252080},"trie_time":{"secs":0,"nanos":6381092},"total_time":{"secs":1,"nanos":122079291}},"pass":false,"entropy":4.659142145946625,"entropy_diff":3.1530333899354446e-13,"tokenization_error":true,"tokens_after_tokenization_error":76,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col2 \" \") (str.replace col1 col2 \" \")) (str.indexof col1 (str.replace col1 col2 \" \") (str.indexof col1 col2 1))) 0))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,9630,664,33,664,34,476,20361,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,34,476,20361,365,1321,30,3888,1714,664,33,664,34,216,33,7754,216,32,25,25]}
{"generation":444,"metadata":{"sampler_time":{"secs":0,"nanos":98169},"constraint_time":{"secs":0,"nanos":5362291},"parser_time":{"secs":0,"nanos":893035},"transformer_time":{"secs":0,"nanos":552050458},"trie_time":{"secs":0,"nanos":6413586},"total_time":{"secs":0,"nanos":736714875}},"pass":false,"entropy":4.65914214594614,"entropy_diff":4.849454171562684e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,476,216,18,476,476,25,476,20361,216,33,25,216,33,25,25]}
{"generation":445,"metadata":{"sampler_time":{"secs":0,"nanos":92300},"constraint_time":{"secs":0,"nanos":6107457},"parser_time":{"secs":0,"nanos":990912},"transformer_time":{"secs":0,"nanos":568337834},"trie_time":{"secs":0,"nanos":6430247},"total_time":{"secs":0,"nanos":759725375}},"pass":false,"entropy":4.659142145945833,"entropy_diff":3.064215547965432e-13,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,33,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":446,"metadata":{"sampler_time":{"secs":0,"nanos":109209},"constraint_time":{"secs":0,"nanos":4925042},"parser_time":{"secs":0,"nanos":1005487},"transformer_time":{"secs":0,"nanos":601434166},"trie_time":{"secs":0,"nanos":6550157},"total_time":{"secs":0,"nanos":798058625}},"pass":false,"entropy":4.659142145944564,"entropy_diff":1.269206961751479e-12,"tokenization_error":true,"tokens_after_tokenization_error":49,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 col1) col1) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,664,33,25,664,33,25,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":447,"metadata":{"sampler_time":{"secs":0,"nanos":134794},"constraint_time":{"secs":0,"nanos":4893454},"parser_time":{"secs":0,"nanos":950125},"transformer_time":{"secs":0,"nanos":560723871},"trie_time":{"secs":0,"nanos":6517250},"total_time":{"secs":0,"nanos":746962750}},"pass":false,"entropy":4.659142145944532,"entropy_diff":3.197442310920451e-14,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace col1 col1 \" \") \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,664,33,664,33,476,476,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":448,"metadata":{"sampler_time":{"secs":0,"nanos":95993},"constraint_time":{"secs":0,"nanos":5398284},"parser_time":{"secs":0,"nanos":989123},"transformer_time":{"secs":0,"nanos":551605880},"trie_time":{"secs":0,"nanos":6359920},"total_time":{"secs":0,"nanos":736750125}},"pass":false,"entropy":4.659142145944258,"entropy_diff":2.744471316873387e-13,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.replace \",\" \" \" \" \") \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,9630,476,1627,476,476,476,476,25,476,476,25,216,33,25,216,33,25,25]}
{"generation":449,"metadata":{"sampler_time":{"secs":0,"nanos":336280},"constraint_time":{"secs":0,"nanos":10521960},"parser_time":{"secs":0,"nanos":2291012},"transformer_time":{"secs":1,"nanos":232445078},"trie_time":{"secs":0,"nanos":6597477},"total_time":{"secs":1,"nanos":636724208}},"pass":false,"entropy":4.65914214593296,"entropy_diff":1.1297629498585593e-11,"tokenization_error":true,"tokens_after_tokenization_error":123,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) \" \") (str.indexof col1 (str.replace col1 \",\" \" \") (str.indexof col1 \",\" 1))) (str.indexof col1 (str.replace col1 \",\" \" \") (str.indexof col1 (str.replace col1 \",\" \",\") (str.indexof col1 \",\" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,216,1002,18,476,476,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,216,1002,18,476,476,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,216,1002,18,216,1002,18,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,25,25]}
{"generation":450,"metadata":{"sampler_time":{"secs":0,"nanos":197744},"constraint_time":{"secs":0,"nanos":8416246},"parser_time":{"secs":0,"nanos":1140335},"transformer_time":{"secs":0,"nanos":687576955},"trie_time":{"secs":0,"nanos":6652630},"total_time":{"secs":0,"nanos":918334458}},"pass":false,"entropy":4.659142145932555,"entropy_diff":4.050093593832571e-13,"tokenization_error":true,"tokens_after_tokenization_error":59,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) (str.replace col1 \",\" \" \")) 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,365,1321,30,9630,664,33,216,1002,18,476,476,1292,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":451,"metadata":{"sampler_time":{"secs":0,"nanos":127036},"constraint_time":{"secs":0,"nanos":6078084},"parser_time":{"secs":0,"nanos":867586},"transformer_time":{"secs":0,"nanos":555679211},"trie_time":{"secs":0,"nanos":6705917},"total_time":{"secs":0,"nanos":744657416}},"pass":false,"entropy":4.6591421459311455,"entropy_diff":1.4095391520640987e-12,"tokenization_error":true,"tokens_after_tokenization_error":43,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 2 0) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,34,216,32,25,476,20361,216,33,25,216,33,25,25]}
{"generation":452,"metadata":{"sampler_time":{"secs":0,"nanos":148248},"constraint_time":{"secs":0,"nanos":6856959},"parser_time":{"secs":0,"nanos":993662},"transformer_time":{"secs":0,"nanos":611122964},"trie_time":{"secs":0,"nanos":6668779},"total_time":{"secs":0,"nanos":814241917}},"pass":false,"entropy":4.659142145929055,"entropy_diff":2.0907719999740948e-12,"tokenization_error":true,"tokens_after_tokenization_error":50,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \" \") 1) (str.to.int col2)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,476,476,25,216,33,25,365,1321,30,1141,30,591,664,34,1292,25]}
{"generation":453,"metadata":{"sampler_time":{"secs":0,"nanos":142539},"constraint_time":{"secs":0,"nanos":6301792},"parser_time":{"secs":0,"nanos":947270},"transformer_time":{"secs":0,"nanos":612168083},"trie_time":{"secs":0,"nanos":6799757},"total_time":{"secs":0,"nanos":813567000}},"pass":false,"entropy":4.659142145926917,"entropy_diff":2.1378454562182014e-12,"tokenization_error":true,"tokens_after_tokenization_error":50,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 1) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,33,216,33,25,476,476,25,216,33,25,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":454,"metadata":{"sampler_time":{"secs":0,"nanos":139957},"constraint_time":{"secs":0,"nanos":6296623},"parser_time":{"secs":0,"nanos":939210},"transformer_time":{"secs":0,"nanos":572736206},"trie_time":{"secs":0,"nanos":6759838},"total_time":{"secs":0,"nanos":763375709}},"pass":false,"entropy":4.65914214592597,"entropy_diff":9.467981954003335e-13,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 0 1) col1) 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,33,216,32,216,33,25,265,308,33,25,216,33,25,216,33,25,25]}
{"generation":455,"metadata":{"sampler_time":{"secs":0,"nanos":124131},"constraint_time":{"secs":0,"nanos":5929623},"parser_time":{"secs":0,"nanos":926170},"transformer_time":{"secs":0,"nanos":569242332},"trie_time":{"secs":0,"nanos":6733967},"total_time":{"secs":0,"nanos":761439792}},"pass":false,"entropy":4.659142145924624,"entropy_diff":1.3464784842653899e-12,"tokenization_error":true,"tokens_after_tokenization_error":45,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col2 0 1) \",\") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,664,34,216,32,216,33,25,216,1002,18,25,216,33,25,216,33,25,25]}
{"generation":456,"metadata":{"sampler_time":{"secs":0,"nanos":135623},"constraint_time":{"secs":0,"nanos":8245375},"parser_time":{"secs":0,"nanos":877284},"transformer_time":{"secs":0,"nanos":556938999},"trie_time":{"secs":0,"nanos":8132080},"total_time":{"secs":0,"nanos":753911083}},"pass":false,"entropy":4.659142145922777,"entropy_diff":1.8465229345565604e-12,"tokenization_error":true,"tokens_after_tokenization_error":44,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 (str.substr col1 1 1) \" \") 1) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,365,1321,30,4103,1321,216,2283,33,216,33,216,33,25,476,20361,216,33,25,216,33,25,25]}
{"generation":457,"metadata":{"sampler_time":{"secs":0,"nanos":174920},"constraint_time":{"secs":0,"nanos":4411673},"parser_time":{"secs":0,"nanos":1254330},"transformer_time":{"secs":0,"nanos":706351832},"trie_time":{"secs":0,"nanos":7335985},"total_time":{"secs":0,"nanos":949607125}},"pass":false,"entropy":4.659142145900245,"entropy_diff":2.2532198329372477e-11,"tokenization_error":true,"tokens_after_tokenization_error":61,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \" \" 1))) 1))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,216,33,25,25]}
{"generation":458,"metadata":{"sampler_time":{"secs":0,"nanos":320290},"constraint_time":{"secs":0,"nanos":6403168},"parser_time":{"secs":0,"nanos":2066888},"transformer_time":{"secs":1,"nanos":112520252},"trie_time":{"secs":0,"nanos":6923148},"total_time":{"secs":1,"nanos":502207375}},"pass":false,"entropy":4.659142145900236,"entropy_diff":8.881784197001252e-15,"tokenization_error":true,"tokens_after_tokenization_error":109,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \",\" 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 \",\" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,216,1002,18,216,33,7754,25,25]}
{"generation":459,"metadata":{"sampler_time":{"secs":0,"nanos":315051},"constraint_time":{"secs":0,"nanos":5627998},"parser_time":{"secs":0,"nanos":1884290},"transformer_time":{"secs":1,"nanos":109441376},"trie_time":{"secs":0,"nanos":6957084},"total_time":{"secs":1,"nanos":494762042}},"pass":false,"entropy":4.65914214590023,"entropy_diff":6.217248937900877e-15,"tokenization_error":true,"tokens_after_tokenization_error":109,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \",\") (str.indexof col1 \" \" 1))) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 \",\") (str.indexof col1 \" \" 1)))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,216,1002,18,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,216,1002,18,25,365,1321,30,3888,1714,664,33,476,476,216,33,7754,25,25]}
{"generation":460,"metadata":{"sampler_time":{"secs":0,"nanos":203372},"constraint_time":{"secs":0,"nanos":6146537},"parser_time":{"secs":0,"nanos":1540340},"transformer_time":{"secs":0,"nanos":896869207},"trie_time":{"secs":0,"nanos":7067918},"total_time":{"secs":1,"nanos":194758583}},"pass":false,"entropy":4.659142145900138,"entropy_diff":9.14823772291129e-14,"tokenization_error":true,"tokens_after_tokenization_error":84,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))) (str.indexof col1 (str.replace col1 col1 col1) (str.to.int col1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,25,1292,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,1141,30,591,664,33,25,1292,25]}
{"generation":461,"metadata":{"sampler_time":{"secs":0,"nanos":162119},"constraint_time":{"secs":0,"nanos":3815036},"parser_time":{"secs":0,"nanos":1064823},"transformer_time":{"secs":0,"nanos":681068004},"trie_time":{"secs":0,"nanos":7161342},"total_time":{"secs":0,"nanos":906052625}},"pass":false,"entropy":4.659142145900121,"entropy_diff":1.687538997430238e-14,"tokenization_error":true,"tokens_after_tokenization_error":58,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) (str.to.int col1)))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,1292,365,1321,30,1141,30,591,664,33,1292,25]}
{"generation":462,"metadata":{"sampler_time":{"secs":0,"nanos":210534},"constraint_time":{"secs":0,"nanos":5106539},"parser_time":{"secs":0,"nanos":1673671},"transformer_time":{"secs":0,"nanos":946879498},"trie_time":{"secs":0,"nanos":7494888},"total_time":{"secs":1,"nanos":263518750}},"pass":false,"entropy":4.65914214590011,"entropy_diff":1.1546319456101628e-14,"tokenization_error":true,"tokens_after_tokenization_error":90,"result":"(define-fun f ((col1 String) (col2 String)) String (str.++ (str.++ (str.substr col1 0 1) \" \") (str.substr col1 (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1)) (str.indexof col1 (str.replace col1 col1 col1) (str.indexof col1 (str.replace col1 col1 col1) 1))))","tokens":[24,23405,29,7312,275,18048,2283,33,16481,25,365,2283,34,16481,1292,16481,365,1321,30,11444,365,1321,30,11444,365,1321,30,4103,1321,664,33,216,32,216,33,25,476,476,25,365,1321,30,4103,1321,664,33,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,365,1321,30,3888,1714,664,33,365,1321,30,9630,664,33,664,33,664,33,25,216,33,25,1292,25]}
{"average_metadata":{"sampler_time":{"secs":0,"nanos":108468},"constraint_time":{"secs":0,"nanos":2947499},"parser_time":{"secs":0,"nanos":736437},"transformer_time":{"secs":0,"nanos":479084938},"trie_time":{"secs":0,"nanos":2688855},"total_time":{"secs":0,"nanos":642849919}},"average_entropy":4.684831858526211,"average_entropy_diff":2.173546155704041,"average_tokenization_error":0.9892008639308856,"average_tokens_after_first_token_error":32.213822894168466,"total_duration":{"secs":301,"nanos":245577584},"average_token_count":0.0}
